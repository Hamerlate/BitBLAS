[
  {
    "nodes": [
      28
    ],
    "node_names": [
      "Reshape_28"
    ],
    "group_id": 0,
    "input_desc": [
      [
        28,
        0
      ]
    ],
    "output_desc": [
      [
        28,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(1) Group0(float* __restrict__ input0, float* __restrict__ output0) {\n  output0[0] = input0[0];\n}\n\n",
    "block_size": [
      1,
      1,
      1
    ],
    "grid_size": [
      1,
      1,
      1
    ],
    "latency": 0.002730666659772396,
    "name": "Group0",
    "gain": 0
  },
  {
    "nodes": [
      27
    ],
    "node_names": [
      "Convert_27"
    ],
    "group_id": 1,
    "input_desc": [
      [
        27,
        0
      ]
    ],
    "output_desc": [
      [
        27,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group1(half* __restrict__ input0, float* __restrict__ output0) {\n  output0[(((((((int)blockIdx.x) >> 5) * 16384) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 31) * 256)) + (((int)threadIdx.x) & 63))] = ((float)input0[(((((((int)blockIdx.x) >> 5) * 16384) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 31) * 256)) + (((int)threadIdx.x) & 63))]);\n  output0[((((((((int)blockIdx.x) >> 5) * 16384) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 31) * 256)) + (((int)threadIdx.x) & 63)) + 64)] = ((float)input0[((((((((int)blockIdx.x) >> 5) * 16384) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 31) * 256)) + (((int)threadIdx.x) & 63)) + 64)]);\n  output0[((((((((int)blockIdx.x) >> 5) * 16384) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 31) * 256)) + (((int)threadIdx.x) & 63)) + 128)] = ((float)input0[((((((((int)blockIdx.x) >> 5) * 16384) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 31) * 256)) + (((int)threadIdx.x) & 63)) + 128)]);\n  output0[((((((((int)blockIdx.x) >> 5) * 16384) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 31) * 256)) + (((int)threadIdx.x) & 63)) + 192)] = ((float)input0[((((((((int)blockIdx.x) >> 5) * 16384) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 31) * 256)) + (((int)threadIdx.x) & 63)) + 192)]);\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      65536,
      1,
      1
    ],
    "latency": 0.13380266726016998,
    "name": "Group1",
    "gain": 0
  },
  {
    "nodes": [
      152
    ],
    "node_names": [
      "Broadcast_Power_152"
    ],
    "group_id": 2,
    "input_desc": [
      [
        152,
        0
      ],
      [
        152,
        1
      ]
    ],
    "output_desc": [
      [
        152,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group2(float* __restrict__ input0, float* __restrict__ input1, float* __restrict__ output0) {\n  __shared__ float input0_shared[8];\n  if (((int)threadIdx.x) < 1) {\n    input0_shared[((int)threadIdx.x)] = input0[((int)threadIdx.x)];\n  }\n  __syncthreads();\n  output0[((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))] = powf(input1[((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))], input0_shared[0]);\n  output0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128)] = powf(input1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128)], input0_shared[0]);\n  output0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 256)] = powf(input1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 256)], input0_shared[0]);\n  output0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 384)] = powf(input1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 384)], input0_shared[0]);\n  output0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 512)] = powf(input1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 512)], input0_shared[0]);\n  output0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 640)] = powf(input1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 640)], input0_shared[0]);\n  output0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 768)] = powf(input1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 768)], input0_shared[0]);\n  output0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 896)] = powf(input1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 896)], input0_shared[0]);\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      32768,
      1,
      1
    ],
    "latency": 0.22809599339962006,
    "name": "Group2",
    "gain": 0
  },
  {
    "nodes": [
      151
    ],
    "node_names": [
      "Sum_Reshape_Broadcast_Divide_151"
    ],
    "group_id": 3,
    "input_desc": [
      [
        151,
        0
      ],
      [
        151,
        1
      ]
    ],
    "output_desc": [
      [
        151,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group3(float* __restrict__ input0, float* __restrict__ input1, float* __restrict__ output0) {\n  float normal_reduce_temp0[1];\n  __shared__ float input1_shared[4096];\n  __shared__ float red_buf0[128];\n  normal_reduce_temp0[0] = 0.000000e+00f;\n  for (int N2_outer = 0; N2_outer < 4; ++N2_outer) {\n    __syncthreads();\n    *(float4*)(input1_shared + ((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4))) = *(float4*)(input1 + ((((((int)blockIdx.x) * 16384) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)));\n    *(float4*)(input1_shared + (((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 512)) = *(float4*)(input1 + (((((((int)blockIdx.x) * 16384) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)) + 512));\n    *(float4*)(input1_shared + (((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 1024)) = *(float4*)(input1 + (((((((int)blockIdx.x) * 16384) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)) + 1024));\n    *(float4*)(input1_shared + (((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 1536)) = *(float4*)(input1 + (((((((int)blockIdx.x) * 16384) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)) + 1536));\n    *(float4*)(input1_shared + (((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 2048)) = *(float4*)(input1 + (((((((int)blockIdx.x) * 16384) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)) + 8192));\n    *(float4*)(input1_shared + (((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 2560)) = *(float4*)(input1 + ((((((((int)blockIdx.x) * 16384) + (((((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 2560) >> 11) * 8192)) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)) + 512));\n    *(float4*)(input1_shared + (((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 3072)) = *(float4*)(input1 + ((((((((int)blockIdx.x) * 16384) + (((((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 3072) >> 11) * 8192)) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)) + 1024));\n    *(float4*)(input1_shared + (((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 3584)) = *(float4*)(input1 + ((((((((int)blockIdx.x) * 16384) + (((((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 3584) >> 11) * 8192)) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)) + 1536));\n    __syncthreads();\n    for (int N2_inner_outer = 0; N2_inner_outer < 32; ++N2_inner_outer) {\n      normal_reduce_temp0[0] = (normal_reduce_temp0[0] + input1_shared[(((((int)threadIdx.y) * 2048) + (N2_inner_outer * 64)) + ((int)threadIdx.x))]);\n    }\n  }\n  __syncthreads();\n  ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = normal_reduce_temp0[0];\n  __syncthreads();\n  if (((int)threadIdx.x) < 32) {\n    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 32)]);\n  }\n  __syncthreads();\n  if (((int)threadIdx.x) < 16) {\n    float w_16_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 16)]);\n    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_16_0;\n    float w_8_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 8)]);\n    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_8_0;\n    float w_4_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 4)]);\n    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_4_0;\n    float w_2_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 2)]);\n    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_2_0;\n    float w_1_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 1)]);\n    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_1_0;\n  }\n  __syncthreads();\n  output0[((((int)blockIdx.x) * 2) + ((int)threadIdx.y))] = (((volatile float*)red_buf0)[(((int)threadIdx.y) * 64)] / input0[0]);\n}\n\n",
    "block_size": [
      64,
      2,
      1
    ],
    "grid_size": [
      2048,
      1,
      1
    ],
    "latency": 0.08482133597135544,
    "name": "Group3",
    "gain": 0
  },
  {
    "nodes": [
      45,
      37,
      154
    ],
    "node_names": [
      "Reshape_45",
      "Reshape_37",
      "Reshape_Broadcast_Add_Sqrt_Reshape_Broadcast_Divide_Convert_Broadcast_Multiply_154"
    ],
    "group_id": 4,
    "input_desc": [
      [
        45,
        0
      ],
      [
        37,
        0
      ],
      [
        154,
        2
      ],
      [
        154,
        3
      ]
    ],
    "output_desc": [
      [
        154,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group4(half* __restrict__ input0, float* __restrict__ input1, float* __restrict__ input2, float* __restrict__ input3, half* __restrict__ output0) {\n  __shared__ half input0_shared[64];\n  __shared__ float input1_shared[8];\n  if (((int)threadIdx.x) < 64) {\n    input0_shared[((int)threadIdx.x)] = input0[(((((int)blockIdx.x) & 127) * 64) + ((int)threadIdx.x))];\n  }\n  if (((int)threadIdx.x) < 1) {\n    input1_shared[((int)threadIdx.x)] = input1[((int)threadIdx.x)];\n  }\n  __syncthreads();\n  output0[(((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2))] = (input0_shared[((((int)threadIdx.x) & 15) * 2)] * ((half)(input3[(((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2))] / sqrtf((input2[(((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4))] + input1_shared[0])))));\n  output0[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32)] = (input0_shared[(((((int)threadIdx.x) & 15) * 2) + 32)] * ((half)(input3[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32)] / sqrtf((input2[(((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4))] + input1_shared[0])))));\n  output0[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65536)] = (input0_shared[((((int)threadIdx.x) & 15) * 2)] * ((half)(input3[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65536)] / sqrtf((input2[((((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4)) + 8)] + input1_shared[0])))));\n  output0[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65568)] = (input0_shared[(((((int)threadIdx.x) & 15) * 2) + 32)] * ((half)(input3[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65568)] / sqrtf((input2[((((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4)) + 8)] + input1_shared[0])))));\n  output0[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] = (input0_shared[(((((int)threadIdx.x) & 15) * 2) + 1)] * ((half)(input3[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] / sqrtf((input2[(((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4))] + input1_shared[0])))));\n  output0[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 33)] = (input0_shared[(((((int)threadIdx.x) & 15) * 2) + 33)] * ((half)(input3[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 33)] / sqrtf((input2[(((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4))] + input1_shared[0])))));\n  output0[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65537)] = (input0_shared[(((((int)threadIdx.x) & 15) * 2) + 1)] * ((half)(input3[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65537)] / sqrtf((input2[((((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4)) + 8)] + input1_shared[0])))));\n  output0[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65569)] = (input0_shared[(((((int)threadIdx.x) & 15) * 2) + 33)] * ((half)(input3[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65569)] / sqrtf((input2[((((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4)) + 8)] + input1_shared[0])))));\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      32768,
      1,
      1
    ],
    "latency": 0.1496746689081192,
    "name": "Group4",
    "gain": 0.0
  },
  {
    "nodes": [
      68,
      147
    ],
    "node_names": [
      "Dot_68",
      "Reshape_Reshape_Reshape_Broadcast_Multiply_147"
    ],
    "group_id": 5,
    "input_desc": [
      [
        147,
        0
      ],
      [
        68,
        0
      ],
      [
        68,
        1
      ]
    ],
    "output_desc": [
      [
        147,
        0
      ],
      [
        147,
        1
      ]
    ],
    "code": "__device__ void Group5_0_Dot_68(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output0, char* shared) {\n  int __bid = blockIdx.x;\n  const dim3 blockIdx((((__bid % 32) * 64) + (__bid / 32)), 0, 0);\n  int __flatten_tid = threadIdx.x;\n  const dim3 threadIdx(__flatten_tid % 32, __flatten_tid / 32, 0);\n    half* input0_shared = (half*)(shared+0);\n  half* input1_shared = (half*)(shared+16384);\n  cutlass::gemm::warp::GemmTensorOp<\n    cutlass::gemm::GemmShape<64, 64, 32>,\n    cutlass::layout::RowMajorTensorOpMultiplicandCrosswise<16, 32>,\n    cutlass::layout::RowMajorTensorOpMultiplicandCongruous<16, 64>\n> output0_cutlass_warp_mma((((int)threadIdx.y) >> 1), (((int)threadIdx.y) & 1), threadIdx.x);\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0 = 0; ax0_ax1_fused_0_0_0 < 4; ++ax0_ax1_fused_0_0_0) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + (((((ax0_ax1_fused_0_0_0 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + ((((((((int)blockIdx.x) >> 6) * 1048576) + (ax0_ax1_fused_0_0_0 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + ((((int)threadIdx.x) & 3) * 8)))), \"n\"(16)\n    );\n  }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_1 = 0; ax0_ax1_fused_0_0_0_1 < 4; ++ax0_ax1_fused_0_0_0_1) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + ((((((ax0_ax1_fused_0_0_0_1 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + (((((ax0_ax1_fused_0_0_0_1 * 65536) + (((int)threadIdx.y) * 16384)) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 8)))), \"n\"(16)\n    );\n  }\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_2 = 0; ax0_ax1_fused_0_0_0_2 < 4; ++ax0_ax1_fused_0_0_0_2) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + ((((((ax0_ax1_fused_0_0_0_2 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8)) + 4096)))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + (((((((((int)blockIdx.x) >> 6) * 1048576) + (ax0_ax1_fused_0_0_0_2 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + ((((int)threadIdx.x) & 3) * 8)) + 32))), \"n\"(16)\n    );\n  }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_3 = 0; ax0_ax1_fused_0_0_0_3 < 4; ++ax0_ax1_fused_0_0_0_3) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + (((((((ax0_ax1_fused_0_0_0_3 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8)) + 4096)))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + ((((((ax0_ax1_fused_0_0_0_3 * 65536) + (((int)threadIdx.y) * 16384)) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 262144))), \"n\"(16)\n    );\n  }\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n  __syncthreads();\n  output0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[0])), 32},{(cutlass::half_t*)(&(input1_shared[0])), 128});\n  output0_cutlass_warp_mma.body();\n  for (int i3_0 = 0; i3_0 < 254; ++i3_0) {\n    #pragma unroll\n    for (int ax0_ax1_fused_0_0_0_4 = 0; ax0_ax1_fused_0_0_0_4 < 4; ++ax0_ax1_fused_0_0_0_4) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + (((((((i3_0 & 1) * 4096) + (ax0_ax1_fused_0_0_0_4 * 1024)) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + ((((((((((int)blockIdx.x) >> 6) * 1048576) + (ax0_ax1_fused_0_0_0_4 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + (i3_0 * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 64))), \"n\"(16)\n    );\n  }\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_0_0_0_5 = 0; ax0_ax1_fused_0_0_0_5 < 4; ++ax0_ax1_fused_0_0_0_5) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + ((((((((i3_0 & 1) * 4096) + (ax0_ax1_fused_0_0_0_5 * 1024)) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + (((((((i3_0 * 262144) + (ax0_ax1_fused_0_0_0_5 * 65536)) + (((int)threadIdx.y) * 16384)) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 524288))), \"n\"(16)\n    );\n  }\n    }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n    __syncthreads();\n    output0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[(((i3_0 + 1) & 1) * 4096)])), 32},{(cutlass::half_t*)(&(input1_shared[(((i3_0 + 1) & 1) * 4096)])), 128});\n    output0_cutlass_warp_mma.epilogue();\n    output0_cutlass_warp_mma.body();\n  }\n__asm__ __volatile__(\"cp.async.wait_group 0;\");\n\n  __syncthreads();\n  output0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[4096])), 32},{(cutlass::half_t*)(&(input1_shared[4096])), 128});\n  output0_cutlass_warp_mma.epilogue();\n  output0_cutlass_warp_mma.body();\n  output0_cutlass_warp_mma.epilogue();\n  __syncthreads();\n  #pragma unroll\n  for (int ax1_0 = 0; ax1_0 < 64; ++ax1_0) {\n    *(uint1*)(output0 + (((((((((int)threadIdx.y) >> 1) * 8704) + ((ax1_0 & 7) * 1088)) + ((((int)threadIdx.x) >> 2) * 136)) + ((((int)threadIdx.y) & 1) * 64)) + ((ax1_0 >> 3) * 8)) + ((((int)threadIdx.x) & 3) * 2))) = *(uint1*)(output0_cutlass_warp_mma + (ax1_0 * 2));\n  }\n  __syncthreads();\n}\n\n__device__ void Group5_1_Reshape_Reshape_Reshape_Broadcast_Multiply_147(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output_proxy, half* __restrict__ output_proxy_1, char* shared) {\n  half* input1_shared = input1;\n  output_proxy[(((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2))] = input1_shared[(((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2))];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 16)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 16)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 32)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 32)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 48)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 48)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 64)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 64)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 80)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 80)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 96)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 96)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 112)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 112)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2048)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2176)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2064)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2192)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2080)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2208)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2096)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2224)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2112)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2240)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2128)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2256)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2144)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2272)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2160)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2288)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4096)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4352)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4112)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4368)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4128)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4384)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4144)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4400)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4160)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4416)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4176)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4432)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4192)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4448)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4208)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4464)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6144)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6528)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6160)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6544)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6176)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6560)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6192)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6576)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6208)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6592)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6224)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6608)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6240)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6624)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6256)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6640)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8192)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8704)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8208)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8720)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8224)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8736)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8240)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8752)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8256)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8768)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8272)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8784)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8288)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8800)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8304)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8816)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10240)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10880)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10256)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10896)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10272)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10912)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10288)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10928)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10304)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10944)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10320)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10960)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10336)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10976)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10352)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10992)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12288)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13056)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12304)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13072)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12320)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13088)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12336)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13104)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12352)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13120)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12368)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13136)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12384)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13152)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12400)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13168)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14336)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15232)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14352)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15248)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14368)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15264)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14384)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15280)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14400)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15296)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14416)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15312)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14432)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15328)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14448)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15344)];\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2))] = (input1_shared[(((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2))] * input0[((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2))]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 16)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 16)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 16)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 32)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 32)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 32)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 48)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 48)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 48)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 64)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 64)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 64)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 80)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 80)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 80)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 96)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 96)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 96)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 112)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 112)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 112)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2048)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2176)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2048)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2064)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2192)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2064)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2080)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2208)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2080)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2096)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2224)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2096)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2112)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2240)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2112)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2128)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2256)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2128)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2144)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2272)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2144)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2160)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2288)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2160)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4096)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4352)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4096)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4112)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4368)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4112)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4128)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4384)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4128)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4144)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4400)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4144)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4160)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4416)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4160)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4176)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4432)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4176)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4192)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4448)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4192)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4208)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4464)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4208)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6144)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6528)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6144)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6160)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6544)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6160)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6176)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6560)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6176)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6192)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6576)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6192)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6208)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6592)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6208)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6224)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6608)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6224)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6240)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6624)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6240)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6256)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6640)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6256)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8192)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8704)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8192)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8208)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8720)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8208)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8224)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8736)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8224)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8240)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8752)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8240)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8256)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8768)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8256)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8272)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8784)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8272)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8288)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8800)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8288)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8304)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8816)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8304)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10240)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10880)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10240)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10256)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10896)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10256)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10272)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10912)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10272)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10288)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10928)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10288)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10304)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10944)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10304)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10320)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10960)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10320)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10336)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10976)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10336)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10352)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10992)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10352)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12288)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13056)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12288)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12304)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13072)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12304)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12320)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13088)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12320)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12336)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13104)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12336)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12352)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13120)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12352)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12368)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13136)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12368)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12384)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13152)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12384)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12400)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13168)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12400)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14336)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15232)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14336)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14352)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15248)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14352)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14368)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15264)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14368)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14384)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15280)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14384)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14400)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15296)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14400)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14416)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15312)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14416)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14432)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15328)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14432)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14448)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15344)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14448)]);\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 1)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 17)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 17)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 33)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 33)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 49)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 49)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 65)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 65)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 81)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 81)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 97)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 97)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 113)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 113)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2049)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2177)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2065)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2193)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2081)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2209)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2097)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2225)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2113)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2241)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2129)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2257)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2145)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2273)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2161)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2289)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4097)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4353)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4113)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4369)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4129)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4385)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4145)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4401)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4161)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4417)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4177)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4433)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4193)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4449)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4209)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4465)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6145)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6529)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6161)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6545)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6177)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6561)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6193)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6577)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6209)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6593)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6225)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6609)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6241)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6625)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6257)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6641)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8193)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8705)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8209)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8721)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8225)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8737)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8241)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8753)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8257)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8769)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8273)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8785)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8289)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8801)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8305)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8817)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10241)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10881)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10257)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10897)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10273)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10913)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10289)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10929)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10305)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10945)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10321)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10961)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10337)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10977)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10353)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10993)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12289)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13057)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12305)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13073)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12321)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13089)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12337)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13105)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12353)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13121)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12369)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13137)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12385)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13153)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12401)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13169)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14337)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15233)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14353)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15249)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14369)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15265)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14385)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15281)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14401)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15297)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14417)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15313)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14433)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15329)];\n  output_proxy[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14449)] = input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15345)];\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 1)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 17)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 17)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 17)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 33)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 33)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 33)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 49)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 49)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 49)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 65)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 65)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 65)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 81)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 81)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 81)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 97)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 97)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 97)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 113)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 113)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 113)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2049)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2177)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2049)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2065)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2193)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2065)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2081)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2209)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2081)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2097)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2225)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2097)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2113)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2241)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2113)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2129)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2257)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2129)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2145)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2273)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2145)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2161)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 2289)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 2161)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4097)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4353)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4097)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4113)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4369)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4113)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4129)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4385)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4129)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4145)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4401)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4145)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4161)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4417)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4161)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4177)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4433)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4177)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4193)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4449)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4193)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4209)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 4465)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 4209)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6145)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6529)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6145)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6161)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6545)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6161)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6177)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6561)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6177)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6193)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6577)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6193)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6209)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6593)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6209)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6225)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6609)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6225)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6241)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6625)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6241)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6257)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 6641)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 6257)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8193)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8705)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8193)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8209)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8721)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8209)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8225)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8737)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8225)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8241)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8753)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8241)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8257)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8769)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8257)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8273)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8785)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8273)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8289)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8801)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8289)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8305)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 8817)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 8305)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10241)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10881)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10241)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10257)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10897)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10257)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10273)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10913)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10273)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10289)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10929)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10289)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10305)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10945)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10305)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10321)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10961)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10321)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10337)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10977)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10337)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10353)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 10993)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 10353)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12289)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13057)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12289)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12305)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13073)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12305)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12321)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13089)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12321)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12337)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13105)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12337)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12353)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13121)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12353)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12369)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13137)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12369)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12385)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13153)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12385)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12401)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 13169)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 12401)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14337)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15233)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14337)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14353)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15249)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14353)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14369)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15265)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14369)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14385)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15281)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14385)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14401)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15297)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14401)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14417)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15313)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14417)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14433)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15329)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14433)]);\n  output_proxy_1[((((((int)blockIdx.x) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14449)] = (input1_shared[((((((int)threadIdx.x) >> 3) * 136) + ((((int)threadIdx.x) & 7) * 2)) + 15345)] * input0[(((((((int)blockIdx.x) & 31) * 16384) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 14449)]);\n}\n\n__global__ void __launch_bounds__(128) Group5(half* input0, half* input1, half* input2, half* output0, half* output1) {\n  __shared__ char shared[34816];\n  Group5_0_Dot_68(input1, input2, (half*)(shared+0), shared+0);\n  Group5_1_Reshape_Reshape_Reshape_Broadcast_Multiply_147(input0, (half*)(shared+0), output0, output1, shared+34816);\n}\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      2048,
      1,
      1
    ],
    "latency": 2.1964800357818604,
    "name": "Group5",
    "gain": 0.01582072675228119
  },
  {
    "nodes": [
      155,
      73,
      153,
      156
    ],
    "node_names": [
      "Slice_Negative_155",
      "Slice_73",
      "Concat_Reshape_Broadcast_Multiply_153",
      "Add_Reshape_Broadcast_156"
    ],
    "group_id": 6,
    "input_desc": [
      [
        156,
        0
      ],
      [
        153,
        0
      ],
      [
        155,
        0
      ],
      [
        73,
        0
      ]
    ],
    "output_desc": [
      [
        156,
        0
      ]
    ],
    "code": "__device__ void Group6_0_Slice_Negative_155(half* __restrict__ input0, half* __restrict__ output0, char* shared) {\n  __syncthreads();\n  output0[(((int)threadIdx.x) * 2)] = (__float2half_rn(0.000000e+00f) - input0[(((((((((int)blockIdx.x) >> 11) * 1048576) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 2047) * 256)) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 64)]);\n  output0[((((int)threadIdx.x) * 2) + 1)] = (__float2half_rn(0.000000e+00f) - input0[(((((((((int)blockIdx.x) >> 11) * 1048576) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 2047) * 256)) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 65)]);\n  __syncthreads();\n}\n\n__device__ void Group6_1_Slice_73(half* __restrict__ input0, half* __restrict__ output0, char* shared) {\n  __syncthreads();\n  output0[(((int)threadIdx.x) * 2)] = input0[((((((((int)blockIdx.x) >> 11) * 1048576) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 2047) * 256)) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2))];\n  output0[((((int)threadIdx.x) * 2) + 1)] = input0[(((((((((int)blockIdx.x) >> 11) * 1048576) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 2047) * 256)) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 1)];\n  __syncthreads();\n}\n\n__device__ void Group6_2_Concat_Reshape_Broadcast_Multiply_153(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ input2, half* __restrict__ output0, char* shared) {\n  half* input1_shared = input1;\n  half input1_shared_local[4];\n  half* input2_shared = input2;\n  half input2_shared_local[4];\n  for (int ax3 = 0; ax3 < 2; ++ax3) {\n    input1_shared_local[ax3] = input1_shared[((((int)threadIdx.x) * 2) + ax3)];\n  }\n  for (int ax3_1 = 0; ax3_1 < 2; ++ax3_1) {\n    input2_shared_local[(ax3_1 + 2)] = input2_shared[((((int)threadIdx.x) * 2) + ax3_1)];\n  }\n  __syncthreads();\n  output0[(((((int)threadIdx.x) >> 5) * 128) + ((((int)threadIdx.x) & 31) * 2))] = (input1_shared_local[0] * input0[((((((int)blockIdx.x) & 2047) * 256) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2))]);\n  output0[((((((int)threadIdx.x) >> 5) * 128) + ((((int)threadIdx.x) & 31) * 2)) + 64)] = (input2_shared_local[2] * input0[(((((((int)blockIdx.x) & 2047) * 256) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 64)]);\n  output0[((((((int)threadIdx.x) >> 5) * 128) + ((((int)threadIdx.x) & 31) * 2)) + 1)] = (input1_shared_local[1] * input0[(((((((int)blockIdx.x) & 2047) * 256) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 1)]);\n  output0[((((((int)threadIdx.x) >> 5) * 128) + ((((int)threadIdx.x) & 31) * 2)) + 65)] = (input2_shared_local[3] * input0[(((((((int)blockIdx.x) & 2047) * 256) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 65)]);\n  __syncthreads();\n}\n\n__device__ void Group6_3_Add_Reshape_Broadcast_156(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output0, char* shared) {\n  half* input1_shared = input1;\n  output0[((((((((int)blockIdx.x) >> 11) * 1048576) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 2047) * 256)) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2))] = (input0[((((((((int)blockIdx.x) >> 11) * 1048576) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 2047) * 256)) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2))] + input1_shared[(((((int)threadIdx.x) >> 5) * 128) + ((((int)threadIdx.x) & 31) * 2))]);\n  output0[(((((((((int)blockIdx.x) >> 11) * 1048576) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 2047) * 256)) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 64)] = (input0[(((((((((int)blockIdx.x) >> 11) * 1048576) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 2047) * 256)) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 64)] + input1_shared[((((((int)threadIdx.x) >> 5) * 128) + ((((int)threadIdx.x) & 31) * 2)) + 64)]);\n  output0[(((((((((int)blockIdx.x) >> 11) * 1048576) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 2047) * 256)) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 1)] = (input0[(((((((((int)blockIdx.x) >> 11) * 1048576) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 2047) * 256)) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 1)] + input1_shared[((((((int)threadIdx.x) >> 5) * 128) + ((((int)threadIdx.x) & 31) * 2)) + 1)]);\n  output0[(((((((((int)blockIdx.x) >> 11) * 1048576) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 2047) * 256)) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 65)] = (input0[(((((((((int)blockIdx.x) >> 11) * 1048576) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 2047) * 256)) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 65)] + input1_shared[((((((int)threadIdx.x) >> 5) * 128) + ((((int)threadIdx.x) & 31) * 2)) + 65)]);\n}\n\n__global__ void __launch_bounds__(128) Group6(half* input0, half* input1, half* input2, half* input3, half* output0) {\n  __shared__ char shared[1024];\n  Group6_0_Slice_Negative_155(input2, (half*)(shared+0), shared+0);\n  Group6_1_Slice_73(input3, (half*)(shared+512), shared+512);\n  Group6_2_Concat_Reshape_Broadcast_Multiply_153(input1, (half*)(shared+0), (half*)(shared+512), (half*)(shared+0), shared+1024);\n  Group6_3_Add_Reshape_Broadcast_156(input0, (half*)(shared+0), output0, shared+1024);\n}\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      65536,
      1,
      1
    ],
    "latency": 0.13914352655410767,
    "name": "Group6",
    "gain": 0.18095075339078903
  },
  {
    "nodes": [
      48
    ],
    "node_names": [
      "Dot_48"
    ],
    "group_id": 7,
    "input_desc": [
      [
        48,
        0
      ],
      [
        48,
        1
      ]
    ],
    "output_desc": [
      [
        48,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group7(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output0) {\n    __shared__ half input0_shared[8192];\n  __shared__ half input1_shared[8192];\n  cutlass::gemm::warp::GemmTensorOp<\n    cutlass::gemm::GemmShape<64, 64, 32>,\n    cutlass::layout::RowMajorTensorOpMultiplicandCrosswise<16, 32>,\n    cutlass::layout::RowMajorTensorOpMultiplicandCongruous<16, 64>\n> output0_cutlass_warp_mma((((int)threadIdx.y) >> 1), (((int)threadIdx.y) & 1), threadIdx.x);\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0 = 0; ax0_ax1_fused_0_0_0 < 4; ++ax0_ax1_fused_0_0_0) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + (((((ax0_ax1_fused_0_0_0 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + ((((((((int)blockIdx.x) >> 3) * 1048576) + (ax0_ax1_fused_0_0_0 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + ((((int)threadIdx.x) & 3) * 8)))), \"n\"(16)\n    );\n  }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_1 = 0; ax0_ax1_fused_0_0_0_1 < 4; ++ax0_ax1_fused_0_0_0_1) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + ((((((ax0_ax1_fused_0_0_0_1 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + (((((ax0_ax1_fused_0_0_0_1 * 8192) + (((int)threadIdx.y) * 2048)) + ((((int)threadIdx.x) >> 4) * 1024)) + ((((int)blockIdx.x) & 7) * 128)) + ((((int)threadIdx.x) & 15) * 8)))), \"n\"(16)\n    );\n  }\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_2 = 0; ax0_ax1_fused_0_0_0_2 < 4; ++ax0_ax1_fused_0_0_0_2) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + ((((((ax0_ax1_fused_0_0_0_2 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8)) + 4096)))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + (((((((((int)blockIdx.x) >> 3) * 1048576) + (ax0_ax1_fused_0_0_0_2 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + ((((int)threadIdx.x) & 3) * 8)) + 32))), \"n\"(16)\n    );\n  }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_3 = 0; ax0_ax1_fused_0_0_0_3 < 4; ++ax0_ax1_fused_0_0_0_3) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + (((((((ax0_ax1_fused_0_0_0_3 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8)) + 4096)))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + ((((((ax0_ax1_fused_0_0_0_3 * 8192) + (((int)threadIdx.y) * 2048)) + ((((int)threadIdx.x) >> 4) * 1024)) + ((((int)blockIdx.x) & 7) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 32768))), \"n\"(16)\n    );\n  }\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n  __syncthreads();\n  output0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[0])), 32},{(cutlass::half_t*)(&(input1_shared[0])), 128});\n  output0_cutlass_warp_mma.body();\n  for (int i3_0 = 0; i3_0 < 254; ++i3_0) {\n    #pragma unroll\n    for (int ax0_ax1_fused_0_0_0_4 = 0; ax0_ax1_fused_0_0_0_4 < 4; ++ax0_ax1_fused_0_0_0_4) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + (((((((i3_0 & 1) * 4096) + (ax0_ax1_fused_0_0_0_4 * 1024)) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + ((((((((((int)blockIdx.x) >> 3) * 1048576) + (ax0_ax1_fused_0_0_0_4 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + (i3_0 * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 64))), \"n\"(16)\n    );\n  }\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_0_0_0_5 = 0; ax0_ax1_fused_0_0_0_5 < 4; ++ax0_ax1_fused_0_0_0_5) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + ((((((((i3_0 & 1) * 4096) + (ax0_ax1_fused_0_0_0_5 * 1024)) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + (((((((i3_0 * 32768) + (ax0_ax1_fused_0_0_0_5 * 8192)) + (((int)threadIdx.y) * 2048)) + ((((int)threadIdx.x) >> 4) * 1024)) + ((((int)blockIdx.x) & 7) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 65536))), \"n\"(16)\n    );\n  }\n    }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n    __syncthreads();\n    output0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[(((i3_0 + 1) & 1) * 4096)])), 32},{(cutlass::half_t*)(&(input1_shared[(((i3_0 + 1) & 1) * 4096)])), 128});\n    output0_cutlass_warp_mma.epilogue();\n    output0_cutlass_warp_mma.body();\n  }\n__asm__ __volatile__(\"cp.async.wait_group 0;\");\n\n  __syncthreads();\n  output0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[4096])), 32},{(cutlass::half_t*)(&(input1_shared[4096])), 128});\n  output0_cutlass_warp_mma.epilogue();\n  output0_cutlass_warp_mma.body();\n  output0_cutlass_warp_mma.epilogue();\n  #pragma unroll\n  for (int ax1_0 = 0; ax1_0 < 64; ++ax1_0) {\n    *(uint1*)(output0 + (((((((((((int)blockIdx.x) >> 3) * 131072) + ((((int)threadIdx.y) >> 1) * 65536)) + ((ax1_0 & 7) * 8192)) + ((((int)threadIdx.x) >> 2) * 1024)) + ((((int)blockIdx.x) & 7) * 128)) + ((((int)threadIdx.y) & 1) * 64)) + ((ax1_0 >> 3) * 8)) + ((((int)threadIdx.x) & 3) * 2))) = *(uint1*)(output0_cutlass_warp_mma + (ax1_0 * 2));\n  }\n}\n\n",
    "block_size": [
      32,
      4,
      1
    ],
    "grid_size": [
      256,
      1,
      1
    ],
    "latency": 0.3266560137271881,
    "name": "Group7",
    "gain": 0
  },
  {
    "nodes": [
      157
    ],
    "node_names": [
      "Reshape_Reshape_Reshape_Broadcast_Multiply_157"
    ],
    "group_id": 8,
    "input_desc": [
      [
        157,
        0
      ],
      [
        157,
        1
      ]
    ],
    "output_desc": [
      [
        157,
        0
      ],
      [
        157,
        1
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group8(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output_proxy, half* __restrict__ output_proxy_1) {\n  output_proxy[(((((((int)blockIdx.x) >> 13) * 2097152) + ((((int)threadIdx.x) >> 5) * 524288)) + ((((int)blockIdx.x) & 8191) * 64)) + ((((int)threadIdx.x) & 31) * 2))] = input1[(((((((((int)blockIdx.x) & 8191) >> 1) * 1024) + ((((int)blockIdx.x) >> 13) * 512)) + ((((int)threadIdx.x) >> 5) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + ((((int)threadIdx.x) & 31) * 2))];\n  output_proxy_1[(((((((int)blockIdx.x) >> 13) * 2097152) + ((((int)threadIdx.x) >> 5) * 524288)) + ((((int)blockIdx.x) & 8191) * 64)) + ((((int)threadIdx.x) & 31) * 2))] = (input1[(((((((((int)blockIdx.x) & 8191) >> 1) * 1024) + ((((int)blockIdx.x) >> 13) * 512)) + ((((int)threadIdx.x) >> 5) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + ((((int)threadIdx.x) & 31) * 2))] * input0[(((((int)blockIdx.x) & 8191) * 64) + ((((int)threadIdx.x) & 31) * 2))]);\n  output_proxy[((((((((int)blockIdx.x) >> 13) * 2097152) + ((((int)threadIdx.x) >> 5) * 524288)) + ((((int)blockIdx.x) & 8191) * 64)) + ((((int)threadIdx.x) & 31) * 2)) + 1)] = input1[((((((((((int)blockIdx.x) & 8191) >> 1) * 1024) + ((((int)blockIdx.x) >> 13) * 512)) + ((((int)threadIdx.x) >> 5) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + ((((int)threadIdx.x) & 31) * 2)) + 1)];\n  output_proxy_1[((((((((int)blockIdx.x) >> 13) * 2097152) + ((((int)threadIdx.x) >> 5) * 524288)) + ((((int)blockIdx.x) & 8191) * 64)) + ((((int)threadIdx.x) & 31) * 2)) + 1)] = (input1[((((((((((int)blockIdx.x) & 8191) >> 1) * 1024) + ((((int)blockIdx.x) >> 13) * 512)) + ((((int)threadIdx.x) >> 5) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + ((((int)threadIdx.x) & 31) * 2)) + 1)] * input0[((((((int)blockIdx.x) & 8191) * 64) + ((((int)threadIdx.x) & 31) * 2)) + 1)]);\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      16384,
      1,
      1
    ],
    "latency": 0.015493565239012241,
    "name": "Group8",
    "gain": 0
  },
  {
    "nodes": [
      159,
      53,
      158
    ],
    "node_names": [
      "Slice_Negative_159",
      "Slice_53",
      "Concat_Reshape_Broadcast_Multiply_158"
    ],
    "group_id": 9,
    "input_desc": [
      [
        158,
        0
      ],
      [
        159,
        0
      ],
      [
        53,
        0
      ]
    ],
    "output_desc": [
      [
        158,
        0
      ]
    ],
    "code": "__device__ void Group9_0_Slice_Negative_159(half* __restrict__ input0, half* __restrict__ output0, char* shared) {\n  __syncthreads();\n  output0[(((int)threadIdx.x) * 2)] = (__float2half_rn(0.000000e+00f) - input0[((((((((int)blockIdx.x) >> 12) * 2097152) + ((((int)threadIdx.x) >> 5) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 64)]);\n  output0[((((int)threadIdx.x) * 2) + 1)] = (__float2half_rn(0.000000e+00f) - input0[((((((((int)blockIdx.x) >> 12) * 2097152) + ((((int)threadIdx.x) >> 5) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 65)]);\n  __syncthreads();\n}\n\n__device__ void Group9_1_Slice_53(half* __restrict__ input0, half* __restrict__ output0, char* shared) {\n  __syncthreads();\n  output0[(((int)threadIdx.x) * 2)] = input0[(((((((int)blockIdx.x) >> 12) * 2097152) + ((((int)threadIdx.x) >> 5) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 31) * 2))];\n  output0[((((int)threadIdx.x) * 2) + 1)] = input0[((((((((int)blockIdx.x) >> 12) * 2097152) + ((((int)threadIdx.x) >> 5) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 31) * 2)) + 1)];\n  __syncthreads();\n}\n\n__device__ void Group9_2_Concat_Reshape_Broadcast_Multiply_158(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ input2, half* __restrict__ output0, char* shared) {\n  half* input1_shared = input1;\n  half* input2_shared = input2;\n  output0[(((((((int)blockIdx.x) >> 12) * 2097152) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 63) * 2))] = ((((((int)threadIdx.x) & 63) < 32) ? input1_shared[(((((int)threadIdx.x) >> 6) * 64) + ((((int)threadIdx.x) & 63) * 2))] : input2_shared[((((((int)threadIdx.x) >> 6) * 64) + ((((int)threadIdx.x) & 63) * 2)) - 64)]) * input0[(((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 63) * 2))]);\n  output0[((((((((int)blockIdx.x) >> 12) * 2097152) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 63) * 2)) + 1048576)] = ((((((int)threadIdx.x) & 63) < 32) ? input1_shared[((((((int)threadIdx.x) >> 6) * 64) + ((((int)threadIdx.x) & 63) * 2)) + 128)] : input2_shared[((((((int)threadIdx.x) >> 6) * 64) + ((((int)threadIdx.x) & 63) * 2)) + 64)]) * input0[(((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 63) * 2))]);\n  output0[((((((((int)blockIdx.x) >> 12) * 2097152) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 63) * 2)) + 1)] = ((((((int)threadIdx.x) & 63) < 32) ? input1_shared[((((((int)threadIdx.x) >> 6) * 64) + ((((int)threadIdx.x) & 63) * 2)) + 1)] : input2_shared[((((((int)threadIdx.x) >> 6) * 64) + ((((int)threadIdx.x) & 63) * 2)) - 63)]) * input0[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 63) * 2)) + 1)]);\n  output0[((((((((int)blockIdx.x) >> 12) * 2097152) + ((((int)threadIdx.x) >> 6) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 63) * 2)) + 1048577)] = ((((((int)threadIdx.x) & 63) < 32) ? input1_shared[((((((int)threadIdx.x) >> 6) * 64) + ((((int)threadIdx.x) & 63) * 2)) + 129)] : input2_shared[((((((int)threadIdx.x) >> 6) * 64) + ((((int)threadIdx.x) & 63) * 2)) + 65)]) * input0[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 63) * 2)) + 1)]);\n}\n\n__global__ void __launch_bounds__(128) Group9(half* input0, half* input1, half* input2, half* output0) {\n  __shared__ char shared[1024];\n  Group9_0_Slice_Negative_159(input1, (half*)(shared+0), shared+0);\n  Group9_1_Slice_53(input2, (half*)(shared+512), shared+512);\n  Group9_2_Concat_Reshape_Broadcast_Multiply_158(input0, (half*)(shared+0), (half*)(shared+512), output0, shared+1024);\n}\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      8192,
      1,
      1
    ],
    "latency": 0.01158399973064661,
    "name": "Group9",
    "gain": 0.009889523964375257
  },
  {
    "nodes": [
      150
    ],
    "node_names": [
      "Add_Reshape_Reshape_Broadcast_Reshape_Reshape_Reshape_Broadcast_150"
    ],
    "group_id": 10,
    "input_desc": [
      [
        150,
        0
      ],
      [
        150,
        1
      ]
    ],
    "output_desc": [
      [
        150,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group10(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output0) {\n  output0[((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2))] = (input0[((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3))] + input1[((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3))]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 16)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2048)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2048)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 65536)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 16)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 16)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 65552)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2064)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2064)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 131072)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 32)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 32)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 131088)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2080)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2080)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 196608)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 48)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 48)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 196624)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2096)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2096)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 524288)] = (input0[((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3))] + input1[((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3))]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 524304)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2048)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2048)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 589824)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 16)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 16)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 589840)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2064)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2064)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 655360)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 32)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 32)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 655376)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2080)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2080)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 720896)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 48)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 48)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 720912)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2096)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2096)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 1)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 128)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 128)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 17)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2176)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2176)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 65537)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 144)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 144)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 65553)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2192)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2192)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 131073)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 160)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 160)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 131089)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2208)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2208)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 196609)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 176)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 176)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 196625)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2224)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2224)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 524289)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 128)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 128)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 524305)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2176)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2176)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 589825)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 144)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 144)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 589841)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2192)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2192)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 655361)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 160)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 160)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 655377)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2208)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2208)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 720897)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 176)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 176)]);\n  output0[(((((((((int)blockIdx.x) >> 8) * 1048576) + (((((int)blockIdx.x) & 255) >> 7) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 127) * 32)) + ((((int)threadIdx.x) & 7) * 2)) + 720913)] = (input0[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2224)] + input1[(((((((((int)blockIdx.x) >> 10) * 524288) + ((((int)blockIdx.x) & 127) * 4096)) + ((((int)threadIdx.x) & 7) * 256)) + (((((int)blockIdx.x) & 255) >> 7) * 64)) + (((int)threadIdx.x) >> 3)) + 2224)]);\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      8192,
      1,
      1
    ],
    "latency": 0.11508183926343918,
    "name": "Group10",
    "gain": 0
  },
  {
    "nodes": [
      149
    ],
    "node_names": [
      "BatchMatMul_Reshape_Reshape_Broadcast_Divide_149"
    ],
    "group_id": 11,
    "input_desc": [
      [
        149,
        0
      ],
      [
        149,
        1
      ],
      [
        149,
        2
      ]
    ],
    "output_desc": [
      [
        149,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group11(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ input2, half* __restrict__ output0) {\n  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 8, 32, 16, half> mediate2_wmma_accumulator[16];\n  __shared__ half input1_shared[5120];\n  __shared__ half input2_shared[17408];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 8, 32, 16, half, nvcuda::wmma::row_major> input1_shared_wmma_matrix_a[8];\n  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 8, 32, 16, half, nvcuda::wmma::row_major> input2_shared_wmma_matrix_b[4];\n  for (int B1_c_outer_init = 0; B1_c_outer_init < 2; ++B1_c_outer_init) {\n    for (int N_c_outer_init = 0; N_c_outer_init < 4; ++N_c_outer_init) {\n      for (int M_c_outer_init = 0; M_c_outer_init < 2; ++M_c_outer_init) {\n        nvcuda::wmma::fill_fragment(mediate2_wmma_accumulator[(((B1_c_outer_init * 8) + (N_c_outer_init * 2)) + M_c_outer_init)], 0.000000e+00f);\n      }\n    }\n  }\n  for (int K_outer = 0; K_outer < 4; ++K_outer) {\n    __syncthreads();\n    *(uint4*)(input1_shared + (((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8))) = *(uint4*)(input1 + (((((((((int)blockIdx.x) >> 11) * 1048576) + (((((int)blockIdx.x) & 2047) >> 5) * 8192)) + (((int)threadIdx.y) * 1024)) + ((((int)threadIdx.x) >> 2) * 128)) + (K_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)));\n    *(uint4*)(input1_shared + ((((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8)) + 1280)) = *(uint4*)(input1 + ((((((((((int)blockIdx.x) >> 11) * 1048576) + (((((int)blockIdx.x) & 2047) >> 5) * 8192)) + (((int)threadIdx.y) * 1024)) + ((((int)threadIdx.x) >> 2) * 128)) + (K_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 4096));\n    *(uint4*)(input1_shared + ((((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8)) + 2560)) = *(uint4*)(input1 + ((((((((((int)blockIdx.x) >> 11) * 1048576) + (((((int)blockIdx.x) & 2047) >> 5) * 8192)) + (((int)threadIdx.y) * 1024)) + ((((int)threadIdx.x) >> 2) * 128)) + (K_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 524288));\n    *(uint4*)(input1_shared + (((((((((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 8)) + 3072) >> 11) * 2560) + (((int)threadIdx.y) * 320)) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8)) + 1280)) = *(uint4*)(input1 + (((((((((((int)blockIdx.x) >> 11) * 1048576) + (((((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 8)) + 3072) >> 11) * 524288)) + (((((int)blockIdx.x) & 2047) >> 5) * 8192)) + (((int)threadIdx.y) * 1024)) + ((((int)threadIdx.x) >> 2) * 128)) + (K_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 4096));\n    *(uint4*)(input2_shared + (((((int)threadIdx.y) * 272) + ((((int)threadIdx.x) >> 4) * 136)) + ((((int)threadIdx.x) & 15) * 8))) = *(uint4*)(input2 + (((((((((int)blockIdx.x) >> 11) * 1048576) + (K_outer * 131072)) + (((int)threadIdx.y) * 8192)) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 15) * 8)));\n    *(uint4*)(input2_shared + ((((((int)threadIdx.y) * 272) + ((((int)threadIdx.x) >> 4) * 136)) + ((((int)threadIdx.x) & 15) * 8)) + 1088)) = *(uint4*)(input2 + ((((((((((int)blockIdx.x) >> 11) * 1048576) + (K_outer * 131072)) + (((int)threadIdx.y) * 8192)) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 32768));\n    *(uint4*)(input2_shared + ((((((int)threadIdx.y) * 272) + ((((int)threadIdx.x) >> 4) * 136)) + ((((int)threadIdx.x) & 15) * 8)) + 2176)) = *(uint4*)(input2 + ((((((((((int)blockIdx.x) >> 11) * 1048576) + (K_outer * 131072)) + (((int)threadIdx.y) * 8192)) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 65536));\n    *(uint4*)(input2_shared + ((((((int)threadIdx.y) * 272) + ((((int)threadIdx.x) >> 4) * 136)) + ((((int)threadIdx.x) & 15) * 8)) + 3264)) = *(uint4*)(input2 + ((((((((((int)blockIdx.x) >> 11) * 1048576) + (K_outer * 131072)) + (((int)threadIdx.y) * 8192)) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 98304));\n    *(uint4*)(input2_shared + ((((((int)threadIdx.y) * 272) + ((((int)threadIdx.x) >> 4) * 136)) + ((((int)threadIdx.x) & 15) * 8)) + 4352)) = *(uint4*)(input2 + ((((((((((int)blockIdx.x) >> 11) * 1048576) + (K_outer * 131072)) + (((int)threadIdx.y) * 8192)) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 524288));\n    *(uint4*)(input2_shared + (((((((((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 8)) + 5120) >> 12) * 4352) + (((int)threadIdx.y) * 272)) + ((((int)threadIdx.x) >> 4) * 136)) + ((((int)threadIdx.x) & 15) * 8)) + 1088)) = *(uint4*)(input2 + (((((((((((int)blockIdx.x) >> 11) * 1048576) + (((((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 8)) + 5120) >> 12) * 524288)) + (K_outer * 131072)) + (((int)threadIdx.y) * 8192)) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 32768));\n    *(uint4*)(input2_shared + (((((((((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 8)) + 6144) >> 12) * 4352) + (((int)threadIdx.y) * 272)) + ((((int)threadIdx.x) >> 4) * 136)) + ((((int)threadIdx.x) & 15) * 8)) + 2176)) = *(uint4*)(input2 + (((((((((((int)blockIdx.x) >> 11) * 1048576) + (((((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 8)) + 6144) >> 12) * 524288)) + (K_outer * 131072)) + (((int)threadIdx.y) * 8192)) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 65536));\n    *(uint4*)(input2_shared + (((((((((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 8)) + 7168) >> 12) * 4352) + (((int)threadIdx.y) * 272)) + ((((int)threadIdx.x) >> 4) * 136)) + ((((int)threadIdx.x) & 15) * 8)) + 3264)) = *(uint4*)(input2 + (((((((((((int)blockIdx.x) >> 11) * 1048576) + (((((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 8)) + 7168) >> 12) * 524288)) + (K_outer * 131072)) + (((int)threadIdx.y) * 8192)) + ((((int)threadIdx.x) >> 4) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 98304));\n    __syncthreads();\n    for (int K_inner_outer = 0; K_inner_outer < 2; ++K_inner_outer) {\n      for (int ax1_outer = 0; ax1_outer < 2; ++ax1_outer) {\n        for (int ax2_outer = 0; ax2_outer < 4; ++ax2_outer) {\n          nvcuda::wmma::load_matrix_sync(input1_shared_wmma_matrix_a[((ax1_outer * 4) + ax2_outer)], (&(input1_shared[((((ax1_outer * 2560) + ((((int)threadIdx.y) >> 1) * 1280)) + (ax2_outer * 320)) + (K_inner_outer * 16))])), 40);\n        }\n      }\n      for (int ax1_outer_1 = 0; ax1_outer_1 < 2; ++ax1_outer_1) {\n        for (int ax3_outer = 0; ax3_outer < 2; ++ax3_outer) {\n          nvcuda::wmma::load_matrix_sync(input2_shared_wmma_matrix_b[((ax1_outer_1 * 2) + ax3_outer)], (&(input2_shared[((((ax1_outer_1 * 4352) + (K_inner_outer * 2176)) + ((((int)threadIdx.y) & 1) * 64)) + (ax3_outer * 32))])), 136);\n        }\n      }\n      for (int B1_c_outer = 0; B1_c_outer < 2; ++B1_c_outer) {\n        for (int N_c_outer = 0; N_c_outer < 4; ++N_c_outer) {\n          for (int M_c_outer = 0; M_c_outer < 2; ++M_c_outer) {\n            nvcuda::wmma::mma_sync(mediate2_wmma_accumulator[(((B1_c_outer * 8) + (N_c_outer * 2)) + M_c_outer)], input1_shared_wmma_matrix_a[((B1_c_outer * 4) + N_c_outer)], input2_shared_wmma_matrix_b[((B1_c_outer * 2) + M_c_outer)], mediate2_wmma_accumulator[(((B1_c_outer * 8) + (N_c_outer * 2)) + M_c_outer)]);\n          }\n        }\n      }\n    }\n  }\n  __syncthreads();\n  for (int ax1_inner_outer = 0; ax1_inner_outer < 2; ++ax1_inner_outer) {\n    for (int ax2_inner_outer = 0; ax2_inner_outer < 4; ++ax2_inner_outer) {\n      for (int ax3_inner_outer = 0; ax3_inner_outer < 2; ++ax3_inner_outer) {\n        nvcuda::wmma::store_matrix_sync((&(input2_shared[(((((ax1_inner_outer * 8704) + ((((int)threadIdx.y) >> 1) * 4352)) + (ax2_inner_outer * 1088)) + ((((int)threadIdx.y) & 1) * 64)) + (ax3_inner_outer * 32))])), mediate2_wmma_accumulator[(((ax1_inner_outer * 8) + (ax2_inner_outer * 2)) + ax3_inner_outer)], 136, nvcuda::wmma::mem_row_major);\n      }\n    }\n  }\n  __syncthreads();\n  for (int N0_inner_N1_inner_fused_N2_inner_fused_N3_inner_fused_outer_outer_outer = 0; N0_inner_N1_inner_fused_N2_inner_fused_N3_inner_fused_outer_outer_outer < 16; ++N0_inner_N1_inner_fused_N2_inner_fused_N3_inner_fused_outer_outer_outer) {\n    uint4 __1;\n      uint4 __2 = *(uint4*)(input2_shared + ((((N0_inner_N1_inner_fused_N2_inner_fused_N3_inner_fused_outer_outer_outer >> 3) * 8704) + (((((N0_inner_N1_inner_fused_N2_inner_fused_N3_inner_fused_outer_outer_outer * 8) + (((int)threadIdx.y) * 2)) + (((int)threadIdx.x) >> 4)) & 63) * 136)) + ((((int)threadIdx.x) & 15) * 8)));\n      uint4 __3 = make_uint4(__pack_half2(input0[0], input0[0]), __pack_half2(input0[0], input0[0]), __pack_half2(input0[0], input0[0]), __pack_half2(input0[0], input0[0]));\n      ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x/((half2*)(&(__3.x)))->x);\n      ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y/((half2*)(&(__3.x)))->y);\n      ((half2*)(&(__1.y)))->x = (((half2*)(&(__2.y)))->x/((half2*)(&(__3.y)))->x);\n      ((half2*)(&(__1.y)))->y = (((half2*)(&(__2.y)))->y/((half2*)(&(__3.y)))->y);\n      ((half2*)(&(__1.z)))->x = (((half2*)(&(__2.z)))->x/((half2*)(&(__3.z)))->x);\n      ((half2*)(&(__1.z)))->y = (((half2*)(&(__2.z)))->y/((half2*)(&(__3.z)))->y);\n      ((half2*)(&(__1.w)))->x = (((half2*)(&(__2.w)))->x/((half2*)(&(__3.w)))->x);\n      ((half2*)(&(__1.w)))->y = (((half2*)(&(__2.w)))->y/((half2*)(&(__3.w)))->y);\n    *(uint4*)(output0 + (((((((((int)blockIdx.x) >> 11) * 33554432) + ((N0_inner_N1_inner_fused_N2_inner_fused_N3_inner_fused_outer_outer_outer >> 3) * 16777216)) + (((((int)blockIdx.x) & 2047) >> 5) * 262144)) + (((((N0_inner_N1_inner_fused_N2_inner_fused_N3_inner_fused_outer_outer_outer * 8) + (((int)threadIdx.y) * 2)) + (((int)threadIdx.x) >> 4)) & 63) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 15) * 8))) = __1;\n  }\n}\n\n",
    "block_size": [
      32,
      4,
      1
    ],
    "grid_size": [
      65536,
      1,
      1
    ],
    "latency": 2.885632038116455,
    "name": "Group11",
    "gain": 0
  },
  {
    "nodes": [
      139,
      140,
      141,
      161
    ],
    "node_names": [
      "SoftmaxBasic_139",
      "SoftmaxBasic_140",
      "SoftmaxBasic_141",
      "Reshape_Broadcast_SoftmaxBasic_161"
    ],
    "group_id": 12,
    "input_desc": [
      [
        140,
        0
      ],
      [
        139,
        0
      ]
    ],
    "output_desc": [
      [
        161,
        0
      ]
    ],
    "code": "__device__ void Group12_0_SoftmaxBasic_139(half* __restrict__ input0, half* __restrict__ output0, char* shared) {\n  half normal_reduce_temp0[1];\n  half* input0_shared = (half*)(shared+0);\n  half* red_buf0 = (half*)(shared+8192);\n  normal_reduce_temp0[0] = __float2half_rn(-6.550400e+04f);\n  *(uint4*)(input0_shared + (((int)threadIdx.x) * 8)) = *(uint4*)(input0 + ((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 8)));\n  *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 1024)) = *(uint4*)(input0 + (((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 8)) + 1024));\n  *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 2048)) = *(uint4*)(input0 + (((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 8)) + 2048));\n  *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 3072)) = *(uint4*)(input0 + (((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 8)) + 3072));\n  __syncthreads();\n  for (int N3_inner_outer = 0; N3_inner_outer < 32; ++N3_inner_outer) {\n    normal_reduce_temp0[0] = max(normal_reduce_temp0[0], input0_shared[((N3_inner_outer * 128) + ((int)threadIdx.x))]);\n  }\n  __syncthreads();\n  ((volatile half*)red_buf0)[((int)threadIdx.x)] = normal_reduce_temp0[0];\n  __syncthreads();\n  if (((int)threadIdx.x) < 64) {\n    ((volatile half*)red_buf0)[((int)threadIdx.x)] = max((half)(((volatile half*)red_buf0)[((int)threadIdx.x)]), (half)(((volatile half*)red_buf0)[(((int)threadIdx.x) + 64)]));\n  }\n  __syncthreads();\n  if (((int)threadIdx.x) < 32) {\n    ((volatile half*)red_buf0)[((int)threadIdx.x)] = max((half)(((volatile half*)red_buf0)[((int)threadIdx.x)]), (half)(((volatile half*)red_buf0)[(((int)threadIdx.x) + 32)]));\n  }\n  __syncthreads();\n  if (((int)threadIdx.x) < 16) {\n    half w_16_0 = max((half)(((volatile half*)red_buf0)[((int)threadIdx.x)]), (half)(((volatile half*)red_buf0)[(((int)threadIdx.x) + 16)]));\n    ((volatile half*)red_buf0)[((int)threadIdx.x)] = w_16_0;\n    half w_8_0 = max((half)(((volatile half*)red_buf0)[((int)threadIdx.x)]), (half)(((volatile half*)red_buf0)[(((int)threadIdx.x) + 8)]));\n    ((volatile half*)red_buf0)[((int)threadIdx.x)] = w_8_0;\n    half w_4_0 = max((half)(((volatile half*)red_buf0)[((int)threadIdx.x)]), (half)(((volatile half*)red_buf0)[(((int)threadIdx.x) + 4)]));\n    ((volatile half*)red_buf0)[((int)threadIdx.x)] = w_4_0;\n    half w_2_0 = max((half)(((volatile half*)red_buf0)[((int)threadIdx.x)]), (half)(((volatile half*)red_buf0)[(((int)threadIdx.x) + 2)]));\n    ((volatile half*)red_buf0)[((int)threadIdx.x)] = w_2_0;\n    half w_1_0 = max((half)(((volatile half*)red_buf0)[((int)threadIdx.x)]), (half)(((volatile half*)red_buf0)[(((int)threadIdx.x) + 1)]));\n    ((volatile half*)red_buf0)[((int)threadIdx.x)] = w_1_0;\n  }\n  __syncthreads();\n  __syncthreads();\n  output0[0] = (half)(((volatile half*)red_buf0)[0]);\n  __syncthreads();\n}\n\n__device__ void Group12_1_SoftmaxBasic_140(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output0, char* shared) {\n  half* input1_shared = input1;\n  half input1_shared_local[1];\n  input1_shared_local[0] = input1_shared[0];\n  __syncthreads();\n  output0[(((int)threadIdx.x) * 2)] = hexp((input0[((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2))] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 256)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 256)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 512)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 512)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 768)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 768)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 1024)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1024)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 1280)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1280)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 1536)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1536)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 1792)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1792)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 2048)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2048)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 2304)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2304)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 2560)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2560)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 2816)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2816)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 3072)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3072)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 3328)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3328)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 3584)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3584)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 3840)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3840)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 1)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 257)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 257)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 513)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 513)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 769)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 769)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 1025)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1025)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 1281)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1281)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 1537)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1537)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 1793)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1793)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 2049)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2049)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 2305)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2305)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 2561)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2561)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 2817)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2817)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 3073)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3073)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 3329)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3329)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 3585)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3585)] - input1_shared_local[0]));\n  output0[((((int)threadIdx.x) * 2) + 3841)] = hexp((input0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3841)] - input1_shared_local[0]));\n  __syncthreads();\n}\n\n__device__ void Group12_2_SoftmaxBasic_141(half* __restrict__ input0, half* __restrict__ output0, char* shared) {\n  half normal_reduce_temp0[1];\n  half* input0_shared = input0;\n  half* red_buf0 = (half*)(shared+0);\n  normal_reduce_temp0[0] = __float2half_rn(0.000000e+00f);\n  for (int N3_inner_outer = 0; N3_inner_outer < 32; ++N3_inner_outer) {\n    normal_reduce_temp0[0] = (normal_reduce_temp0[0] + input0_shared[((N3_inner_outer * 128) + ((int)threadIdx.x))]);\n  }\n  __syncthreads();\n  ((volatile half*)red_buf0)[((int)threadIdx.x)] = normal_reduce_temp0[0];\n  __syncthreads();\n  if (((int)threadIdx.x) < 64) {\n    ((volatile half*)red_buf0)[((int)threadIdx.x)] = ((half)(((volatile half*)red_buf0)[((int)threadIdx.x)]) + (half)(((volatile half*)red_buf0)[(((int)threadIdx.x) + 64)]));\n  }\n  __syncthreads();\n  if (((int)threadIdx.x) < 32) {\n    ((volatile half*)red_buf0)[((int)threadIdx.x)] = ((half)(((volatile half*)red_buf0)[((int)threadIdx.x)]) + (half)(((volatile half*)red_buf0)[(((int)threadIdx.x) + 32)]));\n  }\n  __syncthreads();\n  if (((int)threadIdx.x) < 16) {\n    half w_16_0 = ((half)(((volatile half*)red_buf0)[((int)threadIdx.x)]) + (half)(((volatile half*)red_buf0)[(((int)threadIdx.x) + 16)]));\n    ((volatile half*)red_buf0)[((int)threadIdx.x)] = w_16_0;\n    half w_8_0 = ((half)(((volatile half*)red_buf0)[((int)threadIdx.x)]) + (half)(((volatile half*)red_buf0)[(((int)threadIdx.x) + 8)]));\n    ((volatile half*)red_buf0)[((int)threadIdx.x)] = w_8_0;\n    half w_4_0 = ((half)(((volatile half*)red_buf0)[((int)threadIdx.x)]) + (half)(((volatile half*)red_buf0)[(((int)threadIdx.x) + 4)]));\n    ((volatile half*)red_buf0)[((int)threadIdx.x)] = w_4_0;\n    half w_2_0 = ((half)(((volatile half*)red_buf0)[((int)threadIdx.x)]) + (half)(((volatile half*)red_buf0)[(((int)threadIdx.x) + 2)]));\n    ((volatile half*)red_buf0)[((int)threadIdx.x)] = w_2_0;\n    half w_1_0 = ((half)(((volatile half*)red_buf0)[((int)threadIdx.x)]) + (half)(((volatile half*)red_buf0)[(((int)threadIdx.x) + 1)]));\n    ((volatile half*)red_buf0)[((int)threadIdx.x)] = w_1_0;\n  }\n  __syncthreads();\n  __syncthreads();\n  output0[0] = (half)(((volatile half*)red_buf0)[0]);\n  __syncthreads();\n}\n\n__device__ void Group12_3_Reshape_Broadcast_SoftmaxBasic_161(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output0, char* shared) {\n  half* input0_shared = input0;\n  half* input1_shared = input1;\n  output0[((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2))] = (input0_shared[(((int)threadIdx.x) * 2)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 256)] = (input0_shared[((((int)threadIdx.x) * 2) + 256)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 512)] = (input0_shared[((((int)threadIdx.x) * 2) + 512)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 768)] = (input0_shared[((((int)threadIdx.x) * 2) + 768)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1024)] = (input0_shared[((((int)threadIdx.x) * 2) + 1024)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1280)] = (input0_shared[((((int)threadIdx.x) * 2) + 1280)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1536)] = (input0_shared[((((int)threadIdx.x) * 2) + 1536)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1792)] = (input0_shared[((((int)threadIdx.x) * 2) + 1792)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2048)] = (input0_shared[((((int)threadIdx.x) * 2) + 2048)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2304)] = (input0_shared[((((int)threadIdx.x) * 2) + 2304)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2560)] = (input0_shared[((((int)threadIdx.x) * 2) + 2560)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2816)] = (input0_shared[((((int)threadIdx.x) * 2) + 2816)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3072)] = (input0_shared[((((int)threadIdx.x) * 2) + 3072)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3328)] = (input0_shared[((((int)threadIdx.x) * 2) + 3328)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3584)] = (input0_shared[((((int)threadIdx.x) * 2) + 3584)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3840)] = (input0_shared[((((int)threadIdx.x) * 2) + 3840)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1)] = (input0_shared[((((int)threadIdx.x) * 2) + 1)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 257)] = (input0_shared[((((int)threadIdx.x) * 2) + 257)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 513)] = (input0_shared[((((int)threadIdx.x) * 2) + 513)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 769)] = (input0_shared[((((int)threadIdx.x) * 2) + 769)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1025)] = (input0_shared[((((int)threadIdx.x) * 2) + 1025)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1281)] = (input0_shared[((((int)threadIdx.x) * 2) + 1281)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1537)] = (input0_shared[((((int)threadIdx.x) * 2) + 1537)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 1793)] = (input0_shared[((((int)threadIdx.x) * 2) + 1793)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2049)] = (input0_shared[((((int)threadIdx.x) * 2) + 2049)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2305)] = (input0_shared[((((int)threadIdx.x) * 2) + 2305)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2561)] = (input0_shared[((((int)threadIdx.x) * 2) + 2561)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 2817)] = (input0_shared[((((int)threadIdx.x) * 2) + 2817)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3073)] = (input0_shared[((((int)threadIdx.x) * 2) + 3073)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3329)] = (input0_shared[((((int)threadIdx.x) * 2) + 3329)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3585)] = (input0_shared[((((int)threadIdx.x) * 2) + 3585)] / input1_shared[0]);\n  output0[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 2)) + 3841)] = (input0_shared[((((int)threadIdx.x) * 2) + 3841)] / input1_shared[0]);\n}\n\n__global__ void __launch_bounds__(128) Group12(half* input0, half* input1, half* output0) {\n  __shared__ char shared[8448];\n  Group12_0_SoftmaxBasic_139(input1, (half*)(shared+0), shared+0);\n  Group12_1_SoftmaxBasic_140(input0, (half*)(shared+0), (half*)(shared+0), shared+32);\n  Group12_2_SoftmaxBasic_141((half*)(shared+0), (half*)(shared+8192), shared+8192);\n  Group12_3_Reshape_Broadcast_SoftmaxBasic_161((half*)(shared+0), (half*)(shared+8192), output0, shared+8224);\n}\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      262144,
      1,
      1
    ],
    "latency": 4.0023040771484375,
    "name": "Group12",
    "gain": 5.232947111129761
  },
  {
    "nodes": [
      92
    ],
    "node_names": [
      "Dot_92"
    ],
    "group_id": 13,
    "input_desc": [
      [
        92,
        0
      ],
      [
        92,
        1
      ]
    ],
    "output_desc": [
      [
        92,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group7(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output0) {\n    __shared__ half input0_shared[8192];\n  __shared__ half input1_shared[8192];\n  cutlass::gemm::warp::GemmTensorOp<\n    cutlass::gemm::GemmShape<64, 64, 32>,\n    cutlass::layout::RowMajorTensorOpMultiplicandCrosswise<16, 32>,\n    cutlass::layout::RowMajorTensorOpMultiplicandCongruous<16, 64>\n> output0_cutlass_warp_mma((((int)threadIdx.y) >> 1), (((int)threadIdx.y) & 1), threadIdx.x);\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0 = 0; ax0_ax1_fused_0_0_0 < 4; ++ax0_ax1_fused_0_0_0) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + (((((ax0_ax1_fused_0_0_0 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + ((((((((int)blockIdx.x) >> 3) * 1048576) + (ax0_ax1_fused_0_0_0 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + ((((int)threadIdx.x) & 3) * 8)))), \"n\"(16)\n    );\n  }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_1 = 0; ax0_ax1_fused_0_0_0_1 < 4; ++ax0_ax1_fused_0_0_0_1) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + ((((((ax0_ax1_fused_0_0_0_1 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + (((((ax0_ax1_fused_0_0_0_1 * 8192) + (((int)threadIdx.y) * 2048)) + ((((int)threadIdx.x) >> 4) * 1024)) + ((((int)blockIdx.x) & 7) * 128)) + ((((int)threadIdx.x) & 15) * 8)))), \"n\"(16)\n    );\n  }\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_2 = 0; ax0_ax1_fused_0_0_0_2 < 4; ++ax0_ax1_fused_0_0_0_2) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + ((((((ax0_ax1_fused_0_0_0_2 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8)) + 4096)))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + (((((((((int)blockIdx.x) >> 3) * 1048576) + (ax0_ax1_fused_0_0_0_2 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + ((((int)threadIdx.x) & 3) * 8)) + 32))), \"n\"(16)\n    );\n  }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_3 = 0; ax0_ax1_fused_0_0_0_3 < 4; ++ax0_ax1_fused_0_0_0_3) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + (((((((ax0_ax1_fused_0_0_0_3 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8)) + 4096)))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + ((((((ax0_ax1_fused_0_0_0_3 * 8192) + (((int)threadIdx.y) * 2048)) + ((((int)threadIdx.x) >> 4) * 1024)) + ((((int)blockIdx.x) & 7) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 32768))), \"n\"(16)\n    );\n  }\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n  __syncthreads();\n  output0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[0])), 32},{(cutlass::half_t*)(&(input1_shared[0])), 128});\n  output0_cutlass_warp_mma.body();\n  for (int i3_0 = 0; i3_0 < 254; ++i3_0) {\n    #pragma unroll\n    for (int ax0_ax1_fused_0_0_0_4 = 0; ax0_ax1_fused_0_0_0_4 < 4; ++ax0_ax1_fused_0_0_0_4) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + (((((((i3_0 & 1) * 4096) + (ax0_ax1_fused_0_0_0_4 * 1024)) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + ((((((((((int)blockIdx.x) >> 3) * 1048576) + (ax0_ax1_fused_0_0_0_4 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + (i3_0 * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 64))), \"n\"(16)\n    );\n  }\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_0_0_0_5 = 0; ax0_ax1_fused_0_0_0_5 < 4; ++ax0_ax1_fused_0_0_0_5) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + ((((((((i3_0 & 1) * 4096) + (ax0_ax1_fused_0_0_0_5 * 1024)) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + (((((((i3_0 * 32768) + (ax0_ax1_fused_0_0_0_5 * 8192)) + (((int)threadIdx.y) * 2048)) + ((((int)threadIdx.x) >> 4) * 1024)) + ((((int)blockIdx.x) & 7) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 65536))), \"n\"(16)\n    );\n  }\n    }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n    __syncthreads();\n    output0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[(((i3_0 + 1) & 1) * 4096)])), 32},{(cutlass::half_t*)(&(input1_shared[(((i3_0 + 1) & 1) * 4096)])), 128});\n    output0_cutlass_warp_mma.epilogue();\n    output0_cutlass_warp_mma.body();\n  }\n__asm__ __volatile__(\"cp.async.wait_group 0;\");\n\n  __syncthreads();\n  output0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[4096])), 32},{(cutlass::half_t*)(&(input1_shared[4096])), 128});\n  output0_cutlass_warp_mma.epilogue();\n  output0_cutlass_warp_mma.body();\n  output0_cutlass_warp_mma.epilogue();\n  #pragma unroll\n  for (int ax1_0 = 0; ax1_0 < 64; ++ax1_0) {\n    *(uint1*)(output0 + (((((((((((int)blockIdx.x) >> 3) * 131072) + ((((int)threadIdx.y) >> 1) * 65536)) + ((ax1_0 & 7) * 8192)) + ((((int)threadIdx.x) >> 2) * 1024)) + ((((int)blockIdx.x) & 7) * 128)) + ((((int)threadIdx.y) & 1) * 64)) + ((ax1_0 >> 3) * 8)) + ((((int)threadIdx.x) & 3) * 2))) = *(uint1*)(output0_cutlass_warp_mma + (ax1_0 * 2));\n  }\n}\n\n",
    "block_size": [
      32,
      4,
      1
    ],
    "grid_size": [
      256,
      1,
      1
    ],
    "latency": 0.3266560137271881,
    "name": "Group7",
    "gain": 0
  },
  {
    "nodes": [
      148
    ],
    "node_names": [
      "Reshape_Reshape_Reshape_Reshape_Broadcast_Reshape_Reshape_Broadcast_148"
    ],
    "group_id": 14,
    "input_desc": [
      [
        148,
        0
      ]
    ],
    "output_desc": [
      [
        148,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group14(half* __restrict__ input0, half* __restrict__ output0) {\n  output0[((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)blockIdx.x) & 4095) * 128)) + ((int)threadIdx.x))] = input0[((((((int)blockIdx.x) & 4095) * 1024) + ((((int)blockIdx.x) >> 12) * 128)) + ((int)threadIdx.x))];\n  output0[(((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)blockIdx.x) & 4095) * 128)) + ((int)threadIdx.x)) + 1048576)] = input0[((((((int)blockIdx.x) & 4095) * 1024) + ((((int)blockIdx.x) >> 12) * 128)) + ((int)threadIdx.x))];\n  output0[(((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)blockIdx.x) & 4095) * 128)) + ((int)threadIdx.x)) + 2097152)] = input0[((((((int)blockIdx.x) & 4095) * 1024) + ((((int)blockIdx.x) >> 12) * 128)) + ((int)threadIdx.x))];\n  output0[(((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)blockIdx.x) & 4095) * 128)) + ((int)threadIdx.x)) + 3145728)] = input0[((((((int)blockIdx.x) & 4095) * 1024) + ((((int)blockIdx.x) >> 12) * 128)) + ((int)threadIdx.x))];\n  output0[(((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)blockIdx.x) & 4095) * 128)) + ((int)threadIdx.x)) + 524288)] = input0[((((((int)blockIdx.x) & 4095) * 1024) + ((((int)blockIdx.x) >> 12) * 128)) + ((int)threadIdx.x))];\n  output0[(((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)blockIdx.x) & 4095) * 128)) + ((int)threadIdx.x)) + 1572864)] = input0[((((((int)blockIdx.x) & 4095) * 1024) + ((((int)blockIdx.x) >> 12) * 128)) + ((int)threadIdx.x))];\n  output0[(((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)blockIdx.x) & 4095) * 128)) + ((int)threadIdx.x)) + 2621440)] = input0[((((((int)blockIdx.x) & 4095) * 1024) + ((((int)blockIdx.x) >> 12) * 128)) + ((int)threadIdx.x))];\n  output0[(((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)blockIdx.x) & 4095) * 128)) + ((int)threadIdx.x)) + 3670016)] = input0[((((((int)blockIdx.x) & 4095) * 1024) + ((((int)blockIdx.x) >> 12) * 128)) + ((int)threadIdx.x))];\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      32768,
      1,
      1
    ],
    "latency": 0.05783373862504959,
    "name": "Group14",
    "gain": 0
  },
  {
    "nodes": [
      162
    ],
    "node_names": [
      "BatchMatMul_Reshape_162"
    ],
    "group_id": 15,
    "input_desc": [
      [
        162,
        0
      ],
      [
        162,
        1
      ]
    ],
    "output_desc": [
      [
        162,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group15(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output0) {\n    __shared__ half input0_shared[16384];\n  __shared__ half input1_shared[8192];\n  cutlass::gemm::warp::GemmTensorOp<\n    cutlass::gemm::GemmShape<128, 64, 32>,\n    cutlass::layout::RowMajorTensorOpMultiplicandCrosswise<16, 32>,\n    cutlass::layout::RowMajorTensorOpMultiplicandCongruous<16, 64>\n> mediate0_cutlass_warp_mma((((int)threadIdx.y) >> 1), (((int)threadIdx.y) & 1), threadIdx.x);\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0 = 0; ax0_ax1_fused_0_0_0 < 8; ++ax0_ax1_fused_0_0_0) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + (((((ax0_ax1_fused_0_0_0 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + (((((((int)blockIdx.x) * 1048576) + (ax0_ax1_fused_0_0_0 * 131072)) + (((int)threadIdx.y) * 32768)) + ((((int)threadIdx.x) >> 2) * 4096)) + ((((int)threadIdx.x) & 3) * 8)))), \"n\"(16)\n    );\n  }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_1 = 0; ax0_ax1_fused_0_0_0_1 < 4; ++ax0_ax1_fused_0_0_0_1) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + ((((((ax0_ax1_fused_0_0_0_1 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + (((((((int)blockIdx.x) >> 4) * 524288) + (ax0_ax1_fused_0_0_0_1 * 1024)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 8)))), \"n\"(16)\n    );\n  }\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_2 = 0; ax0_ax1_fused_0_0_0_2 < 8; ++ax0_ax1_fused_0_0_0_2) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + ((((((ax0_ax1_fused_0_0_0_2 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8)) + 8192)))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + ((((((((int)blockIdx.x) * 1048576) + (ax0_ax1_fused_0_0_0_2 * 131072)) + (((int)threadIdx.y) * 32768)) + ((((int)threadIdx.x) >> 2) * 4096)) + ((((int)threadIdx.x) & 3) * 8)) + 32))), \"n\"(16)\n    );\n  }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_3 = 0; ax0_ax1_fused_0_0_0_3 < 4; ++ax0_ax1_fused_0_0_0_3) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + (((((((ax0_ax1_fused_0_0_0_3 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8)) + 4096)))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + ((((((((int)blockIdx.x) >> 4) * 524288) + (ax0_ax1_fused_0_0_0_3 * 1024)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 8)) + 4096))), \"n\"(16)\n    );\n  }\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n  __syncthreads();\n  mediate0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[0])), 32},{(cutlass::half_t*)(&(input1_shared[0])), 128});\n  mediate0_cutlass_warp_mma.body();\n  for (int i4_0 = 0; i4_0 < 126; ++i4_0) {\n    #pragma unroll\n    for (int ax0_ax1_fused_0_0_0_4 = 0; ax0_ax1_fused_0_0_0_4 < 8; ++ax0_ax1_fused_0_0_0_4) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + (((((((i4_0 & 1) * 8192) + (ax0_ax1_fused_0_0_0_4 * 1024)) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + (((((((((int)blockIdx.x) * 1048576) + (ax0_ax1_fused_0_0_0_4 * 131072)) + (((int)threadIdx.y) * 32768)) + ((((int)threadIdx.x) >> 2) * 4096)) + (i4_0 * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 64))), \"n\"(16)\n    );\n  }\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_0_0_0_5 = 0; ax0_ax1_fused_0_0_0_5 < 4; ++ax0_ax1_fused_0_0_0_5) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + ((((((((i4_0 & 1) * 4096) + (ax0_ax1_fused_0_0_0_5 * 1024)) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + (((((((((int)blockIdx.x) >> 4) * 524288) + (i4_0 * 4096)) + (ax0_ax1_fused_0_0_0_5 * 1024)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 8)) + 8192))), \"n\"(16)\n    );\n  }\n    }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n    __syncthreads();\n    mediate0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[(((i4_0 + 1) & 1) * 8192)])), 32},{(cutlass::half_t*)(&(input1_shared[(((i4_0 + 1) & 1) * 4096)])), 128});\n    mediate0_cutlass_warp_mma.epilogue();\n    mediate0_cutlass_warp_mma.body();\n  }\n__asm__ __volatile__(\"cp.async.wait_group 0;\");\n\n  __syncthreads();\n  mediate0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[8192])), 32},{(cutlass::half_t*)(&(input1_shared[4096])), 128});\n  mediate0_cutlass_warp_mma.epilogue();\n  mediate0_cutlass_warp_mma.body();\n  mediate0_cutlass_warp_mma.epilogue();\n  #pragma unroll\n  for (int ax1_0 = 0; ax1_0 < 128; ++ax1_0) {\n    *(uint1*)(output0 + (((((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.y) >> 1) * 16384)) + ((ax1_0 & 15) * 1024)) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)threadIdx.y) & 1) * 64)) + ((ax1_0 >> 4) * 8)) + ((((int)threadIdx.x) & 3) * 2))) = *(uint1*)(mediate0_cutlass_warp_mma + (ax1_0 * 2));\n  }\n}\n\n",
    "block_size": [
      32,
      4,
      1
    ],
    "grid_size": [
      1024,
      1,
      1
    ],
    "latency": 1.539072036743164,
    "name": "Group15",
    "gain": 0
  },
  {
    "nodes": [
      160,
      163
    ],
    "node_names": [
      "Reshape_Reshape_160",
      "Dot_Add_Convert_Reshape_Broadcast_Power_163"
    ],
    "group_id": 16,
    "input_desc": [
      [
        163,
        0
      ],
      [
        160,
        0
      ],
      [
        163,
        2
      ],
      [
        163,
        3
      ]
    ],
    "output_desc": [
      [
        163,
        0
      ],
      [
        163,
        1
      ],
      [
        163,
        2
      ]
    ],
    "code": "__device__ void Group16_0_Reshape_Reshape_160(half* __restrict__ input0, half* __restrict__ output0, char* shared) {\n  __syncthreads();\n  output0[(((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2))] = input0[((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2))];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 128)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 524288)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 256)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 1048576)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 384)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 1572864)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 512)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 2097152)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 640)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 2621440)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 768)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 3145728)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 896)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 3670016)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1024)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 4194304)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1152)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 4718592)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1280)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 5242880)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1408)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 5767168)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1536)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 6291456)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1664)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 6815744)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1792)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 7340032)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1920)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 7864320)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2048)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 8388608)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2176)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 8912896)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2304)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 9437184)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2432)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 9961472)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2560)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 10485760)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2688)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 11010048)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2816)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 11534336)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2944)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 12058624)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3072)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 12582912)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3200)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 13107200)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3328)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 13631488)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3456)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 14155776)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3584)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 14680064)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3712)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 15204352)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3840)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 15728640)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3968)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 16252928)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4096)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 16777216)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4224)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 17301504)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4352)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 17825792)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4480)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 18350080)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4608)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 18874368)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4736)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 19398656)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4864)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 19922944)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4992)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 20447232)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 5120)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 20971520)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 5248)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 21495808)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 5376)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 22020096)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 5504)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 22544384)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 5632)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 23068672)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 5760)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 23592960)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 5888)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 24117248)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6016)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 24641536)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6144)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 25165824)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6272)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 25690112)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6400)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 26214400)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6528)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 26738688)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6656)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 27262976)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6784)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 27787264)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6912)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 28311552)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7040)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 28835840)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7168)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 29360128)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7296)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 29884416)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7424)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 30408704)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7552)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 30932992)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7680)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 31457280)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7808)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 31981568)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7936)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 32505856)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 8064)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 33030144)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 1)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 129)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 524289)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 257)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 1048577)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 385)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 1572865)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 513)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 2097153)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 641)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 2621441)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 769)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 3145729)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 897)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 3670017)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1025)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 4194305)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1153)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 4718593)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1281)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 5242881)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1409)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 5767169)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1537)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 6291457)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1665)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 6815745)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1793)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 7340033)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 1921)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 7864321)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2049)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 8388609)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2177)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 8912897)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2305)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 9437185)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2433)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 9961473)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2561)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 10485761)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2689)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 11010049)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2817)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 11534337)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 2945)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 12058625)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3073)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 12582913)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3201)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 13107201)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3329)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 13631489)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3457)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 14155777)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3585)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 14680065)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3713)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 15204353)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3841)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 15728641)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 3969)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 16252929)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4097)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 16777217)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4225)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 17301505)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4353)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 17825793)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4481)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 18350081)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4609)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 18874369)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4737)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 19398657)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4865)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 19922945)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 4993)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 20447233)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 5121)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 20971521)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 5249)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 21495809)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 5377)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 22020097)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 5505)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 22544385)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 5633)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 23068673)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 5761)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 23592961)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 5889)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 24117249)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6017)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 24641537)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6145)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 25165825)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6273)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 25690113)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6401)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 26214401)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6529)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 26738689)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6657)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 27262977)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6785)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 27787265)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 6913)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 28311553)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7041)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 28835841)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7169)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 29360129)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7297)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 29884417)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7425)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 30408705)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7553)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 30932993)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7681)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 31457281)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7809)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 31981569)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 7937)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 32505857)];\n  output0[((((((int)threadIdx.x) >> 6) * 8192) + ((((int)threadIdx.x) & 63) * 2)) + 8065)] = input0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + 33030145)];\n  __syncthreads();\n}\n\n__device__ void Group16_1_Dot_Add_Convert_Reshape_Broadcast_Power_163(float* __restrict__ input0, half* __restrict__ input1, half* __restrict__ input2, half* __restrict__ input3, half* __restrict__ output_proxy, float* __restrict__ output_proxy_1, float* __restrict__ output_proxy_2, char* shared) {\n  half mediate2_local[128];\n  half* input1_shared = input1;\n  half* input2_shared = (half*)(shared+0);\n  mediate2_local[0] = __float2half_rn(0.000000e+00f);\n  mediate2_local[4] = __float2half_rn(0.000000e+00f);\n  mediate2_local[8] = __float2half_rn(0.000000e+00f);\n  mediate2_local[12] = __float2half_rn(0.000000e+00f);\n  mediate2_local[16] = __float2half_rn(0.000000e+00f);\n  mediate2_local[20] = __float2half_rn(0.000000e+00f);\n  mediate2_local[24] = __float2half_rn(0.000000e+00f);\n  mediate2_local[28] = __float2half_rn(0.000000e+00f);\n  mediate2_local[32] = __float2half_rn(0.000000e+00f);\n  mediate2_local[36] = __float2half_rn(0.000000e+00f);\n  mediate2_local[40] = __float2half_rn(0.000000e+00f);\n  mediate2_local[44] = __float2half_rn(0.000000e+00f);\n  mediate2_local[48] = __float2half_rn(0.000000e+00f);\n  mediate2_local[52] = __float2half_rn(0.000000e+00f);\n  mediate2_local[56] = __float2half_rn(0.000000e+00f);\n  mediate2_local[60] = __float2half_rn(0.000000e+00f);\n  mediate2_local[64] = __float2half_rn(0.000000e+00f);\n  mediate2_local[68] = __float2half_rn(0.000000e+00f);\n  mediate2_local[72] = __float2half_rn(0.000000e+00f);\n  mediate2_local[76] = __float2half_rn(0.000000e+00f);\n  mediate2_local[80] = __float2half_rn(0.000000e+00f);\n  mediate2_local[84] = __float2half_rn(0.000000e+00f);\n  mediate2_local[88] = __float2half_rn(0.000000e+00f);\n  mediate2_local[92] = __float2half_rn(0.000000e+00f);\n  mediate2_local[96] = __float2half_rn(0.000000e+00f);\n  mediate2_local[100] = __float2half_rn(0.000000e+00f);\n  mediate2_local[104] = __float2half_rn(0.000000e+00f);\n  mediate2_local[108] = __float2half_rn(0.000000e+00f);\n  mediate2_local[112] = __float2half_rn(0.000000e+00f);\n  mediate2_local[116] = __float2half_rn(0.000000e+00f);\n  mediate2_local[120] = __float2half_rn(0.000000e+00f);\n  mediate2_local[124] = __float2half_rn(0.000000e+00f);\n  mediate2_local[2] = __float2half_rn(0.000000e+00f);\n  mediate2_local[6] = __float2half_rn(0.000000e+00f);\n  mediate2_local[10] = __float2half_rn(0.000000e+00f);\n  mediate2_local[14] = __float2half_rn(0.000000e+00f);\n  mediate2_local[18] = __float2half_rn(0.000000e+00f);\n  mediate2_local[22] = __float2half_rn(0.000000e+00f);\n  mediate2_local[26] = __float2half_rn(0.000000e+00f);\n  mediate2_local[30] = __float2half_rn(0.000000e+00f);\n  mediate2_local[34] = __float2half_rn(0.000000e+00f);\n  mediate2_local[38] = __float2half_rn(0.000000e+00f);\n  mediate2_local[42] = __float2half_rn(0.000000e+00f);\n  mediate2_local[46] = __float2half_rn(0.000000e+00f);\n  mediate2_local[50] = __float2half_rn(0.000000e+00f);\n  mediate2_local[54] = __float2half_rn(0.000000e+00f);\n  mediate2_local[58] = __float2half_rn(0.000000e+00f);\n  mediate2_local[62] = __float2half_rn(0.000000e+00f);\n  mediate2_local[66] = __float2half_rn(0.000000e+00f);\n  mediate2_local[70] = __float2half_rn(0.000000e+00f);\n  mediate2_local[74] = __float2half_rn(0.000000e+00f);\n  mediate2_local[78] = __float2half_rn(0.000000e+00f);\n  mediate2_local[82] = __float2half_rn(0.000000e+00f);\n  mediate2_local[86] = __float2half_rn(0.000000e+00f);\n  mediate2_local[90] = __float2half_rn(0.000000e+00f);\n  mediate2_local[94] = __float2half_rn(0.000000e+00f);\n  mediate2_local[98] = __float2half_rn(0.000000e+00f);\n  mediate2_local[102] = __float2half_rn(0.000000e+00f);\n  mediate2_local[106] = __float2half_rn(0.000000e+00f);\n  mediate2_local[110] = __float2half_rn(0.000000e+00f);\n  mediate2_local[114] = __float2half_rn(0.000000e+00f);\n  mediate2_local[118] = __float2half_rn(0.000000e+00f);\n  mediate2_local[122] = __float2half_rn(0.000000e+00f);\n  mediate2_local[126] = __float2half_rn(0.000000e+00f);\n  mediate2_local[1] = __float2half_rn(0.000000e+00f);\n  mediate2_local[5] = __float2half_rn(0.000000e+00f);\n  mediate2_local[9] = __float2half_rn(0.000000e+00f);\n  mediate2_local[13] = __float2half_rn(0.000000e+00f);\n  mediate2_local[17] = __float2half_rn(0.000000e+00f);\n  mediate2_local[21] = __float2half_rn(0.000000e+00f);\n  mediate2_local[25] = __float2half_rn(0.000000e+00f);\n  mediate2_local[29] = __float2half_rn(0.000000e+00f);\n  mediate2_local[33] = __float2half_rn(0.000000e+00f);\n  mediate2_local[37] = __float2half_rn(0.000000e+00f);\n  mediate2_local[41] = __float2half_rn(0.000000e+00f);\n  mediate2_local[45] = __float2half_rn(0.000000e+00f);\n  mediate2_local[49] = __float2half_rn(0.000000e+00f);\n  mediate2_local[53] = __float2half_rn(0.000000e+00f);\n  mediate2_local[57] = __float2half_rn(0.000000e+00f);\n  mediate2_local[61] = __float2half_rn(0.000000e+00f);\n  mediate2_local[65] = __float2half_rn(0.000000e+00f);\n  mediate2_local[69] = __float2half_rn(0.000000e+00f);\n  mediate2_local[73] = __float2half_rn(0.000000e+00f);\n  mediate2_local[77] = __float2half_rn(0.000000e+00f);\n  mediate2_local[81] = __float2half_rn(0.000000e+00f);\n  mediate2_local[85] = __float2half_rn(0.000000e+00f);\n  mediate2_local[89] = __float2half_rn(0.000000e+00f);\n  mediate2_local[93] = __float2half_rn(0.000000e+00f);\n  mediate2_local[97] = __float2half_rn(0.000000e+00f);\n  mediate2_local[101] = __float2half_rn(0.000000e+00f);\n  mediate2_local[105] = __float2half_rn(0.000000e+00f);\n  mediate2_local[109] = __float2half_rn(0.000000e+00f);\n  mediate2_local[113] = __float2half_rn(0.000000e+00f);\n  mediate2_local[117] = __float2half_rn(0.000000e+00f);\n  mediate2_local[121] = __float2half_rn(0.000000e+00f);\n  mediate2_local[125] = __float2half_rn(0.000000e+00f);\n  mediate2_local[3] = __float2half_rn(0.000000e+00f);\n  mediate2_local[7] = __float2half_rn(0.000000e+00f);\n  mediate2_local[11] = __float2half_rn(0.000000e+00f);\n  mediate2_local[15] = __float2half_rn(0.000000e+00f);\n  mediate2_local[19] = __float2half_rn(0.000000e+00f);\n  mediate2_local[23] = __float2half_rn(0.000000e+00f);\n  mediate2_local[27] = __float2half_rn(0.000000e+00f);\n  mediate2_local[31] = __float2half_rn(0.000000e+00f);\n  mediate2_local[35] = __float2half_rn(0.000000e+00f);\n  mediate2_local[39] = __float2half_rn(0.000000e+00f);\n  mediate2_local[43] = __float2half_rn(0.000000e+00f);\n  mediate2_local[47] = __float2half_rn(0.000000e+00f);\n  mediate2_local[51] = __float2half_rn(0.000000e+00f);\n  mediate2_local[55] = __float2half_rn(0.000000e+00f);\n  mediate2_local[59] = __float2half_rn(0.000000e+00f);\n  mediate2_local[63] = __float2half_rn(0.000000e+00f);\n  mediate2_local[67] = __float2half_rn(0.000000e+00f);\n  mediate2_local[71] = __float2half_rn(0.000000e+00f);\n  mediate2_local[75] = __float2half_rn(0.000000e+00f);\n  mediate2_local[79] = __float2half_rn(0.000000e+00f);\n  mediate2_local[83] = __float2half_rn(0.000000e+00f);\n  mediate2_local[87] = __float2half_rn(0.000000e+00f);\n  mediate2_local[91] = __float2half_rn(0.000000e+00f);\n  mediate2_local[95] = __float2half_rn(0.000000e+00f);\n  mediate2_local[99] = __float2half_rn(0.000000e+00f);\n  mediate2_local[103] = __float2half_rn(0.000000e+00f);\n  mediate2_local[107] = __float2half_rn(0.000000e+00f);\n  mediate2_local[111] = __float2half_rn(0.000000e+00f);\n  mediate2_local[115] = __float2half_rn(0.000000e+00f);\n  mediate2_local[119] = __float2half_rn(0.000000e+00f);\n  mediate2_local[123] = __float2half_rn(0.000000e+00f);\n  mediate2_local[127] = __float2half_rn(0.000000e+00f);\n  for (int K_outer = 0; K_outer < 8192; ++K_outer) {\n    __syncthreads();\n    *(uint4*)(input2_shared + (((int)threadIdx.x) * 8)) = *(uint4*)(input2 + ((K_outer * 8192) + (((int)threadIdx.x) * 8)));\n    *(uint4*)(input2_shared + ((((int)threadIdx.x) * 8) + 1024)) = *(uint4*)(input2 + (((K_outer * 8192) + (((int)threadIdx.x) * 8)) + 1024));\n    *(uint4*)(input2_shared + ((((int)threadIdx.x) * 8) + 2048)) = *(uint4*)(input2 + (((K_outer * 8192) + (((int)threadIdx.x) * 8)) + 2048));\n    *(uint4*)(input2_shared + ((((int)threadIdx.x) * 8) + 3072)) = *(uint4*)(input2 + (((K_outer * 8192) + (((int)threadIdx.x) * 8)) + 3072));\n    *(uint4*)(input2_shared + ((((int)threadIdx.x) * 8) + 4096)) = *(uint4*)(input2 + (((K_outer * 8192) + (((int)threadIdx.x) * 8)) + 4096));\n    *(uint4*)(input2_shared + ((((int)threadIdx.x) * 8) + 5120)) = *(uint4*)(input2 + (((K_outer * 8192) + (((int)threadIdx.x) * 8)) + 5120));\n    *(uint4*)(input2_shared + ((((int)threadIdx.x) * 8) + 6144)) = *(uint4*)(input2 + (((K_outer * 8192) + (((int)threadIdx.x) * 8)) + 6144));\n    *(uint4*)(input2_shared + ((((int)threadIdx.x) * 8) + 7168)) = *(uint4*)(input2 + (((K_outer * 8192) + (((int)threadIdx.x) * 8)) + 7168));\n    __syncthreads();\n    mediate2_local[0] = (mediate2_local[0] + (input1_shared[K_outer] * input2_shared[(((int)threadIdx.x) * 2)]));\n    mediate2_local[4] = (mediate2_local[4] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 256)]));\n    mediate2_local[8] = (mediate2_local[8] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 512)]));\n    mediate2_local[12] = (mediate2_local[12] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 768)]));\n    mediate2_local[16] = (mediate2_local[16] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 1024)]));\n    mediate2_local[20] = (mediate2_local[20] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 1280)]));\n    mediate2_local[24] = (mediate2_local[24] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 1536)]));\n    mediate2_local[28] = (mediate2_local[28] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 1792)]));\n    mediate2_local[32] = (mediate2_local[32] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 2048)]));\n    mediate2_local[36] = (mediate2_local[36] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 2304)]));\n    mediate2_local[40] = (mediate2_local[40] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 2560)]));\n    mediate2_local[44] = (mediate2_local[44] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 2816)]));\n    mediate2_local[48] = (mediate2_local[48] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 3072)]));\n    mediate2_local[52] = (mediate2_local[52] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 3328)]));\n    mediate2_local[56] = (mediate2_local[56] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 3584)]));\n    mediate2_local[60] = (mediate2_local[60] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 3840)]));\n    mediate2_local[64] = (mediate2_local[64] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 4096)]));\n    mediate2_local[68] = (mediate2_local[68] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 4352)]));\n    mediate2_local[72] = (mediate2_local[72] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 4608)]));\n    mediate2_local[76] = (mediate2_local[76] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 4864)]));\n    mediate2_local[80] = (mediate2_local[80] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 5120)]));\n    mediate2_local[84] = (mediate2_local[84] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 5376)]));\n    mediate2_local[88] = (mediate2_local[88] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 5632)]));\n    mediate2_local[92] = (mediate2_local[92] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 5888)]));\n    mediate2_local[96] = (mediate2_local[96] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 6144)]));\n    mediate2_local[100] = (mediate2_local[100] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 6400)]));\n    mediate2_local[104] = (mediate2_local[104] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 6656)]));\n    mediate2_local[108] = (mediate2_local[108] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 6912)]));\n    mediate2_local[112] = (mediate2_local[112] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 7168)]));\n    mediate2_local[116] = (mediate2_local[116] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 7424)]));\n    mediate2_local[120] = (mediate2_local[120] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 7680)]));\n    mediate2_local[124] = (mediate2_local[124] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 7936)]));\n    mediate2_local[2] = (mediate2_local[2] + (input1_shared[(K_outer + 8192)] * input2_shared[(((int)threadIdx.x) * 2)]));\n    mediate2_local[6] = (mediate2_local[6] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 256)]));\n    mediate2_local[10] = (mediate2_local[10] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 512)]));\n    mediate2_local[14] = (mediate2_local[14] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 768)]));\n    mediate2_local[18] = (mediate2_local[18] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 1024)]));\n    mediate2_local[22] = (mediate2_local[22] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 1280)]));\n    mediate2_local[26] = (mediate2_local[26] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 1536)]));\n    mediate2_local[30] = (mediate2_local[30] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 1792)]));\n    mediate2_local[34] = (mediate2_local[34] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 2048)]));\n    mediate2_local[38] = (mediate2_local[38] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 2304)]));\n    mediate2_local[42] = (mediate2_local[42] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 2560)]));\n    mediate2_local[46] = (mediate2_local[46] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 2816)]));\n    mediate2_local[50] = (mediate2_local[50] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 3072)]));\n    mediate2_local[54] = (mediate2_local[54] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 3328)]));\n    mediate2_local[58] = (mediate2_local[58] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 3584)]));\n    mediate2_local[62] = (mediate2_local[62] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 3840)]));\n    mediate2_local[66] = (mediate2_local[66] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 4096)]));\n    mediate2_local[70] = (mediate2_local[70] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 4352)]));\n    mediate2_local[74] = (mediate2_local[74] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 4608)]));\n    mediate2_local[78] = (mediate2_local[78] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 4864)]));\n    mediate2_local[82] = (mediate2_local[82] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 5120)]));\n    mediate2_local[86] = (mediate2_local[86] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 5376)]));\n    mediate2_local[90] = (mediate2_local[90] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 5632)]));\n    mediate2_local[94] = (mediate2_local[94] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 5888)]));\n    mediate2_local[98] = (mediate2_local[98] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 6144)]));\n    mediate2_local[102] = (mediate2_local[102] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 6400)]));\n    mediate2_local[106] = (mediate2_local[106] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 6656)]));\n    mediate2_local[110] = (mediate2_local[110] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 6912)]));\n    mediate2_local[114] = (mediate2_local[114] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 7168)]));\n    mediate2_local[118] = (mediate2_local[118] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 7424)]));\n    mediate2_local[122] = (mediate2_local[122] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 7680)]));\n    mediate2_local[126] = (mediate2_local[126] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 7936)]));\n    mediate2_local[1] = (mediate2_local[1] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 1)]));\n    mediate2_local[5] = (mediate2_local[5] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 257)]));\n    mediate2_local[9] = (mediate2_local[9] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 513)]));\n    mediate2_local[13] = (mediate2_local[13] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 769)]));\n    mediate2_local[17] = (mediate2_local[17] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 1025)]));\n    mediate2_local[21] = (mediate2_local[21] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 1281)]));\n    mediate2_local[25] = (mediate2_local[25] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 1537)]));\n    mediate2_local[29] = (mediate2_local[29] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 1793)]));\n    mediate2_local[33] = (mediate2_local[33] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 2049)]));\n    mediate2_local[37] = (mediate2_local[37] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 2305)]));\n    mediate2_local[41] = (mediate2_local[41] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 2561)]));\n    mediate2_local[45] = (mediate2_local[45] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 2817)]));\n    mediate2_local[49] = (mediate2_local[49] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 3073)]));\n    mediate2_local[53] = (mediate2_local[53] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 3329)]));\n    mediate2_local[57] = (mediate2_local[57] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 3585)]));\n    mediate2_local[61] = (mediate2_local[61] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 3841)]));\n    mediate2_local[65] = (mediate2_local[65] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 4097)]));\n    mediate2_local[69] = (mediate2_local[69] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 4353)]));\n    mediate2_local[73] = (mediate2_local[73] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 4609)]));\n    mediate2_local[77] = (mediate2_local[77] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 4865)]));\n    mediate2_local[81] = (mediate2_local[81] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 5121)]));\n    mediate2_local[85] = (mediate2_local[85] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 5377)]));\n    mediate2_local[89] = (mediate2_local[89] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 5633)]));\n    mediate2_local[93] = (mediate2_local[93] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 5889)]));\n    mediate2_local[97] = (mediate2_local[97] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 6145)]));\n    mediate2_local[101] = (mediate2_local[101] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 6401)]));\n    mediate2_local[105] = (mediate2_local[105] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 6657)]));\n    mediate2_local[109] = (mediate2_local[109] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 6913)]));\n    mediate2_local[113] = (mediate2_local[113] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 7169)]));\n    mediate2_local[117] = (mediate2_local[117] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 7425)]));\n    mediate2_local[121] = (mediate2_local[121] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 7681)]));\n    mediate2_local[125] = (mediate2_local[125] + (input1_shared[K_outer] * input2_shared[((((int)threadIdx.x) * 2) + 7937)]));\n    mediate2_local[3] = (mediate2_local[3] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 1)]));\n    mediate2_local[7] = (mediate2_local[7] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 257)]));\n    mediate2_local[11] = (mediate2_local[11] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 513)]));\n    mediate2_local[15] = (mediate2_local[15] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 769)]));\n    mediate2_local[19] = (mediate2_local[19] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 1025)]));\n    mediate2_local[23] = (mediate2_local[23] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 1281)]));\n    mediate2_local[27] = (mediate2_local[27] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 1537)]));\n    mediate2_local[31] = (mediate2_local[31] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 1793)]));\n    mediate2_local[35] = (mediate2_local[35] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 2049)]));\n    mediate2_local[39] = (mediate2_local[39] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 2305)]));\n    mediate2_local[43] = (mediate2_local[43] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 2561)]));\n    mediate2_local[47] = (mediate2_local[47] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 2817)]));\n    mediate2_local[51] = (mediate2_local[51] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 3073)]));\n    mediate2_local[55] = (mediate2_local[55] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 3329)]));\n    mediate2_local[59] = (mediate2_local[59] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 3585)]));\n    mediate2_local[63] = (mediate2_local[63] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 3841)]));\n    mediate2_local[67] = (mediate2_local[67] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 4097)]));\n    mediate2_local[71] = (mediate2_local[71] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 4353)]));\n    mediate2_local[75] = (mediate2_local[75] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 4609)]));\n    mediate2_local[79] = (mediate2_local[79] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 4865)]));\n    mediate2_local[83] = (mediate2_local[83] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 5121)]));\n    mediate2_local[87] = (mediate2_local[87] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 5377)]));\n    mediate2_local[91] = (mediate2_local[91] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 5633)]));\n    mediate2_local[95] = (mediate2_local[95] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 5889)]));\n    mediate2_local[99] = (mediate2_local[99] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 6145)]));\n    mediate2_local[103] = (mediate2_local[103] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 6401)]));\n    mediate2_local[107] = (mediate2_local[107] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 6657)]));\n    mediate2_local[111] = (mediate2_local[111] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 6913)]));\n    mediate2_local[115] = (mediate2_local[115] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 7169)]));\n    mediate2_local[119] = (mediate2_local[119] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 7425)]));\n    mediate2_local[123] = (mediate2_local[123] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 7681)]));\n    mediate2_local[127] = (mediate2_local[127] + (input1_shared[(K_outer + 8192)] * input2_shared[((((int)threadIdx.x) * 2) + 7937)]));\n  }\n  output_proxy[((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2))] = (input3[((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2))] + mediate2_local[0]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 256)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 256)] + mediate2_local[4]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 512)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 512)] + mediate2_local[8]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 768)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 768)] + mediate2_local[12]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1024)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1024)] + mediate2_local[16]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1280)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1280)] + mediate2_local[20]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1536)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1536)] + mediate2_local[24]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1792)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1792)] + mediate2_local[28]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2048)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2048)] + mediate2_local[32]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2304)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2304)] + mediate2_local[36]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2560)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2560)] + mediate2_local[40]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2816)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2816)] + mediate2_local[44]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3072)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3072)] + mediate2_local[48]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3328)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3328)] + mediate2_local[52]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3584)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3584)] + mediate2_local[56]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3840)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3840)] + mediate2_local[60]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4096)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4096)] + mediate2_local[64]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4352)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4352)] + mediate2_local[68]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4608)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4608)] + mediate2_local[72]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4864)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4864)] + mediate2_local[76]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5120)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5120)] + mediate2_local[80]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5376)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5376)] + mediate2_local[84]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5632)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5632)] + mediate2_local[88]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5888)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5888)] + mediate2_local[92]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6144)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6144)] + mediate2_local[96]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6400)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6400)] + mediate2_local[100]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6656)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6656)] + mediate2_local[104]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6912)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6912)] + mediate2_local[108]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7168)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7168)] + mediate2_local[112]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7424)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7424)] + mediate2_local[116]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7680)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7680)] + mediate2_local[120]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7936)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7936)] + mediate2_local[124]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8192)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8192)] + mediate2_local[2]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8448)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8448)] + mediate2_local[6]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8704)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8704)] + mediate2_local[10]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8960)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8960)] + mediate2_local[14]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9216)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9216)] + mediate2_local[18]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9472)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9472)] + mediate2_local[22]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9728)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9728)] + mediate2_local[26]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9984)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9984)] + mediate2_local[30]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10240)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10240)] + mediate2_local[34]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10496)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10496)] + mediate2_local[38]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10752)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10752)] + mediate2_local[42]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11008)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11008)] + mediate2_local[46]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11264)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11264)] + mediate2_local[50]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11520)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11520)] + mediate2_local[54]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11776)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11776)] + mediate2_local[58]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12032)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12032)] + mediate2_local[62]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12288)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12288)] + mediate2_local[66]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12544)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12544)] + mediate2_local[70]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12800)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12800)] + mediate2_local[74]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13056)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13056)] + mediate2_local[78]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13312)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13312)] + mediate2_local[82]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13568)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13568)] + mediate2_local[86]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13824)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13824)] + mediate2_local[90]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14080)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14080)] + mediate2_local[94]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14336)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14336)] + mediate2_local[98]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14592)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14592)] + mediate2_local[102]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14848)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14848)] + mediate2_local[106]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15104)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15104)] + mediate2_local[110]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15360)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15360)] + mediate2_local[114]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15616)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15616)] + mediate2_local[118]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15872)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15872)] + mediate2_local[122]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 16128)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 16128)] + mediate2_local[126]);\n  output_proxy_1[((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2))] = ((float)(input3[((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2))] + mediate2_local[0]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 256)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 256)] + mediate2_local[4]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 512)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 512)] + mediate2_local[8]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 768)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 768)] + mediate2_local[12]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1024)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1024)] + mediate2_local[16]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1280)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1280)] + mediate2_local[20]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1536)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1536)] + mediate2_local[24]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1792)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1792)] + mediate2_local[28]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2048)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2048)] + mediate2_local[32]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2304)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2304)] + mediate2_local[36]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2560)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2560)] + mediate2_local[40]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2816)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2816)] + mediate2_local[44]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3072)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3072)] + mediate2_local[48]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3328)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3328)] + mediate2_local[52]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3584)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3584)] + mediate2_local[56]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3840)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3840)] + mediate2_local[60]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4096)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4096)] + mediate2_local[64]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4352)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4352)] + mediate2_local[68]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4608)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4608)] + mediate2_local[72]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4864)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4864)] + mediate2_local[76]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5120)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5120)] + mediate2_local[80]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5376)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5376)] + mediate2_local[84]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5632)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5632)] + mediate2_local[88]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5888)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5888)] + mediate2_local[92]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6144)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6144)] + mediate2_local[96]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6400)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6400)] + mediate2_local[100]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6656)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6656)] + mediate2_local[104]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6912)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6912)] + mediate2_local[108]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7168)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7168)] + mediate2_local[112]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7424)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7424)] + mediate2_local[116]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7680)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7680)] + mediate2_local[120]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7936)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7936)] + mediate2_local[124]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8192)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8192)] + mediate2_local[2]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8448)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8448)] + mediate2_local[6]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8704)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8704)] + mediate2_local[10]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8960)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8960)] + mediate2_local[14]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9216)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9216)] + mediate2_local[18]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9472)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9472)] + mediate2_local[22]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9728)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9728)] + mediate2_local[26]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9984)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9984)] + mediate2_local[30]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10240)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10240)] + mediate2_local[34]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10496)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10496)] + mediate2_local[38]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10752)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10752)] + mediate2_local[42]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11008)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11008)] + mediate2_local[46]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11264)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11264)] + mediate2_local[50]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11520)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11520)] + mediate2_local[54]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11776)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11776)] + mediate2_local[58]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12032)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12032)] + mediate2_local[62]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12288)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12288)] + mediate2_local[66]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12544)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12544)] + mediate2_local[70]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12800)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12800)] + mediate2_local[74]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13056)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13056)] + mediate2_local[78]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13312)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13312)] + mediate2_local[82]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13568)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13568)] + mediate2_local[86]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13824)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13824)] + mediate2_local[90]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14080)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14080)] + mediate2_local[94]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14336)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14336)] + mediate2_local[98]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14592)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14592)] + mediate2_local[102]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14848)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14848)] + mediate2_local[106]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15104)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15104)] + mediate2_local[110]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15360)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15360)] + mediate2_local[114]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15616)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15616)] + mediate2_local[118]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15872)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15872)] + mediate2_local[122]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 16128)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 16128)] + mediate2_local[126]));\n  output_proxy_2[((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2))] = powf(((float)(input3[((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2))] + mediate2_local[0])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 256)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 256)] + mediate2_local[4])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 512)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 512)] + mediate2_local[8])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 768)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 768)] + mediate2_local[12])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1024)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1024)] + mediate2_local[16])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1280)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1280)] + mediate2_local[20])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1536)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1536)] + mediate2_local[24])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1792)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1792)] + mediate2_local[28])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2048)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2048)] + mediate2_local[32])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2304)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2304)] + mediate2_local[36])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2560)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2560)] + mediate2_local[40])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2816)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2816)] + mediate2_local[44])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3072)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3072)] + mediate2_local[48])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3328)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3328)] + mediate2_local[52])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3584)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3584)] + mediate2_local[56])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3840)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3840)] + mediate2_local[60])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4096)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4096)] + mediate2_local[64])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4352)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4352)] + mediate2_local[68])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4608)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4608)] + mediate2_local[72])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4864)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4864)] + mediate2_local[76])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5120)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5120)] + mediate2_local[80])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5376)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5376)] + mediate2_local[84])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5632)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5632)] + mediate2_local[88])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5888)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5888)] + mediate2_local[92])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6144)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6144)] + mediate2_local[96])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6400)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6400)] + mediate2_local[100])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6656)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6656)] + mediate2_local[104])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6912)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6912)] + mediate2_local[108])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7168)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7168)] + mediate2_local[112])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7424)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7424)] + mediate2_local[116])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7680)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7680)] + mediate2_local[120])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7936)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7936)] + mediate2_local[124])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8192)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8192)] + mediate2_local[2])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8448)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8448)] + mediate2_local[6])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8704)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8704)] + mediate2_local[10])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8960)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8960)] + mediate2_local[14])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9216)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9216)] + mediate2_local[18])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9472)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9472)] + mediate2_local[22])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9728)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9728)] + mediate2_local[26])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9984)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9984)] + mediate2_local[30])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10240)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10240)] + mediate2_local[34])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10496)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10496)] + mediate2_local[38])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10752)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10752)] + mediate2_local[42])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11008)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11008)] + mediate2_local[46])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11264)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11264)] + mediate2_local[50])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11520)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11520)] + mediate2_local[54])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11776)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11776)] + mediate2_local[58])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12032)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12032)] + mediate2_local[62])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12288)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12288)] + mediate2_local[66])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12544)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12544)] + mediate2_local[70])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12800)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12800)] + mediate2_local[74])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13056)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13056)] + mediate2_local[78])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13312)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13312)] + mediate2_local[82])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13568)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13568)] + mediate2_local[86])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13824)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13824)] + mediate2_local[90])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14080)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14080)] + mediate2_local[94])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14336)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14336)] + mediate2_local[98])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14592)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14592)] + mediate2_local[102])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14848)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14848)] + mediate2_local[106])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15104)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15104)] + mediate2_local[110])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15360)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15360)] + mediate2_local[114])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15616)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15616)] + mediate2_local[118])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15872)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15872)] + mediate2_local[122])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 16128)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 16128)] + mediate2_local[126])), input0[0]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1)] + mediate2_local[1]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 257)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 257)] + mediate2_local[5]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 513)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 513)] + mediate2_local[9]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 769)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 769)] + mediate2_local[13]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1025)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1025)] + mediate2_local[17]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1281)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1281)] + mediate2_local[21]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1537)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1537)] + mediate2_local[25]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1793)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1793)] + mediate2_local[29]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2049)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2049)] + mediate2_local[33]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2305)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2305)] + mediate2_local[37]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2561)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2561)] + mediate2_local[41]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2817)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2817)] + mediate2_local[45]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3073)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3073)] + mediate2_local[49]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3329)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3329)] + mediate2_local[53]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3585)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3585)] + mediate2_local[57]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3841)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3841)] + mediate2_local[61]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4097)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4097)] + mediate2_local[65]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4353)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4353)] + mediate2_local[69]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4609)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4609)] + mediate2_local[73]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4865)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4865)] + mediate2_local[77]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5121)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5121)] + mediate2_local[81]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5377)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5377)] + mediate2_local[85]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5633)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5633)] + mediate2_local[89]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5889)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5889)] + mediate2_local[93]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6145)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6145)] + mediate2_local[97]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6401)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6401)] + mediate2_local[101]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6657)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6657)] + mediate2_local[105]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6913)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6913)] + mediate2_local[109]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7169)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7169)] + mediate2_local[113]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7425)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7425)] + mediate2_local[117]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7681)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7681)] + mediate2_local[121]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7937)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7937)] + mediate2_local[125]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8193)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8193)] + mediate2_local[3]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8449)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8449)] + mediate2_local[7]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8705)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8705)] + mediate2_local[11]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8961)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8961)] + mediate2_local[15]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9217)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9217)] + mediate2_local[19]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9473)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9473)] + mediate2_local[23]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9729)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9729)] + mediate2_local[27]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9985)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9985)] + mediate2_local[31]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10241)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10241)] + mediate2_local[35]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10497)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10497)] + mediate2_local[39]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10753)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10753)] + mediate2_local[43]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11009)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11009)] + mediate2_local[47]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11265)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11265)] + mediate2_local[51]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11521)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11521)] + mediate2_local[55]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11777)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11777)] + mediate2_local[59]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12033)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12033)] + mediate2_local[63]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12289)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12289)] + mediate2_local[67]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12545)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12545)] + mediate2_local[71]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12801)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12801)] + mediate2_local[75]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13057)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13057)] + mediate2_local[79]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13313)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13313)] + mediate2_local[83]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13569)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13569)] + mediate2_local[87]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13825)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13825)] + mediate2_local[91]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14081)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14081)] + mediate2_local[95]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14337)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14337)] + mediate2_local[99]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14593)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14593)] + mediate2_local[103]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14849)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14849)] + mediate2_local[107]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15105)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15105)] + mediate2_local[111]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15361)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15361)] + mediate2_local[115]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15617)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15617)] + mediate2_local[119]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15873)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15873)] + mediate2_local[123]);\n  output_proxy[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 16129)] = (input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 16129)] + mediate2_local[127]);\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1)] + mediate2_local[1]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 257)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 257)] + mediate2_local[5]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 513)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 513)] + mediate2_local[9]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 769)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 769)] + mediate2_local[13]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1025)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1025)] + mediate2_local[17]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1281)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1281)] + mediate2_local[21]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1537)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1537)] + mediate2_local[25]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1793)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1793)] + mediate2_local[29]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2049)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2049)] + mediate2_local[33]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2305)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2305)] + mediate2_local[37]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2561)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2561)] + mediate2_local[41]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2817)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2817)] + mediate2_local[45]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3073)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3073)] + mediate2_local[49]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3329)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3329)] + mediate2_local[53]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3585)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3585)] + mediate2_local[57]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3841)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3841)] + mediate2_local[61]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4097)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4097)] + mediate2_local[65]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4353)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4353)] + mediate2_local[69]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4609)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4609)] + mediate2_local[73]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4865)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4865)] + mediate2_local[77]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5121)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5121)] + mediate2_local[81]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5377)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5377)] + mediate2_local[85]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5633)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5633)] + mediate2_local[89]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5889)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5889)] + mediate2_local[93]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6145)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6145)] + mediate2_local[97]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6401)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6401)] + mediate2_local[101]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6657)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6657)] + mediate2_local[105]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6913)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6913)] + mediate2_local[109]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7169)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7169)] + mediate2_local[113]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7425)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7425)] + mediate2_local[117]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7681)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7681)] + mediate2_local[121]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7937)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7937)] + mediate2_local[125]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8193)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8193)] + mediate2_local[3]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8449)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8449)] + mediate2_local[7]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8705)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8705)] + mediate2_local[11]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8961)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8961)] + mediate2_local[15]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9217)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9217)] + mediate2_local[19]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9473)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9473)] + mediate2_local[23]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9729)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9729)] + mediate2_local[27]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9985)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9985)] + mediate2_local[31]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10241)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10241)] + mediate2_local[35]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10497)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10497)] + mediate2_local[39]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10753)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10753)] + mediate2_local[43]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11009)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11009)] + mediate2_local[47]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11265)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11265)] + mediate2_local[51]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11521)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11521)] + mediate2_local[55]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11777)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11777)] + mediate2_local[59]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12033)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12033)] + mediate2_local[63]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12289)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12289)] + mediate2_local[67]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12545)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12545)] + mediate2_local[71]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12801)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12801)] + mediate2_local[75]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13057)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13057)] + mediate2_local[79]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13313)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13313)] + mediate2_local[83]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13569)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13569)] + mediate2_local[87]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13825)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13825)] + mediate2_local[91]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14081)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14081)] + mediate2_local[95]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14337)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14337)] + mediate2_local[99]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14593)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14593)] + mediate2_local[103]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14849)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14849)] + mediate2_local[107]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15105)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15105)] + mediate2_local[111]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15361)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15361)] + mediate2_local[115]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15617)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15617)] + mediate2_local[119]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15873)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15873)] + mediate2_local[123]));\n  output_proxy_1[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 16129)] = ((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 16129)] + mediate2_local[127]));\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1)] + mediate2_local[1])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 257)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 257)] + mediate2_local[5])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 513)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 513)] + mediate2_local[9])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 769)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 769)] + mediate2_local[13])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1025)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1025)] + mediate2_local[17])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1281)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1281)] + mediate2_local[21])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1537)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1537)] + mediate2_local[25])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1793)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 1793)] + mediate2_local[29])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2049)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2049)] + mediate2_local[33])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2305)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2305)] + mediate2_local[37])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2561)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2561)] + mediate2_local[41])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2817)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 2817)] + mediate2_local[45])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3073)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3073)] + mediate2_local[49])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3329)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3329)] + mediate2_local[53])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3585)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3585)] + mediate2_local[57])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3841)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 3841)] + mediate2_local[61])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4097)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4097)] + mediate2_local[65])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4353)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4353)] + mediate2_local[69])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4609)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4609)] + mediate2_local[73])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4865)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 4865)] + mediate2_local[77])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5121)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5121)] + mediate2_local[81])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5377)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5377)] + mediate2_local[85])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5633)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5633)] + mediate2_local[89])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5889)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 5889)] + mediate2_local[93])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6145)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6145)] + mediate2_local[97])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6401)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6401)] + mediate2_local[101])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6657)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6657)] + mediate2_local[105])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6913)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 6913)] + mediate2_local[109])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7169)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7169)] + mediate2_local[113])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7425)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7425)] + mediate2_local[117])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7681)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7681)] + mediate2_local[121])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7937)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 7937)] + mediate2_local[125])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8193)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8193)] + mediate2_local[3])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8449)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8449)] + mediate2_local[7])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8705)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8705)] + mediate2_local[11])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8961)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 8961)] + mediate2_local[15])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9217)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9217)] + mediate2_local[19])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9473)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9473)] + mediate2_local[23])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9729)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9729)] + mediate2_local[27])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9985)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 9985)] + mediate2_local[31])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10241)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10241)] + mediate2_local[35])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10497)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10497)] + mediate2_local[39])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10753)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 10753)] + mediate2_local[43])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11009)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11009)] + mediate2_local[47])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11265)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11265)] + mediate2_local[51])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11521)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11521)] + mediate2_local[55])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11777)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 11777)] + mediate2_local[59])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12033)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12033)] + mediate2_local[63])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12289)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12289)] + mediate2_local[67])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12545)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12545)] + mediate2_local[71])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12801)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 12801)] + mediate2_local[75])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13057)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13057)] + mediate2_local[79])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13313)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13313)] + mediate2_local[83])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13569)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13569)] + mediate2_local[87])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13825)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 13825)] + mediate2_local[91])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14081)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14081)] + mediate2_local[95])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14337)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14337)] + mediate2_local[99])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14593)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14593)] + mediate2_local[103])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14849)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 14849)] + mediate2_local[107])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15105)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15105)] + mediate2_local[111])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15361)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15361)] + mediate2_local[115])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15617)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15617)] + mediate2_local[119])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15873)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 15873)] + mediate2_local[123])), input0[0]);\n  output_proxy_2[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 16129)] = powf(((float)(input3[(((((int)blockIdx.x) * 16384) + (((int)threadIdx.x) * 2)) + 16129)] + mediate2_local[127])), input0[0]);\n}\n\n__global__ void __launch_bounds__(128) Group16(float* input0, half* input1, half* input2, half* input3, half* output0, float* output1, float* output2) {\n  __shared__ char shared[49152];\n  Group16_0_Reshape_Reshape_160(input1, (half*)(shared+0), shared+0);\n  Group16_1_Dot_Add_Convert_Reshape_Broadcast_Power_163(input0, (half*)(shared+0), input2, input3, output0, output1, output2, shared+32768);\n}\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      2048,
      1,
      1
    ],
    "latency": 78.75993347167969,
    "name": "Group16",
    "gain": 9921.330890871584
  },
  {
    "nodes": [
      145
    ],
    "node_names": [
      "Sum_Reshape_Broadcast_Divide_145"
    ],
    "group_id": 17,
    "input_desc": [
      [
        145,
        0
      ],
      [
        145,
        1
      ]
    ],
    "output_desc": [
      [
        145,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group3(float* __restrict__ input0, float* __restrict__ input1, float* __restrict__ output0) {\n  float normal_reduce_temp0[1];\n  __shared__ float input1_shared[4096];\n  __shared__ float red_buf0[128];\n  normal_reduce_temp0[0] = 0.000000e+00f;\n  for (int N2_outer = 0; N2_outer < 4; ++N2_outer) {\n    __syncthreads();\n    *(float4*)(input1_shared + ((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4))) = *(float4*)(input1 + ((((((int)blockIdx.x) * 16384) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)));\n    *(float4*)(input1_shared + (((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 512)) = *(float4*)(input1 + (((((((int)blockIdx.x) * 16384) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)) + 512));\n    *(float4*)(input1_shared + (((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 1024)) = *(float4*)(input1 + (((((((int)blockIdx.x) * 16384) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)) + 1024));\n    *(float4*)(input1_shared + (((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 1536)) = *(float4*)(input1 + (((((((int)blockIdx.x) * 16384) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)) + 1536));\n    *(float4*)(input1_shared + (((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 2048)) = *(float4*)(input1 + (((((((int)blockIdx.x) * 16384) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)) + 8192));\n    *(float4*)(input1_shared + (((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 2560)) = *(float4*)(input1 + ((((((((int)blockIdx.x) * 16384) + (((((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 2560) >> 11) * 8192)) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)) + 512));\n    *(float4*)(input1_shared + (((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 3072)) = *(float4*)(input1 + ((((((((int)blockIdx.x) * 16384) + (((((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 3072) >> 11) * 8192)) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)) + 1024));\n    *(float4*)(input1_shared + (((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 3584)) = *(float4*)(input1 + ((((((((int)blockIdx.x) * 16384) + (((((((int)threadIdx.y) * 256) + (((int)threadIdx.x) * 4)) + 3584) >> 11) * 8192)) + (N2_outer * 2048)) + (((int)threadIdx.y) * 256)) + (((int)threadIdx.x) * 4)) + 1536));\n    __syncthreads();\n    for (int N2_inner_outer = 0; N2_inner_outer < 32; ++N2_inner_outer) {\n      normal_reduce_temp0[0] = (normal_reduce_temp0[0] + input1_shared[(((((int)threadIdx.y) * 2048) + (N2_inner_outer * 64)) + ((int)threadIdx.x))]);\n    }\n  }\n  __syncthreads();\n  ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = normal_reduce_temp0[0];\n  __syncthreads();\n  if (((int)threadIdx.x) < 32) {\n    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 32)]);\n  }\n  __syncthreads();\n  if (((int)threadIdx.x) < 16) {\n    float w_16_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 16)]);\n    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_16_0;\n    float w_8_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 8)]);\n    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_8_0;\n    float w_4_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 4)]);\n    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_4_0;\n    float w_2_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 2)]);\n    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_2_0;\n    float w_1_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 1)]);\n    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_1_0;\n  }\n  __syncthreads();\n  output0[((((int)blockIdx.x) * 2) + ((int)threadIdx.y))] = (((volatile float*)red_buf0)[(((int)threadIdx.y) * 64)] / input0[0]);\n}\n\n",
    "block_size": [
      64,
      2,
      1
    ],
    "grid_size": [
      2048,
      1,
      1
    ],
    "latency": 0.08482133597135544,
    "name": "Group3",
    "gain": 0
  },
  {
    "nodes": [
      146
    ],
    "node_names": [
      "Reshape_Reshape_Broadcast_Add_Sqrt_Reshape_Broadcast_Divide_Convert_Reshape_Broadcast_Multiply_146"
    ],
    "group_id": 18,
    "input_desc": [
      [
        146,
        0
      ],
      [
        146,
        1
      ],
      [
        146,
        2
      ],
      [
        146,
        3
      ]
    ],
    "output_desc": [
      [
        146,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group18(half* __restrict__ input0, float* __restrict__ input1, float* __restrict__ input2, float* __restrict__ input3, half* __restrict__ output0) {\n  output0[(((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2))] = (input0[(((((int)blockIdx.x) & 127) * 64) + ((((int)threadIdx.x) & 15) * 2))] * ((half)(input3[(((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2))] / sqrtf((input2[(((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4))] + input1[0])))));\n  output0[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32)] = (input0[((((((int)blockIdx.x) & 127) * 64) + ((((int)threadIdx.x) & 15) * 2)) + 32)] * ((half)(input3[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32)] / sqrtf((input2[(((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4))] + input1[0])))));\n  output0[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65536)] = (input0[(((((int)blockIdx.x) & 127) * 64) + ((((int)threadIdx.x) & 15) * 2))] * ((half)(input3[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65536)] / sqrtf((input2[((((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4)) + 8)] + input1[0])))));\n  output0[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65568)] = (input0[((((((int)blockIdx.x) & 127) * 64) + ((((int)threadIdx.x) & 15) * 2)) + 32)] * ((half)(input3[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65568)] / sqrtf((input2[((((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4)) + 8)] + input1[0])))));\n  output0[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] = (input0[((((((int)blockIdx.x) & 127) * 64) + ((((int)threadIdx.x) & 15) * 2)) + 1)] * ((half)(input3[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] / sqrtf((input2[(((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4))] + input1[0])))));\n  output0[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 33)] = (input0[((((((int)blockIdx.x) & 127) * 64) + ((((int)threadIdx.x) & 15) * 2)) + 33)] * ((half)(input3[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 33)] / sqrtf((input2[(((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4))] + input1[0])))));\n  output0[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65537)] = (input0[((((((int)blockIdx.x) & 127) * 64) + ((((int)threadIdx.x) & 15) * 2)) + 1)] * ((half)(input3[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65537)] / sqrtf((input2[((((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4)) + 8)] + input1[0])))));\n  output0[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65569)] = (input0[((((((int)blockIdx.x) & 127) * 64) + ((((int)threadIdx.x) & 15) * 2)) + 33)] * ((half)(input3[((((((((int)blockIdx.x) >> 7) * 131072) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 65569)] / sqrtf((input2[((((((int)blockIdx.x) >> 7) * 16) + (((int)threadIdx.x) >> 4)) + 8)] + input1[0])))));\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      32768,
      1,
      1
    ],
    "latency": 0.14204342663288116,
    "name": "Group18",
    "gain": 0
  },
  {
    "nodes": [
      144
    ],
    "node_names": [
      "Dot_Sigmoid_Multiply_144"
    ],
    "group_id": 19,
    "input_desc": [
      [
        144,
        0
      ],
      [
        144,
        1
      ]
    ],
    "output_desc": [
      [
        144,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group19(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output0) {\n    __shared__ half input0_shared[16384];\n  __shared__ half input1_shared[8192];\n  cutlass::gemm::warp::GemmTensorOp<\n    cutlass::gemm::GemmShape<128, 64, 32>,\n    cutlass::layout::RowMajorTensorOpMultiplicandCrosswise<16, 32>,\n    cutlass::layout::RowMajorTensorOpMultiplicandCongruous<16, 64>\n> mediate0_cutlass_warp_mma((((int)threadIdx.y) >> 1), (((int)threadIdx.y) & 1), threadIdx.x);\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0 = 0; ax0_ax1_fused_0_0_0 < 8; ++ax0_ax1_fused_0_0_0) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + (((((ax0_ax1_fused_0_0_0 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + ((((((((int)blockIdx.x) / 224) * 2097152) + (ax0_ax1_fused_0_0_0 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + ((((int)threadIdx.x) & 3) * 8)))), \"n\"(16)\n    );\n  }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_1 = 0; ax0_ax1_fused_0_0_0_1 < 4; ++ax0_ax1_fused_0_0_0_1) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + ((((((ax0_ax1_fused_0_0_0_1 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + (((((ax0_ax1_fused_0_0_0_1 * 229376) + (((int)threadIdx.y) * 57344)) + ((((int)threadIdx.x) >> 4) * 28672)) + ((((int)blockIdx.x) % 224) * 128)) + ((((int)threadIdx.x) & 15) * 8)))), \"n\"(16)\n    );\n  }\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_2 = 0; ax0_ax1_fused_0_0_0_2 < 8; ++ax0_ax1_fused_0_0_0_2) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + ((((((ax0_ax1_fused_0_0_0_2 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8)) + 8192)))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + (((((((((int)blockIdx.x) / 224) * 2097152) + (ax0_ax1_fused_0_0_0_2 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + ((((int)threadIdx.x) & 3) * 8)) + 32))), \"n\"(16)\n    );\n  }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_3 = 0; ax0_ax1_fused_0_0_0_3 < 4; ++ax0_ax1_fused_0_0_0_3) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + (((((((ax0_ax1_fused_0_0_0_3 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8)) + 4096)))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + ((((((ax0_ax1_fused_0_0_0_3 * 229376) + (((int)threadIdx.y) * 57344)) + ((((int)threadIdx.x) >> 4) * 28672)) + ((((int)blockIdx.x) % 224) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 917504))), \"n\"(16)\n    );\n  }\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n  __syncthreads();\n  mediate0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[0])), 32},{(cutlass::half_t*)(&(input1_shared[0])), 128});\n  mediate0_cutlass_warp_mma.body();\n  for (int i3_0 = 0; i3_0 < 254; ++i3_0) {\n    #pragma unroll\n    for (int ax0_ax1_fused_0_0_0_4 = 0; ax0_ax1_fused_0_0_0_4 < 8; ++ax0_ax1_fused_0_0_0_4) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + (((((((i3_0 & 1) * 8192) + (ax0_ax1_fused_0_0_0_4 * 1024)) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + ((((((((((int)blockIdx.x) / 224) * 2097152) + (ax0_ax1_fused_0_0_0_4 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + (i3_0 * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 64))), \"n\"(16)\n    );\n  }\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_0_0_0_5 = 0; ax0_ax1_fused_0_0_0_5 < 4; ++ax0_ax1_fused_0_0_0_5) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + ((((((((i3_0 & 1) * 4096) + (ax0_ax1_fused_0_0_0_5 * 1024)) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + (((((((i3_0 * 917504) + (ax0_ax1_fused_0_0_0_5 * 229376)) + (((int)threadIdx.y) * 57344)) + ((((int)threadIdx.x) >> 4) * 28672)) + ((((int)blockIdx.x) % 224) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 1835008))), \"n\"(16)\n    );\n  }\n    }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n    __syncthreads();\n    mediate0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[(((i3_0 + 1) & 1) * 8192)])), 32},{(cutlass::half_t*)(&(input1_shared[(((i3_0 + 1) & 1) * 4096)])), 128});\n    mediate0_cutlass_warp_mma.epilogue();\n    mediate0_cutlass_warp_mma.body();\n  }\n__asm__ __volatile__(\"cp.async.wait_group 0;\");\n\n  __syncthreads();\n  mediate0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[8192])), 32},{(cutlass::half_t*)(&(input1_shared[4096])), 128});\n  mediate0_cutlass_warp_mma.epilogue();\n  mediate0_cutlass_warp_mma.body();\n  mediate0_cutlass_warp_mma.epilogue();\n  #pragma unroll\n  for (int ax1_0 = 0; ax1_0 < 128; ++ax1_0) {\n    uint1 __1;\n      uint1 __2 = *(uint1*)(mediate0_cutlass_warp_mma + (ax1_0 * 2));\n      uint1 __3;\n        uint1 __4 = make_uint1(__pack_half2(__float2half_rn(1.000000e+00f), __float2half_rn(1.000000e+00f)));\n        uint1 __5;\n          uint1 __6;\n          uint1 __7;\n            uint1 __8 = make_uint1(__pack_half2(__float2half_rn(0.000000e+00f), __float2half_rn(0.000000e+00f)));\n            ((half2*)(&(__7.x)))->x = (((half2*)(&(__8.x)))->x-((half2*)(&(__2.x)))->x);\n            ((half2*)(&(__7.x)))->y = (((half2*)(&(__8.x)))->y-((half2*)(&(__2.x)))->y);\n          ((half2*)(&(__6.x)))->x = hexp(((half2*)(&(__7.x)))->x);\n          ((half2*)(&(__6.x)))->y = hexp(((half2*)(&(__7.x)))->y);\n          ((half2*)(&(__5.x)))->x = (((half2*)(&(__4.x)))->x+((half2*)(&(__6.x)))->x);\n          ((half2*)(&(__5.x)))->y = (((half2*)(&(__4.x)))->y+((half2*)(&(__6.x)))->y);\n        ((half2*)(&(__3.x)))->x = (((half2*)(&(__4.x)))->x/((half2*)(&(__5.x)))->x);\n        ((half2*)(&(__3.x)))->y = (((half2*)(&(__4.x)))->y/((half2*)(&(__5.x)))->y);\n      ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x*((half2*)(&(__3.x)))->x);\n      ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y*((half2*)(&(__3.x)))->y);\n    *(uint1*)(output0 + (((((((((((int)blockIdx.x) / 224) * 7340032) + ((((int)threadIdx.y) >> 1) * 3670016)) + ((ax1_0 & 15) * 229376)) + ((((int)threadIdx.x) >> 2) * 28672)) + ((((int)blockIdx.x) % 224) * 128)) + ((((int)threadIdx.y) & 1) * 64)) + ((ax1_0 >> 4) * 8)) + ((((int)threadIdx.x) & 3) * 2))) = __1;\n  }\n}\n\n",
    "block_size": [
      32,
      4,
      1
    ],
    "grid_size": [
      3584,
      1,
      1
    ],
    "latency": 7.796735763549805,
    "name": "Group19",
    "gain": 0
  },
  {
    "nodes": [
      131
    ],
    "node_names": [
      "Dot_131"
    ],
    "group_id": 20,
    "input_desc": [
      [
        131,
        0
      ],
      [
        131,
        1
      ]
    ],
    "output_desc": [
      [
        131,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group20(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output0) {\n    __shared__ half input0_shared[16384];\n  __shared__ half input1_shared[8192];\n  cutlass::gemm::warp::GemmTensorOp<\n    cutlass::gemm::GemmShape<128, 64, 32>,\n    cutlass::layout::RowMajorTensorOpMultiplicandCrosswise<16, 32>,\n    cutlass::layout::RowMajorTensorOpMultiplicandCongruous<16, 64>\n> output0_cutlass_warp_mma((((int)threadIdx.y) >> 1), (((int)threadIdx.y) & 1), threadIdx.x);\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0 = 0; ax0_ax1_fused_0_0_0 < 8; ++ax0_ax1_fused_0_0_0) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + (((((ax0_ax1_fused_0_0_0 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + ((((((((int)blockIdx.x) / 224) * 2097152) + (ax0_ax1_fused_0_0_0 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + ((((int)threadIdx.x) & 3) * 8)))), \"n\"(16)\n    );\n  }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_1 = 0; ax0_ax1_fused_0_0_0_1 < 4; ++ax0_ax1_fused_0_0_0_1) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + ((((((ax0_ax1_fused_0_0_0_1 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + (((((ax0_ax1_fused_0_0_0_1 * 229376) + (((int)threadIdx.y) * 57344)) + ((((int)threadIdx.x) >> 4) * 28672)) + ((((int)blockIdx.x) % 224) * 128)) + ((((int)threadIdx.x) & 15) * 8)))), \"n\"(16)\n    );\n  }\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_2 = 0; ax0_ax1_fused_0_0_0_2 < 8; ++ax0_ax1_fused_0_0_0_2) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + ((((((ax0_ax1_fused_0_0_0_2 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8)) + 8192)))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + (((((((((int)blockIdx.x) / 224) * 2097152) + (ax0_ax1_fused_0_0_0_2 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + ((((int)threadIdx.x) & 3) * 8)) + 32))), \"n\"(16)\n    );\n  }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_3 = 0; ax0_ax1_fused_0_0_0_3 < 4; ++ax0_ax1_fused_0_0_0_3) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + (((((((ax0_ax1_fused_0_0_0_3 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8)) + 4096)))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + ((((((ax0_ax1_fused_0_0_0_3 * 229376) + (((int)threadIdx.y) * 57344)) + ((((int)threadIdx.x) >> 4) * 28672)) + ((((int)blockIdx.x) % 224) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 917504))), \"n\"(16)\n    );\n  }\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n  __syncthreads();\n  output0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[0])), 32},{(cutlass::half_t*)(&(input1_shared[0])), 128});\n  output0_cutlass_warp_mma.body();\n  for (int i3_0 = 0; i3_0 < 254; ++i3_0) {\n    #pragma unroll\n    for (int ax0_ax1_fused_0_0_0_4 = 0; ax0_ax1_fused_0_0_0_4 < 8; ++ax0_ax1_fused_0_0_0_4) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + (((((((i3_0 & 1) * 8192) + (ax0_ax1_fused_0_0_0_4 * 1024)) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + ((((((((((int)blockIdx.x) / 224) * 2097152) + (ax0_ax1_fused_0_0_0_4 * 262144)) + (((int)threadIdx.y) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + (i3_0 * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 64))), \"n\"(16)\n    );\n  }\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_0_0_0_5 = 0; ax0_ax1_fused_0_0_0_5 < 4; ++ax0_ax1_fused_0_0_0_5) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + ((((((((i3_0 & 1) * 4096) + (ax0_ax1_fused_0_0_0_5 * 1024)) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + (((((((i3_0 * 917504) + (ax0_ax1_fused_0_0_0_5 * 229376)) + (((int)threadIdx.y) * 57344)) + ((((int)threadIdx.x) >> 4) * 28672)) + ((((int)blockIdx.x) % 224) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 1835008))), \"n\"(16)\n    );\n  }\n    }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n    __syncthreads();\n    output0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[(((i3_0 + 1) & 1) * 8192)])), 32},{(cutlass::half_t*)(&(input1_shared[(((i3_0 + 1) & 1) * 4096)])), 128});\n    output0_cutlass_warp_mma.epilogue();\n    output0_cutlass_warp_mma.body();\n  }\n__asm__ __volatile__(\"cp.async.wait_group 0;\");\n\n  __syncthreads();\n  output0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[8192])), 32},{(cutlass::half_t*)(&(input1_shared[4096])), 128});\n  output0_cutlass_warp_mma.epilogue();\n  output0_cutlass_warp_mma.body();\n  output0_cutlass_warp_mma.epilogue();\n  #pragma unroll\n  for (int ax1_0 = 0; ax1_0 < 128; ++ax1_0) {\n    *(uint1*)(output0 + (((((((((((int)blockIdx.x) / 224) * 7340032) + ((((int)threadIdx.y) >> 1) * 3670016)) + ((ax1_0 & 15) * 229376)) + ((((int)threadIdx.x) >> 2) * 28672)) + ((((int)blockIdx.x) % 224) * 128)) + ((((int)threadIdx.y) & 1) * 64)) + ((ax1_0 >> 4) * 8)) + ((((int)threadIdx.x) & 3) * 2))) = *(uint1*)(output0_cutlass_warp_mma + (ax1_0 * 2));\n  }\n}\n\n",
    "block_size": [
      32,
      4,
      1
    ],
    "grid_size": [
      3584,
      1,
      1
    ],
    "latency": 7.015423774719238,
    "name": "Group20",
    "gain": 0
  },
  {
    "nodes": [
      135
    ],
    "node_names": [
      "Multiply_135"
    ],
    "group_id": 21,
    "input_desc": [
      [
        135,
        0
      ],
      [
        135,
        1
      ]
    ],
    "output_desc": [
      [
        135,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group21(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output0) {\n  output0[((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2))] = (input0[((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2))] * input1[((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2))]);\n  output0[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2)) + 256)] = (input0[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2)) + 256)] * input1[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2)) + 256)]);\n  output0[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2)) + 1)] = (input0[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2)) + 1)] * input1[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2)) + 1)]);\n  output0[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2)) + 257)] = (input0[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2)) + 257)] * input1[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2)) + 257)]);\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      229376,
      1,
      1
    ],
    "latency": 0.44856587052345276,
    "name": "Group21",
    "gain": 0
  },
  {
    "nodes": [
      143
    ],
    "node_names": [
      "Dot_Add_143"
    ],
    "group_id": 22,
    "input_desc": [
      [
        143,
        0
      ],
      [
        143,
        1
      ],
      [
        143,
        2
      ]
    ],
    "output_desc": [
      [
        143,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group22(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ input2, half* __restrict__ output0) {\n    __shared__ half input0_shared[16384];\n  __shared__ half input1_shared[8192];\n  cutlass::gemm::warp::GemmTensorOp<\n    cutlass::gemm::GemmShape<128, 64, 32>,\n    cutlass::layout::RowMajorTensorOpMultiplicandCrosswise<16, 32>,\n    cutlass::layout::RowMajorTensorOpMultiplicandCongruous<16, 64>\n> mediate0_cutlass_warp_mma((((int)threadIdx.y) >> 1), (((int)threadIdx.y) & 1), threadIdx.x);\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0 = 0; ax0_ax1_fused_0_0_0 < 8; ++ax0_ax1_fused_0_0_0) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + (((((ax0_ax1_fused_0_0_0 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + ((((((((int)blockIdx.x) >> 6) * 7340032) + (ax0_ax1_fused_0_0_0 * 917504)) + (((int)threadIdx.y) * 229376)) + ((((int)threadIdx.x) >> 2) * 28672)) + ((((int)threadIdx.x) & 3) * 8)))), \"n\"(16)\n    );\n  }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_1 = 0; ax0_ax1_fused_0_0_0_1 < 4; ++ax0_ax1_fused_0_0_0_1) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + ((((((ax0_ax1_fused_0_0_0_1 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + (((((ax0_ax1_fused_0_0_0_1 * 65536) + (((int)threadIdx.y) * 16384)) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 8)))), \"n\"(16)\n    );\n  }\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_2 = 0; ax0_ax1_fused_0_0_0_2 < 8; ++ax0_ax1_fused_0_0_0_2) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + ((((((ax0_ax1_fused_0_0_0_2 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8)) + 8192)))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + (((((((((int)blockIdx.x) >> 6) * 7340032) + (ax0_ax1_fused_0_0_0_2 * 917504)) + (((int)threadIdx.y) * 229376)) + ((((int)threadIdx.x) >> 2) * 28672)) + ((((int)threadIdx.x) & 3) * 8)) + 32))), \"n\"(16)\n    );\n  }\n  }\n  #pragma unroll\n  for (int ax0_ax1_fused_0_0_0_3 = 0; ax0_ax1_fused_0_0_0_3 < 4; ++ax0_ax1_fused_0_0_0_3) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + (((((((ax0_ax1_fused_0_0_0_3 * 1024) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8)) + 4096)))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + ((((((ax0_ax1_fused_0_0_0_3 * 65536) + (((int)threadIdx.y) * 16384)) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 262144))), \"n\"(16)\n    );\n  }\n  }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n  __syncthreads();\n  mediate0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[0])), 32},{(cutlass::half_t*)(&(input1_shared[0])), 128});\n  mediate0_cutlass_warp_mma.body();\n  for (int i3_0 = 0; i3_0 < 894; ++i3_0) {\n    #pragma unroll\n    for (int ax0_ax1_fused_0_0_0_4 = 0; ax0_ax1_fused_0_0_0_4 < 8; ++ax0_ax1_fused_0_0_0_4) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input0_shared + (((((((i3_0 & 1) * 8192) + (ax0_ax1_fused_0_0_0_4 * 1024)) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 2) * 32)) + ((((((int)threadIdx.x) >> 4) + ((((int)threadIdx.x) & 3) >> 1)) & 1) * 16)) + (((((((int)threadIdx.x) & 15) >> 3) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input0 + ((((((((((int)blockIdx.x) >> 6) * 7340032) + (ax0_ax1_fused_0_0_0_4 * 917504)) + (((int)threadIdx.y) * 229376)) + ((((int)threadIdx.x) >> 2) * 28672)) + (i3_0 * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 64))), \"n\"(16)\n    );\n  }\n    }\n    #pragma unroll\n    for (int ax0_ax1_fused_0_0_0_5 = 0; ax0_ax1_fused_0_0_0_5 < 4; ++ax0_ax1_fused_0_0_0_5) {\n\n  {\n    unsigned int addr;\n    __asm__ __volatile__(\n      \"{ .reg .u64 addr; cvta.to.shared.u64 addr, %1; cvt.u32.u64 %0, addr; }\\n\"\n      : \"=r\"(addr)\n      : \"l\"((void *)(input1_shared + ((((((((i3_0 & 1) * 4096) + (ax0_ax1_fused_0_0_0_5 * 1024)) + (((int)threadIdx.y) * 256)) + ((((int)threadIdx.x) >> 3) * 64)) + (((((((int)threadIdx.x) & 7) >> 2) + (((int)threadIdx.y) >> 1)) & 1) * 32)) + (((((((int)threadIdx.x) & 3) >> 1) + (((int)threadIdx.y) & 1)) & 1) * 16)) + ((((((int)threadIdx.x) >> 4) + (((int)threadIdx.x) & 1)) & 1) * 8))))\n    );\n    __asm__ __volatile__(\n      \"cp.async.cg.shared.global [%0], [%1], %2;\"\n       :: \"r\"(addr), \"l\"((void*)(input1 + (((((((i3_0 * 262144) + (ax0_ax1_fused_0_0_0_5 * 65536)) + (((int)threadIdx.y) * 16384)) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.x) & 15) * 8)) + 524288))), \"n\"(16)\n    );\n  }\n    }\n__asm__ __volatile__(\"cp.async.commit_group;\");\n\n__asm__ __volatile__(\"cp.async.wait_group 1;\");\n\n    __syncthreads();\n    mediate0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[(((i3_0 + 1) & 1) * 8192)])), 32},{(cutlass::half_t*)(&(input1_shared[(((i3_0 + 1) & 1) * 4096)])), 128});\n    mediate0_cutlass_warp_mma.epilogue();\n    mediate0_cutlass_warp_mma.body();\n  }\n__asm__ __volatile__(\"cp.async.wait_group 0;\");\n\n  __syncthreads();\n  mediate0_cutlass_warp_mma.prologue({(cutlass::half_t*)(&(input0_shared[8192])), 32},{(cutlass::half_t*)(&(input1_shared[4096])), 128});\n  mediate0_cutlass_warp_mma.epilogue();\n  mediate0_cutlass_warp_mma.body();\n  mediate0_cutlass_warp_mma.epilogue();\n  #pragma unroll\n  for (int ax1_0 = 0; ax1_0 < 128; ++ax1_0) {\n    uint1 __1;\n      uint1 __2 = *(uint1*)(input2 + (((((((((((int)blockIdx.x) >> 6) * 2097152) + ((((int)threadIdx.y) >> 1) * 1048576)) + ((ax1_0 & 15) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.y) & 1) * 64)) + ((ax1_0 >> 4) * 8)) + ((((int)threadIdx.x) & 3) * 2)));\n      uint1 __3 = *(uint1*)(mediate0_cutlass_warp_mma + (ax1_0 * 2));\n      ((half2*)(&(__1.x)))->x = (((half2*)(&(__2.x)))->x+((half2*)(&(__3.x)))->x);\n      ((half2*)(&(__1.x)))->y = (((half2*)(&(__2.x)))->y+((half2*)(&(__3.x)))->y);\n    *(uint1*)(output0 + (((((((((((int)blockIdx.x) >> 6) * 2097152) + ((((int)threadIdx.y) >> 1) * 1048576)) + ((ax1_0 & 15) * 65536)) + ((((int)threadIdx.x) >> 2) * 8192)) + ((((int)blockIdx.x) & 63) * 128)) + ((((int)threadIdx.y) & 1) * 64)) + ((ax1_0 >> 4) * 8)) + ((((int)threadIdx.x) & 3) * 2))) = __1;\n  }\n}\n\n",
    "block_size": [
      32,
      4,
      1
    ],
    "grid_size": [
      1024,
      1,
      1
    ],
    "latency": 7.0830078125,
    "name": "Group22",
    "gain": 0
  }
]