{<Node, roller_matmul>: {'block': [128, 128], 'warp': [64, 64], 'wmma': [16, 16, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 136>}}}
74.54054260253906
{<Node, roller_matmul>: {'block': [64, 128], 'warp': [32, 64], 'wmma': [8, 32, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 136>}}}
136.92620849609375
{<Node, roller_matmul>: {'block': [128, 64], 'warp': [64, 32], 'wmma': [32, 8, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 72>}}}
84.7278060913086
{<Node, roller_matmul>: {'block': [128, 256], 'warp': [64, 128], 'wmma': [8, 32, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 264>}}}
69.24800109863281
{<Node, roller_matmul>: {'block': [256, 128], 'warp': [128, 64], 'wmma': [32, 8, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 136>}}}
51.474945068359375
{<Node, roller_matmul>: {'block': [64, 256], 'warp': [32, 128], 'wmma': [8, 32, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 264>}}}
132.4779510498047
{<Node, roller_matmul>: {'block': [256, 64], 'warp': [128, 32], 'wmma': [32, 8, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 72>}}}
66.88358306884766
{<Node, roller_matmul>: {'block': [64, 64], 'warp': [32, 32], 'wmma': [16, 16, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 72>}}}
141.84141540527344
{<Node, roller_matmul>: {'block': [256, 256], 'warp': [128, 128], 'wmma': [16, 16, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 264>}}}
106.50521850585938
{<Node, roller_matmul>: {'block': [32, 256], 'warp': [16, 128], 'wmma': [8, 32, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 264>}}}
266.2328186035156
{<Node, roller_matmul>: {'block': [256, 32], 'warp': [128, 16], 'wmma': [32, 8, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 40>}}}
119.83052825927734
{<Node, roller_matmul>: {'block': [64, 512], 'warp': [32, 256], 'wmma': [8, 32, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 520>}}}
124.92390441894531
{<Node, roller_matmul>: {'block': [512, 64], 'warp': [256, 32], 'wmma': [32, 8, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 72>}}}
62.17318344116211
{<Node, roller_matmul>: {'block': [32, 128], 'warp': [16, 64], 'wmma': [8, 32, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 136>}}}
264.3732604980469
{<Node, roller_matmul>: {'block': [128, 32], 'warp': [64, 16], 'wmma': [32, 8, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 40>}}}
124.23474884033203
{<Node, roller_matmul>: {'block': [32, 64], 'warp': [16, 32], 'wmma': [8, 32, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 72>}}}
206.58790588378906
{<Node, roller_matmul>: {'block': [64, 32], 'warp': [32, 16], 'wmma': [32, 8, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 40>}}}
149.21420288085938
{<Node, roller_matmul>: {'block': [32, 32], 'warp': [16, 16], 'wmma': [16, 16, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 40>}}}
211.6065216064453
{<Node, roller_matmul>: {'block': [16, 256], 'warp': [8, 128], 'wmma': [8, 32, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 264>}}}
533.2377319335938
{<Node, roller_matmul>: {'block': [256, 16], 'warp': [128, 8], 'wmma': [32, 8, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 24>}}}
241.98348999023438
best code __global__ void __launch_bounds__(128) Fused(half* __restrict__ A, half* __restrict__ B, half* __restrict__ C) {
  
  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 32, 8, 16, half> C_wmma_accumulator[32];
  __shared__ half A_shared[10240];
  __shared__ half B_shared[5120];
  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 32, 8, 16, half, nvcuda::wmma::row_major> A_shared_wmma_matrix_a[4];
  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 32, 8, 16, half, nvcuda::wmma::col_major> B_shared_wmma_matrix_b[8];
  for (int i_c_outer_init = 0; i_c_outer_init < 4; ++i_c_outer_init) {
    for (int j_c_outer_init = 0; j_c_outer_init < 8; ++j_c_outer_init) {
      nvcuda::wmma::fill_fragment(C_wmma_accumulator[((i_c_outer_init * 8) + j_c_outer_init)], __float2half_rn(0.000000e+00f));
    }
  }
  for (int k_outer = 0; k_outer < 512; ++k_outer) {
    __syncthreads();
    *(uint4*)(A_shared + (((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8))) = *(uint4*)(A + ((((((((int)blockIdx.x) >> 7) * 4194304) + (((int)threadIdx.y) * 131072)) + ((((int)threadIdx.x) >> 2) * 16384)) + (k_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)));
    *(uint4*)(A_shared + ((((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8)) + 1280)) = *(uint4*)(A + (((((((((int)blockIdx.x) >> 7) * 4194304) + (((int)threadIdx.y) * 131072)) + ((((int)threadIdx.x) >> 2) * 16384)) + (k_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 524288));
    *(uint4*)(A_shared + ((((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8)) + 2560)) = *(uint4*)(A + (((((((((int)blockIdx.x) >> 7) * 4194304) + (((int)threadIdx.y) * 131072)) + ((((int)threadIdx.x) >> 2) * 16384)) + (k_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 1048576));
    *(uint4*)(A_shared + ((((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8)) + 3840)) = *(uint4*)(A + (((((((((int)blockIdx.x) >> 7) * 4194304) + (((int)threadIdx.y) * 131072)) + ((((int)threadIdx.x) >> 2) * 16384)) + (k_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 1572864));
    *(uint4*)(A_shared + ((((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8)) + 5120)) = *(uint4*)(A + (((((((((int)blockIdx.x) >> 7) * 4194304) + (((int)threadIdx.y) * 131072)) + ((((int)threadIdx.x) >> 2) * 16384)) + (k_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 2097152));
    *(uint4*)(A_shared + ((((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8)) + 6400)) = *(uint4*)(A + (((((((((int)blockIdx.x) >> 7) * 4194304) + (((int)threadIdx.y) * 131072)) + ((((int)threadIdx.x) >> 2) * 16384)) + (k_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 2621440));
    *(uint4*)(A_shared + ((((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8)) + 7680)) = *(uint4*)(A + (((((((((int)blockIdx.x) >> 7) * 4194304) + (((int)threadIdx.y) * 131072)) + ((((int)threadIdx.x) >> 2) * 16384)) + (k_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 3145728));
    *(uint4*)(A_shared + ((((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8)) + 8960)) = *(uint4*)(A + (((((((((int)blockIdx.x) >> 7) * 4194304) + (((int)threadIdx.y) * 131072)) + ((((int)threadIdx.x) >> 2) * 16384)) + (k_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 3670016));
    *(uint4*)(B_shared + (((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8))) = *(uint4*)(B + ((((((((int)blockIdx.x) & 127) * 2097152) + (((int)threadIdx.y) * 131072)) + ((((int)threadIdx.x) >> 2) * 16384)) + (k_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)));
    *(uint4*)(B_shared + ((((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8)) + 1280)) = *(uint4*)(B + (((((((((int)blockIdx.x) & 127) * 2097152) + (((int)threadIdx.y) * 131072)) + ((((int)threadIdx.x) >> 2) * 16384)) + (k_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 524288));
    *(uint4*)(B_shared + ((((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8)) + 2560)) = *(uint4*)(B + (((((((((int)blockIdx.x) & 127) * 2097152) + (((int)threadIdx.y) * 131072)) + ((((int)threadIdx.x) >> 2) * 16384)) + (k_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 1048576));
    *(uint4*)(B_shared + ((((((int)threadIdx.y) * 320) + ((((int)threadIdx.x) >> 2) * 40)) + ((((int)threadIdx.x) & 3) * 8)) + 3840)) = *(uint4*)(B + (((((((((int)blockIdx.x) & 127) * 2097152) + (((int)threadIdx.y) * 131072)) + ((((int)threadIdx.x) >> 2) * 16384)) + (k_outer * 32)) + ((((int)threadIdx.x) & 3) * 8)) + 1572864));
    __syncthreads();
    for (int k_inner_outer = 0; k_inner_outer < 2; ++k_inner_outer) {
      for (int ax0_outer = 0; ax0_outer < 4; ++ax0_outer) {
        nvcuda::wmma::load_matrix_sync(A_shared_wmma_matrix_a[ax0_outer], (&(A_shared[((((((int)threadIdx.y) >> 1) * 5120) + (ax0_outer * 1280)) + (k_inner_outer * 16))])), 40);
      }
      for (int ax0_outer_1 = 0; ax0_outer_1 < 8; ++ax0_outer_1) {
        nvcuda::wmma::load_matrix_sync(B_shared_wmma_matrix_b[ax0_outer_1], (&(B_shared[((((((int)threadIdx.y) & 1) * 2560) + (ax0_outer_1 * 320)) + (k_inner_outer * 16))])), 40);
      }
      for (int i_c_outer = 0; i_c_outer < 4; ++i_c_outer) {
        for (int j_c_outer = 0; j_c_outer < 8; ++j_c_outer) {
          nvcuda::wmma::mma_sync(C_wmma_accumulator[((i_c_outer * 8) + j_c_outer)], A_shared_wmma_matrix_a[i_c_outer], B_shared_wmma_matrix_b[j_c_outer], C_wmma_accumulator[((i_c_outer * 8) + j_c_outer)]);
        }
      }
    }
  }
  __syncthreads();
  for (int i_inner_inner_outer = 0; i_inner_inner_outer < 4; ++i_inner_inner_outer) {
    for (int j_inner_inner_outer = 0; j_inner_inner_outer < 8; ++j_inner_inner_outer) {
      nvcuda::wmma::store_matrix_sync((&(C[(((((((((int)blockIdx.x) >> 7) * 4194304) + ((((int)threadIdx.y) >> 1) * 2097152)) + (i_inner_inner_outer * 524288)) + ((((int)blockIdx.x) & 127) * 128)) + ((((int)threadIdx.y) & 1) * 64)) + (j_inner_inner_outer * 8))])), C_wmma_accumulator[((i_inner_inner_outer * 8) + j_inner_inner_outer)], 16384, nvcuda::wmma::mem_row_major);
    }
  }
  __syncthreads();
}


top1: 74.54054260253906 	top10: 51.474945068359375
--------------------------------------------------------------------------------
best config: {<Node, roller_matmul>: {'block': [256, 128], 'warp': [128, 64], 'wmma': [32, 8, 16], 'use_cutlass': False, 'rstep': [32], 'block_order': <NoRasterization>, 'use_tc': '80', 'strides': {2: <Stride, 0, 136>}}}
best latency: 51.474945068359375
16384_16384_16384	51.474945068359375
