[
  {
    "nodes": [
      0,
      1
    ],
    "node_names": [
      "cast_multiply_0",
      "mean_add_sqrt_divide_1"
    ],
    "group_id": 0,
    "input_desc": [
      [
        "cast_multiply_0",
        0,
        0
      ]
    ],
    "output_desc": [
      [
        "cast_multiply_0",
        0,
        0
      ],
      [
        "mean_add_sqrt_divide_1",
        1,
        0
      ]
    ],
    "code": "__device__ void Group0_0_cast_multiply_0(half* __restrict__ p0, float* __restrict__ output_proxy, float* __restrict__ output_proxy_1, char* shared) {\n  output_proxy[((((int)blockIdx.x) * 8192) + ((int)threadIdx.x))] = ((float)p0[((((int)blockIdx.x) * 8192) + ((int)threadIdx.x))]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 128)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 128)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 256)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 256)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 384)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 384)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 512)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 512)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 640)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 640)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 768)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 768)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 896)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 896)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1024)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1024)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1152)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1152)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1280)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1280)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1408)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1408)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1536)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1536)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1664)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1664)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1792)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1792)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1920)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1920)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2048)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2048)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2176)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2176)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2304)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2304)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2432)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2432)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2560)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2560)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2688)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2688)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2816)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2816)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2944)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2944)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3072)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3072)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3200)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3200)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3328)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3328)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3456)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3456)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3584)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3584)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3712)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3712)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3840)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3840)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3968)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3968)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4096)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4096)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4224)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4224)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4352)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4352)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4480)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4480)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4608)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4608)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4736)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4736)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4864)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4864)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4992)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4992)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5120)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5120)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5248)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5248)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5376)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5376)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5504)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5504)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5632)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5632)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5760)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5760)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5888)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5888)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6016)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6016)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6144)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6144)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6272)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6272)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6400)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6400)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6528)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6528)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6656)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6656)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6784)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6784)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6912)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6912)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7040)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7040)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7168)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7168)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7296)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7296)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7424)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7424)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7552)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7552)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7680)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7680)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7808)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7808)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7936)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7936)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 8064)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 8064)]);\n  __syncthreads();\n  output_proxy_1[((int)threadIdx.x)] = (((float)p0[((((int)blockIdx.x) * 8192) + ((int)threadIdx.x))]) * ((float)p0[((((int)blockIdx.x) * 8192) + ((int)threadIdx.x))]));\n  output_proxy_1[(((int)threadIdx.x) + 128)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 128)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 128)]));\n  output_proxy_1[(((int)threadIdx.x) + 256)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 256)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 256)]));\n  output_proxy_1[(((int)threadIdx.x) + 384)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 384)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 384)]));\n  output_proxy_1[(((int)threadIdx.x) + 512)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 512)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 512)]));\n  output_proxy_1[(((int)threadIdx.x) + 640)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 640)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 640)]));\n  output_proxy_1[(((int)threadIdx.x) + 768)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 768)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 768)]));\n  output_proxy_1[(((int)threadIdx.x) + 896)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 896)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 896)]));\n  output_proxy_1[(((int)threadIdx.x) + 1024)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1024)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1024)]));\n  output_proxy_1[(((int)threadIdx.x) + 1152)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1152)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1152)]));\n  output_proxy_1[(((int)threadIdx.x) + 1280)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1280)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1280)]));\n  output_proxy_1[(((int)threadIdx.x) + 1408)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1408)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1408)]));\n  output_proxy_1[(((int)threadIdx.x) + 1536)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1536)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1536)]));\n  output_proxy_1[(((int)threadIdx.x) + 1664)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1664)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1664)]));\n  output_proxy_1[(((int)threadIdx.x) + 1792)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1792)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1792)]));\n  output_proxy_1[(((int)threadIdx.x) + 1920)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1920)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1920)]));\n  output_proxy_1[(((int)threadIdx.x) + 2048)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2048)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2048)]));\n  output_proxy_1[(((int)threadIdx.x) + 2176)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2176)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2176)]));\n  output_proxy_1[(((int)threadIdx.x) + 2304)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2304)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2304)]));\n  output_proxy_1[(((int)threadIdx.x) + 2432)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2432)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2432)]));\n  output_proxy_1[(((int)threadIdx.x) + 2560)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2560)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2560)]));\n  output_proxy_1[(((int)threadIdx.x) + 2688)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2688)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2688)]));\n  output_proxy_1[(((int)threadIdx.x) + 2816)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2816)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2816)]));\n  output_proxy_1[(((int)threadIdx.x) + 2944)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2944)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2944)]));\n  output_proxy_1[(((int)threadIdx.x) + 3072)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3072)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3072)]));\n  output_proxy_1[(((int)threadIdx.x) + 3200)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3200)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3200)]));\n  output_proxy_1[(((int)threadIdx.x) + 3328)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3328)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3328)]));\n  output_proxy_1[(((int)threadIdx.x) + 3456)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3456)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3456)]));\n  output_proxy_1[(((int)threadIdx.x) + 3584)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3584)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3584)]));\n  output_proxy_1[(((int)threadIdx.x) + 3712)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3712)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3712)]));\n  output_proxy_1[(((int)threadIdx.x) + 3840)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3840)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3840)]));\n  output_proxy_1[(((int)threadIdx.x) + 3968)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3968)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3968)]));\n  output_proxy_1[(((int)threadIdx.x) + 4096)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4096)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4096)]));\n  output_proxy_1[(((int)threadIdx.x) + 4224)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4224)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4224)]));\n  output_proxy_1[(((int)threadIdx.x) + 4352)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4352)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4352)]));\n  output_proxy_1[(((int)threadIdx.x) + 4480)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4480)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4480)]));\n  output_proxy_1[(((int)threadIdx.x) + 4608)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4608)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4608)]));\n  output_proxy_1[(((int)threadIdx.x) + 4736)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4736)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4736)]));\n  output_proxy_1[(((int)threadIdx.x) + 4864)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4864)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4864)]));\n  output_proxy_1[(((int)threadIdx.x) + 4992)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4992)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4992)]));\n  output_proxy_1[(((int)threadIdx.x) + 5120)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5120)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5120)]));\n  output_proxy_1[(((int)threadIdx.x) + 5248)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5248)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5248)]));\n  output_proxy_1[(((int)threadIdx.x) + 5376)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5376)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5376)]));\n  output_proxy_1[(((int)threadIdx.x) + 5504)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5504)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5504)]));\n  output_proxy_1[(((int)threadIdx.x) + 5632)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5632)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5632)]));\n  output_proxy_1[(((int)threadIdx.x) + 5760)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5760)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5760)]));\n  output_proxy_1[(((int)threadIdx.x) + 5888)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5888)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5888)]));\n  output_proxy_1[(((int)threadIdx.x) + 6016)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6016)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6016)]));\n  output_proxy_1[(((int)threadIdx.x) + 6144)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6144)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6144)]));\n  output_proxy_1[(((int)threadIdx.x) + 6272)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6272)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6272)]));\n  output_proxy_1[(((int)threadIdx.x) + 6400)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6400)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6400)]));\n  output_proxy_1[(((int)threadIdx.x) + 6528)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6528)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6528)]));\n  output_proxy_1[(((int)threadIdx.x) + 6656)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6656)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6656)]));\n  output_proxy_1[(((int)threadIdx.x) + 6784)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6784)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6784)]));\n  output_proxy_1[(((int)threadIdx.x) + 6912)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6912)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6912)]));\n  output_proxy_1[(((int)threadIdx.x) + 7040)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7040)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7040)]));\n  output_proxy_1[(((int)threadIdx.x) + 7168)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7168)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7168)]));\n  output_proxy_1[(((int)threadIdx.x) + 7296)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7296)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7296)]));\n  output_proxy_1[(((int)threadIdx.x) + 7424)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7424)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7424)]));\n  output_proxy_1[(((int)threadIdx.x) + 7552)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7552)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7552)]));\n  output_proxy_1[(((int)threadIdx.x) + 7680)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7680)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7680)]));\n  output_proxy_1[(((int)threadIdx.x) + 7808)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7808)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7808)]));\n  output_proxy_1[(((int)threadIdx.x) + 7936)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7936)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7936)]));\n  output_proxy_1[(((int)threadIdx.x) + 8064)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 8064)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 8064)]));\n  __syncthreads();\n}\n\n__device__ void Group0_1_mean_add_sqrt_divide_1(float* __restrict__ p0, float* __restrict__ T_divide_7, char* shared) {\n  float normal_reduce_temp0[1];\n  float* p0_shared = (float*)p0;\n  __shared__ float red_buf0[128];\n  normal_reduce_temp0[0] = 0.000000e+00f;\n  for (int k2_inner_outer = 0; k2_inner_outer < 64; ++k2_inner_outer) {\n    normal_reduce_temp0[0] = (normal_reduce_temp0[0] + p0_shared[((k2_inner_outer * 128) + ((int)threadIdx.x))]);\n  }\n  __syncthreads();\n  ((volatile float*)red_buf0)[((int)threadIdx.x)] = normal_reduce_temp0[0];\n  __syncthreads();\n  if (((int)threadIdx.x) < 64) {\n    ((volatile float*)red_buf0)[((int)threadIdx.x)] = (((volatile float*)red_buf0)[((int)threadIdx.x)] + ((volatile float*)red_buf0)[(((int)threadIdx.x) + 64)]);\n  }\n  __syncthreads();\n  if (((int)threadIdx.x) < 32) {\n    ((volatile float*)red_buf0)[((int)threadIdx.x)] = (((volatile float*)red_buf0)[((int)threadIdx.x)] + ((volatile float*)red_buf0)[(((int)threadIdx.x) + 32)]);\n  }\n  __syncthreads();\n  if (((int)threadIdx.x) < 16) {\n    float w_16_0 = (((volatile float*)red_buf0)[((int)threadIdx.x)] + ((volatile float*)red_buf0)[(((int)threadIdx.x) + 16)]);\n    ((volatile float*)red_buf0)[((int)threadIdx.x)] = w_16_0;\n    float w_8_0 = (((volatile float*)red_buf0)[((int)threadIdx.x)] + ((volatile float*)red_buf0)[(((int)threadIdx.x) + 8)]);\n    ((volatile float*)red_buf0)[((int)threadIdx.x)] = w_8_0;\n    float w_4_0 = (((volatile float*)red_buf0)[((int)threadIdx.x)] + ((volatile float*)red_buf0)[(((int)threadIdx.x) + 4)]);\n    ((volatile float*)red_buf0)[((int)threadIdx.x)] = w_4_0;\n    float w_2_0 = (((volatile float*)red_buf0)[((int)threadIdx.x)] + ((volatile float*)red_buf0)[(((int)threadIdx.x) + 2)]);\n    ((volatile float*)red_buf0)[((int)threadIdx.x)] = w_2_0;\n    float w_1_0 = (((volatile float*)red_buf0)[((int)threadIdx.x)] + ((volatile float*)red_buf0)[(((int)threadIdx.x) + 1)]);\n    ((volatile float*)red_buf0)[((int)threadIdx.x)] = w_1_0;\n  }\n  __syncthreads();\n  T_divide_7[((int)blockIdx.x)] = (1.000000e+00f / sqrtf(((((volatile float*)red_buf0)[0] * 1.220703e-04f) + 1.000000e-05f)));\n}\n\n__global__ void __launch_bounds__(128) Group0(half* input0, float* output0, float* output1) {\n  __shared__ char shared[32768];\n  Group0_0_cast_multiply_0(input0, output0, (float*)(shared+0), shared+0);\n  Group0_1_mean_add_sqrt_divide_1((float*)(shared+0), output1, shared+32768);\n}\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      4096,
      1,
      1
    ],
    "latency": 0.26030081510543823,
    "name": "Group0",
    "gain": 0.3363627940416336
  },
  {
    "nodes": [
      2
    ],
    "node_names": [
      "multiply_cast_multiply_reshape_cast_cast_reshape_2"
    ],
    "group_id": 1,
    "input_desc": [
      [
        "multiply_cast_multiply_reshape_cast_cast_reshape_2",
        2,
        0
      ],
      [
        "multiply_cast_multiply_reshape_cast_cast_reshape_2",
        2,
        1
      ],
      [
        "multiply_cast_multiply_reshape_cast_cast_reshape_2",
        2,
        2
      ]
    ],
    "output_desc": [
      [
        "multiply_cast_multiply_reshape_cast_cast_reshape_2",
        2,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group1(float* __restrict__ p0, float* __restrict__ p1, half* __restrict__ p2, int8_t* __restrict__ T_reshape_9) {\n  \n  T_reshape_9[(((((((int)blockIdx.x) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4))] = ((signed char)((float)(p2[(((((((((int)blockIdx.x) & 255) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4)) & 8191)] * ((half)(p0[(((((((int)blockIdx.x) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4))] * p1[(((((int)blockIdx.x) >> 8) * 16) + (((((((((int)blockIdx.x) & 255) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4)) >> 13))])))));\n  T_reshape_9[((((((((int)blockIdx.x) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 1)] = ((signed char)((float)(p2[((((((((((int)blockIdx.x) & 255) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 1) & 8191)] * ((half)(p0[((((((((int)blockIdx.x) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 1)] * p1[(((((int)blockIdx.x) >> 8) * 16) + ((((((((((int)blockIdx.x) & 255) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 1) >> 13))])))));\n  T_reshape_9[((((((((int)blockIdx.x) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 2)] = ((signed char)((float)(p2[((((((((((int)blockIdx.x) & 255) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 2) & 8191)] * ((half)(p0[((((((((int)blockIdx.x) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 2)] * p1[(((((int)blockIdx.x) >> 8) * 16) + ((((((((((int)blockIdx.x) & 255) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 2) >> 13))])))));\n  T_reshape_9[((((((((int)blockIdx.x) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 3)] = ((signed char)((float)(p2[((((((((((int)blockIdx.x) & 255) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 3) & 8191)] * ((half)(p0[((((((((int)blockIdx.x) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 3)] * p1[(((((int)blockIdx.x) >> 8) * 16) + ((((((((((int)blockIdx.x) & 255) >> 2) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)blockIdx.x) & 3) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 3) >> 13))])))));\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      65536,
      1,
      1
    ],
    "latency": 0.21341866254806519,
    "name": "Group1",
    "gain": 0
  },
  {
    "nodes": [
      3
    ],
    "node_names": [
      "ladder_perfect_quant_linear_cast_3"
    ],
    "group_id": 2,
    "input_desc": [
      [
        "ladder_perfect_quant_linear_cast_3",
        3,
        0
      ],
      [
        "ladder_perfect_quant_linear_cast_3",
        3,
        1
      ]
    ],
    "output_desc": [
      [
        "ladder_perfect_quant_linear_cast_3",
        3,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group2(int8_t* __restrict__ p0, int8_t* __restrict__ p1, half* __restrict__ T_cast) {\n  \n  int T_perfect_quant_linear_local[128];\n  __shared__ signed char p0_shared[8192];\n  __shared__ signed char B_decode_shared[8192];\n  for (int i2_1_1_init = 0; i2_1_1_init < 2; ++i2_1_1_init) {\n    T_perfect_quant_linear_local[i2_1_1_init] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 64)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 4)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 68)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 8)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 72)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 12)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 76)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 16)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 80)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 20)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 84)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 24)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 88)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 28)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 92)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 32)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 96)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 36)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 100)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 40)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 104)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 44)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 108)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 48)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 112)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 52)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 116)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 56)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 120)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 60)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 124)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 2)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 66)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 6)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 70)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 10)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 74)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 14)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 78)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 18)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 82)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 22)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 86)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 26)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 90)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 30)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 94)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 34)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 98)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 38)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 102)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 42)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 106)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 46)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 110)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 50)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 114)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 54)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 118)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 58)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 122)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 62)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 126)] = 0;\n  }\n  for (int k_0 = 0; k_0 < 128; ++k_0) {\n    __syncthreads();\n    *(int4*)(p0_shared + (((int)threadIdx.x) * 16)) = *(int4*)(p0 + (((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 4) * 131072)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 15) >> 3) * 512)) + (((((int)blockIdx.x) & 7) >> 1) * 128)) + ((((int)threadIdx.x) & 7) * 16)));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 2048)) = *(int4*)(p0 + ((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 4) * 131072)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 15) >> 3) * 512)) + (((((int)blockIdx.x) & 7) >> 1) * 128)) + ((((int)threadIdx.x) & 7) * 16)) + 1048576));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 4096)) = *(int4*)(p0 + ((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 4) * 131072)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 15) >> 3) * 512)) + (((((int)blockIdx.x) & 7) >> 1) * 128)) + ((((int)threadIdx.x) & 7) * 16)) + 2097152));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 6144)) = *(int4*)(p0 + ((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 4) * 131072)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 15) >> 3) * 512)) + (((((int)blockIdx.x) & 7) >> 1) * 128)) + ((((int)threadIdx.x) & 7) * 16)) + 3145728));\n    for (int ax0_ax1_ax2_ax3_fused_1 = 0; ax0_ax1_ax2_ax3_fused_1 < 16; ++ax0_ax1_ax2_ax3_fused_1) {\n      B_decode_shared[((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1)] = ((p1[(((((((((((int)blockIdx.x) & 255) >> 3) * 262144) + ((((int)threadIdx.x) >> 5) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 31) >> 4) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + (ax0_ax1_ax2_ax3_fused_1 >> 3))] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_1 = 0; ax0_ax1_ax2_ax3_fused_1_1 < 16; ++ax0_ax1_ax2_ax3_fused_1_1) {\n      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_1) + 2048)] = ((p1[((((((((((((int)blockIdx.x) & 255) >> 3) * 262144) + ((((int)threadIdx.x) >> 5) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 31) >> 4) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + (ax0_ax1_ax2_ax3_fused_1_1 >> 3)) + 65536)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_1 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_2 = 0; ax0_ax1_ax2_ax3_fused_1_2 < 16; ++ax0_ax1_ax2_ax3_fused_1_2) {\n      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_2) + 4096)] = ((p1[((((((((((((int)blockIdx.x) & 255) >> 3) * 262144) + ((((int)threadIdx.x) >> 5) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 31) >> 4) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + (ax0_ax1_ax2_ax3_fused_1_2 >> 3)) + 131072)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_2 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_3 = 0; ax0_ax1_ax2_ax3_fused_1_3 < 16; ++ax0_ax1_ax2_ax3_fused_1_3) {\n      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_3) + 6144)] = ((p1[((((((((((((int)blockIdx.x) & 255) >> 3) * 262144) + ((((int)threadIdx.x) >> 5) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 31) >> 4) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + (ax0_ax1_ax2_ax3_fused_1_3 >> 3)) + 196608)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_3 & 7))) & (signed char)1);\n    }\n    __syncthreads();\n    for (int k_1 = 0; k_1 < 2; ++k_1) {\n      for (int kk_1 = 0; kk_1 < 32; ++kk_1) {\n        for (int i2_1_1 = 0; i2_1_1 < 2; ++i2_1_1) {\n          T_perfect_quant_linear_local[i2_1_1] = (T_perfect_quant_linear_local[i2_1_1] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 64)] = (T_perfect_quant_linear_local[(i2_1_1 + 64)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 4)] = (T_perfect_quant_linear_local[(i2_1_1 + 4)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 68)] = (T_perfect_quant_linear_local[(i2_1_1 + 68)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 8)] = (T_perfect_quant_linear_local[(i2_1_1 + 8)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 72)] = (T_perfect_quant_linear_local[(i2_1_1 + 72)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 12)] = (T_perfect_quant_linear_local[(i2_1_1 + 12)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 76)] = (T_perfect_quant_linear_local[(i2_1_1 + 76)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 16)] = (T_perfect_quant_linear_local[(i2_1_1 + 16)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 80)] = (T_perfect_quant_linear_local[(i2_1_1 + 80)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 20)] = (T_perfect_quant_linear_local[(i2_1_1 + 20)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 84)] = (T_perfect_quant_linear_local[(i2_1_1 + 84)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 24)] = (T_perfect_quant_linear_local[(i2_1_1 + 24)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 88)] = (T_perfect_quant_linear_local[(i2_1_1 + 88)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 28)] = (T_perfect_quant_linear_local[(i2_1_1 + 28)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 92)] = (T_perfect_quant_linear_local[(i2_1_1 + 92)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 32)] = (T_perfect_quant_linear_local[(i2_1_1 + 32)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 96)] = (T_perfect_quant_linear_local[(i2_1_1 + 96)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 36)] = (T_perfect_quant_linear_local[(i2_1_1 + 36)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 100)] = (T_perfect_quant_linear_local[(i2_1_1 + 100)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 40)] = (T_perfect_quant_linear_local[(i2_1_1 + 40)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 104)] = (T_perfect_quant_linear_local[(i2_1_1 + 104)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 44)] = (T_perfect_quant_linear_local[(i2_1_1 + 44)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 108)] = (T_perfect_quant_linear_local[(i2_1_1 + 108)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 48)] = (T_perfect_quant_linear_local[(i2_1_1 + 48)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 112)] = (T_perfect_quant_linear_local[(i2_1_1 + 112)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 52)] = (T_perfect_quant_linear_local[(i2_1_1 + 52)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 116)] = (T_perfect_quant_linear_local[(i2_1_1 + 116)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 56)] = (T_perfect_quant_linear_local[(i2_1_1 + 56)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 120)] = (T_perfect_quant_linear_local[(i2_1_1 + 120)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 60)] = (T_perfect_quant_linear_local[(i2_1_1 + 60)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7680)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 124)] = (T_perfect_quant_linear_local[(i2_1_1 + 124)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7680)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 2)] = (T_perfect_quant_linear_local[(i2_1_1 + 2)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 66)] = (T_perfect_quant_linear_local[(i2_1_1 + 66)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 6)] = (T_perfect_quant_linear_local[(i2_1_1 + 6)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 70)] = (T_perfect_quant_linear_local[(i2_1_1 + 70)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 10)] = (T_perfect_quant_linear_local[(i2_1_1 + 10)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 74)] = (T_perfect_quant_linear_local[(i2_1_1 + 74)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 14)] = (T_perfect_quant_linear_local[(i2_1_1 + 14)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 78)] = (T_perfect_quant_linear_local[(i2_1_1 + 78)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 18)] = (T_perfect_quant_linear_local[(i2_1_1 + 18)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 82)] = (T_perfect_quant_linear_local[(i2_1_1 + 82)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 22)] = (T_perfect_quant_linear_local[(i2_1_1 + 22)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 86)] = (T_perfect_quant_linear_local[(i2_1_1 + 86)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 26)] = (T_perfect_quant_linear_local[(i2_1_1 + 26)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 90)] = (T_perfect_quant_linear_local[(i2_1_1 + 90)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 30)] = (T_perfect_quant_linear_local[(i2_1_1 + 30)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 94)] = (T_perfect_quant_linear_local[(i2_1_1 + 94)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 34)] = (T_perfect_quant_linear_local[(i2_1_1 + 34)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 98)] = (T_perfect_quant_linear_local[(i2_1_1 + 98)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 38)] = (T_perfect_quant_linear_local[(i2_1_1 + 38)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 102)] = (T_perfect_quant_linear_local[(i2_1_1 + 102)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 42)] = (T_perfect_quant_linear_local[(i2_1_1 + 42)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 106)] = (T_perfect_quant_linear_local[(i2_1_1 + 106)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 46)] = (T_perfect_quant_linear_local[(i2_1_1 + 46)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 110)] = (T_perfect_quant_linear_local[(i2_1_1 + 110)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 50)] = (T_perfect_quant_linear_local[(i2_1_1 + 50)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 114)] = (T_perfect_quant_linear_local[(i2_1_1 + 114)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 54)] = (T_perfect_quant_linear_local[(i2_1_1 + 54)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 118)] = (T_perfect_quant_linear_local[(i2_1_1 + 118)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 58)] = (T_perfect_quant_linear_local[(i2_1_1 + 58)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 122)] = (T_perfect_quant_linear_local[(i2_1_1 + 122)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 62)] = (T_perfect_quant_linear_local[(i2_1_1 + 62)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7680)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 126)] = (T_perfect_quant_linear_local[(i2_1_1 + 126)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7680)])));\n        }\n      }\n    }\n  }\n  for (int ax0 = 0; ax0 < 2; ++ax0) {\n    T_cast[((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7))] = ((half)T_perfect_quant_linear_local[ax0]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 32)] = ((half)T_perfect_quant_linear_local[(ax0 + 64)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 256)] = ((half)T_perfect_quant_linear_local[(ax0 + 4)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 288)] = ((half)T_perfect_quant_linear_local[(ax0 + 68)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 512)] = ((half)T_perfect_quant_linear_local[(ax0 + 8)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 544)] = ((half)T_perfect_quant_linear_local[(ax0 + 72)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 768)] = ((half)T_perfect_quant_linear_local[(ax0 + 12)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 800)] = ((half)T_perfect_quant_linear_local[(ax0 + 76)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1024)] = ((half)T_perfect_quant_linear_local[(ax0 + 16)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1056)] = ((half)T_perfect_quant_linear_local[(ax0 + 80)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1280)] = ((half)T_perfect_quant_linear_local[(ax0 + 20)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1312)] = ((half)T_perfect_quant_linear_local[(ax0 + 84)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1536)] = ((half)T_perfect_quant_linear_local[(ax0 + 24)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1568)] = ((half)T_perfect_quant_linear_local[(ax0 + 88)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1792)] = ((half)T_perfect_quant_linear_local[(ax0 + 28)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1824)] = ((half)T_perfect_quant_linear_local[(ax0 + 92)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2048)] = ((half)T_perfect_quant_linear_local[(ax0 + 32)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2080)] = ((half)T_perfect_quant_linear_local[(ax0 + 96)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2304)] = ((half)T_perfect_quant_linear_local[(ax0 + 36)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2336)] = ((half)T_perfect_quant_linear_local[(ax0 + 100)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2560)] = ((half)T_perfect_quant_linear_local[(ax0 + 40)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2592)] = ((half)T_perfect_quant_linear_local[(ax0 + 104)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2816)] = ((half)T_perfect_quant_linear_local[(ax0 + 44)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2848)] = ((half)T_perfect_quant_linear_local[(ax0 + 108)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3072)] = ((half)T_perfect_quant_linear_local[(ax0 + 48)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3104)] = ((half)T_perfect_quant_linear_local[(ax0 + 112)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3328)] = ((half)T_perfect_quant_linear_local[(ax0 + 52)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3360)] = ((half)T_perfect_quant_linear_local[(ax0 + 116)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3584)] = ((half)T_perfect_quant_linear_local[(ax0 + 56)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3616)] = ((half)T_perfect_quant_linear_local[(ax0 + 120)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3840)] = ((half)T_perfect_quant_linear_local[(ax0 + 60)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3872)] = ((half)T_perfect_quant_linear_local[(ax0 + 124)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097152)] = ((half)T_perfect_quant_linear_local[(ax0 + 2)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097184)] = ((half)T_perfect_quant_linear_local[(ax0 + 66)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097408)] = ((half)T_perfect_quant_linear_local[(ax0 + 6)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097440)] = ((half)T_perfect_quant_linear_local[(ax0 + 70)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097664)] = ((half)T_perfect_quant_linear_local[(ax0 + 10)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097696)] = ((half)T_perfect_quant_linear_local[(ax0 + 74)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097920)] = ((half)T_perfect_quant_linear_local[(ax0 + 14)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097952)] = ((half)T_perfect_quant_linear_local[(ax0 + 78)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098176)] = ((half)T_perfect_quant_linear_local[(ax0 + 18)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098208)] = ((half)T_perfect_quant_linear_local[(ax0 + 82)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098432)] = ((half)T_perfect_quant_linear_local[(ax0 + 22)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098464)] = ((half)T_perfect_quant_linear_local[(ax0 + 86)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098688)] = ((half)T_perfect_quant_linear_local[(ax0 + 26)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098720)] = ((half)T_perfect_quant_linear_local[(ax0 + 90)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098944)] = ((half)T_perfect_quant_linear_local[(ax0 + 30)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098976)] = ((half)T_perfect_quant_linear_local[(ax0 + 94)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2099200)] = ((half)T_perfect_quant_linear_local[(ax0 + 34)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2099232)] = ((half)T_perfect_quant_linear_local[(ax0 + 98)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2099456)] = ((half)T_perfect_quant_linear_local[(ax0 + 38)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2099488)] = ((half)T_perfect_quant_linear_local[(ax0 + 102)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2099712)] = ((half)T_perfect_quant_linear_local[(ax0 + 42)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2099744)] = ((half)T_perfect_quant_linear_local[(ax0 + 106)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2099968)] = ((half)T_perfect_quant_linear_local[(ax0 + 46)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100000)] = ((half)T_perfect_quant_linear_local[(ax0 + 110)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100224)] = ((half)T_perfect_quant_linear_local[(ax0 + 50)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100256)] = ((half)T_perfect_quant_linear_local[(ax0 + 114)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100480)] = ((half)T_perfect_quant_linear_local[(ax0 + 54)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100512)] = ((half)T_perfect_quant_linear_local[(ax0 + 118)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100736)] = ((half)T_perfect_quant_linear_local[(ax0 + 58)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100768)] = ((half)T_perfect_quant_linear_local[(ax0 + 122)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100992)] = ((half)T_perfect_quant_linear_local[(ax0 + 62)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2101024)] = ((half)T_perfect_quant_linear_local[(ax0 + 126)]);\n  }\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      2048,
      1,
      1
    ],
    "latency": 48.37253189086914,
    "name": "Group2",
    "gain": 0
  },
  {
    "nodes": [
      4
    ],
    "node_names": [
      "reshape_reshape_transpose_4"
    ],
    "group_id": 3,
    "input_desc": [
      [
        "reshape_reshape_transpose_4",
        4,
        0
      ]
    ],
    "output_desc": [
      [
        "reshape_reshape_transpose_4",
        4,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group3(half* __restrict__ p0, half* __restrict__ T_transpose) {\n  \n  T_transpose[(((((((int)blockIdx.x) >> 13) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 8191) * 64)) + ((((int)threadIdx.x) & 15) * 2))] = p0[(((((((((int)blockIdx.x) & 8191) >> 1) * 8192) + ((((int)blockIdx.x) >> 13) * 1024)) + ((((int)threadIdx.x) >> 5) * 256)) + ((((((((int)threadIdx.x) >> 4) * 8) + ((((int)blockIdx.x) & 1) * 4)) + ((((int)threadIdx.x) & 15) >> 3)) & 15) * 16)) + ((((int)threadIdx.x) & 7) * 2))];\n  T_transpose[((((((((int)blockIdx.x) >> 13) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 8191) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32)] = p0[(((((((((int)blockIdx.x) & 8191) >> 1) * 8192) + ((((int)blockIdx.x) >> 13) * 1024)) + (((((((((int)threadIdx.x) >> 4) * 128) + ((((int)blockIdx.x) & 1) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32) >> 8) * 256)) + (((((((((int)threadIdx.x) >> 4) * 8) + ((((int)blockIdx.x) & 1) * 4)) + ((((int)threadIdx.x) & 15) >> 3)) + 2) & 15) * 16)) + ((((int)threadIdx.x) & 7) * 2))];\n  T_transpose[((((((((int)blockIdx.x) >> 13) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 8191) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] = p0[((((((((((int)blockIdx.x) & 8191) >> 1) * 8192) + ((((int)blockIdx.x) >> 13) * 1024)) + (((((((((int)threadIdx.x) >> 4) * 128) + ((((int)blockIdx.x) & 1) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 1) >> 8) * 256)) + ((((((((int)threadIdx.x) >> 4) * 8) + ((((int)blockIdx.x) & 1) * 4)) + ((((int)threadIdx.x) & 15) >> 3)) & 15) * 16)) + ((((int)threadIdx.x) & 7) * 2)) + 1)];\n  T_transpose[((((((((int)blockIdx.x) >> 13) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 8191) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 33)] = p0[((((((((((int)blockIdx.x) & 8191) >> 1) * 8192) + ((((int)blockIdx.x) >> 13) * 1024)) + (((((((((int)threadIdx.x) >> 4) * 128) + ((((int)blockIdx.x) & 1) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 33) >> 8) * 256)) + (((((((((int)threadIdx.x) >> 4) * 8) + ((((int)blockIdx.x) & 1) * 4)) + ((((int)threadIdx.x) & 15) >> 3)) + 2) & 15) * 16)) + ((((int)threadIdx.x) & 7) * 2)) + 1)];\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      65536,
      1,
      1
    ],
    "latency": 0.20786985754966736,
    "name": "Group3",
    "gain": 0
  },
  {
    "nodes": [
      5
    ],
    "node_names": [
      "multiply_strided_slice_negative_strided_slice_concatenate_multiply_add_reshape_5"
    ],
    "group_id": 4,
    "input_desc": [
      [
        "multiply_strided_slice_negative_strided_slice_concatenate_multiply_add_reshape_5",
        5,
        0
      ],
      [
        "multiply_strided_slice_negative_strided_slice_concatenate_multiply_add_reshape_5",
        5,
        1
      ],
      [
        "multiply_strided_slice_negative_strided_slice_concatenate_multiply_add_reshape_5",
        5,
        2
      ]
    ],
    "output_desc": [
      [
        "multiply_strided_slice_negative_strided_slice_concatenate_multiply_add_reshape_5",
        5,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group4(half* __restrict__ p0, half* __restrict__ p1, half* __restrict__ p2, half* __restrict__ T_reshape) {\n  \n  T_reshape[(((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2))] = ((p0[(((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2))] * p1[(((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2))]) + ((__float2half_rn(0.000000e+00f) - p0[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 64)]) * p2[(((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2))]));\n  T_reshape[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 32)] = ((p0[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 32)] * p1[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2)) + 32)]) + ((__float2half_rn(0.000000e+00f) - p0[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 96)]) * p2[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2)) + 32)]));\n  T_reshape[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 64)] = ((p0[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 64)] * p1[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2)) + 64)]) + (p0[(((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2))] * p2[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2)) + 64)]));\n  T_reshape[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 96)] = ((p0[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 96)] * p1[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2)) + 96)]) + (p0[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 32)] * p2[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2)) + 96)]));\n  T_reshape[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] = ((p0[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] * p1[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2)) + 1)]) + ((__float2half_rn(0.000000e+00f) - p0[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65)]) * p2[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2)) + 1)]));\n  T_reshape[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 33)] = ((p0[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 33)] * p1[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2)) + 33)]) + ((__float2half_rn(0.000000e+00f) - p0[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 97)]) * p2[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2)) + 33)]));\n  T_reshape[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65)] = ((p0[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 65)] * p1[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2)) + 65)]) + (p0[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] * p2[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2)) + 65)]));\n  T_reshape[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 97)] = ((p0[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 97)] * p1[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2)) + 97)]) + (p0[((((((((int)blockIdx.x) >> 12) * 4194304) + ((((int)threadIdx.x) >> 4) * 524288)) + ((((int)blockIdx.x) & 4095) * 128)) + ((((int)threadIdx.x) & 15) * 2)) + 33)] * p2[((((((int)blockIdx.x) & 4095) * 128) + ((((int)threadIdx.x) & 15) * 2)) + 97)]));\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      32768,
      1,
      1
    ],
    "latency": 0.22751708328723907,
    "name": "Group4",
    "gain": 0
  },
  {
    "nodes": [
      6,
      7
    ],
    "node_names": [
      "ladder_perfect_quant_linear_cast_6",
      "reshape_reshape_transpose_7"
    ],
    "group_id": 5,
    "input_desc": [
      [
        "ladder_perfect_quant_linear_cast_6",
        6,
        0
      ],
      [
        "ladder_perfect_quant_linear_cast_6",
        6,
        1
      ]
    ],
    "output_desc": [
      [
        "reshape_reshape_transpose_7",
        7,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group5(int8_t* __restrict__ input0, int8_t* __restrict__ input1, half* __restrict__ output0) {\n  \n  int mediate1_local[128];\n  __shared__ signed char input0_shared[8192];\n  __shared__ signed char mediate0_shared[8192];\n  for (int i2_1_1_init = 0; i2_1_1_init < 2; ++i2_1_1_init) {\n    mediate1_local[i2_1_1_init] = 0;\n    mediate1_local[(i2_1_1_init + 16)] = 0;\n    mediate1_local[(i2_1_1_init + 32)] = 0;\n    mediate1_local[(i2_1_1_init + 48)] = 0;\n    mediate1_local[(i2_1_1_init + 64)] = 0;\n    mediate1_local[(i2_1_1_init + 80)] = 0;\n    mediate1_local[(i2_1_1_init + 96)] = 0;\n    mediate1_local[(i2_1_1_init + 112)] = 0;\n    mediate1_local[(i2_1_1_init + 2)] = 0;\n    mediate1_local[(i2_1_1_init + 18)] = 0;\n    mediate1_local[(i2_1_1_init + 34)] = 0;\n    mediate1_local[(i2_1_1_init + 50)] = 0;\n    mediate1_local[(i2_1_1_init + 66)] = 0;\n    mediate1_local[(i2_1_1_init + 82)] = 0;\n    mediate1_local[(i2_1_1_init + 98)] = 0;\n    mediate1_local[(i2_1_1_init + 114)] = 0;\n    mediate1_local[(i2_1_1_init + 4)] = 0;\n    mediate1_local[(i2_1_1_init + 20)] = 0;\n    mediate1_local[(i2_1_1_init + 36)] = 0;\n    mediate1_local[(i2_1_1_init + 52)] = 0;\n    mediate1_local[(i2_1_1_init + 68)] = 0;\n    mediate1_local[(i2_1_1_init + 84)] = 0;\n    mediate1_local[(i2_1_1_init + 100)] = 0;\n    mediate1_local[(i2_1_1_init + 116)] = 0;\n    mediate1_local[(i2_1_1_init + 6)] = 0;\n    mediate1_local[(i2_1_1_init + 22)] = 0;\n    mediate1_local[(i2_1_1_init + 38)] = 0;\n    mediate1_local[(i2_1_1_init + 54)] = 0;\n    mediate1_local[(i2_1_1_init + 70)] = 0;\n    mediate1_local[(i2_1_1_init + 86)] = 0;\n    mediate1_local[(i2_1_1_init + 102)] = 0;\n    mediate1_local[(i2_1_1_init + 118)] = 0;\n    mediate1_local[(i2_1_1_init + 8)] = 0;\n    mediate1_local[(i2_1_1_init + 24)] = 0;\n    mediate1_local[(i2_1_1_init + 40)] = 0;\n    mediate1_local[(i2_1_1_init + 56)] = 0;\n    mediate1_local[(i2_1_1_init + 72)] = 0;\n    mediate1_local[(i2_1_1_init + 88)] = 0;\n    mediate1_local[(i2_1_1_init + 104)] = 0;\n    mediate1_local[(i2_1_1_init + 120)] = 0;\n    mediate1_local[(i2_1_1_init + 10)] = 0;\n    mediate1_local[(i2_1_1_init + 26)] = 0;\n    mediate1_local[(i2_1_1_init + 42)] = 0;\n    mediate1_local[(i2_1_1_init + 58)] = 0;\n    mediate1_local[(i2_1_1_init + 74)] = 0;\n    mediate1_local[(i2_1_1_init + 90)] = 0;\n    mediate1_local[(i2_1_1_init + 106)] = 0;\n    mediate1_local[(i2_1_1_init + 122)] = 0;\n    mediate1_local[(i2_1_1_init + 12)] = 0;\n    mediate1_local[(i2_1_1_init + 28)] = 0;\n    mediate1_local[(i2_1_1_init + 44)] = 0;\n    mediate1_local[(i2_1_1_init + 60)] = 0;\n    mediate1_local[(i2_1_1_init + 76)] = 0;\n    mediate1_local[(i2_1_1_init + 92)] = 0;\n    mediate1_local[(i2_1_1_init + 108)] = 0;\n    mediate1_local[(i2_1_1_init + 124)] = 0;\n    mediate1_local[(i2_1_1_init + 14)] = 0;\n    mediate1_local[(i2_1_1_init + 30)] = 0;\n    mediate1_local[(i2_1_1_init + 46)] = 0;\n    mediate1_local[(i2_1_1_init + 62)] = 0;\n    mediate1_local[(i2_1_1_init + 78)] = 0;\n    mediate1_local[(i2_1_1_init + 94)] = 0;\n    mediate1_local[(i2_1_1_init + 110)] = 0;\n    mediate1_local[(i2_1_1_init + 126)] = 0;\n  }\n  for (int k_0 = 0; k_0 < 128; ++k_0) {\n    __syncthreads();\n    *(int4*)(input0_shared + (((int)threadIdx.x) * 16)) = *(int4*)(input0 + (((((((int)blockIdx.x) >> 3) * 1048576) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)));\n    *(int4*)(input0_shared + ((((int)threadIdx.x) * 16) + 2048)) = *(int4*)(input0 + ((((((((int)blockIdx.x) >> 3) * 1048576) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)) + 262144));\n    *(int4*)(input0_shared + ((((int)threadIdx.x) * 16) + 4096)) = *(int4*)(input0 + ((((((((int)blockIdx.x) >> 3) * 1048576) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)) + 524288));\n    *(int4*)(input0_shared + ((((int)threadIdx.x) * 16) + 6144)) = *(int4*)(input0 + ((((((((int)blockIdx.x) >> 3) * 1048576) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)) + 786432));\n    for (int ax0_ax1_ax2_ax3_fused_1 = 0; ax0_ax1_ax2_ax3_fused_1 < 16; ++ax0_ax1_ax2_ax3_fused_1) {\n      mediate0_shared[((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1)] = ((input1[(((((((((((int)blockIdx.x) & 7) >> 2) * 524288) + ((((int)threadIdx.x) >> 4) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 7) * 2)) + (ax0_ax1_ax2_ax3_fused_1 >> 3))] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_1 = 0; ax0_ax1_ax2_ax3_fused_1_1 < 16; ++ax0_ax1_ax2_ax3_fused_1_1) {\n      mediate0_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_1) + 2048)] = ((input1[((((((((((((int)blockIdx.x) & 7) >> 2) * 524288) + ((((int)threadIdx.x) >> 4) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 7) * 2)) + (ax0_ax1_ax2_ax3_fused_1_1 >> 3)) + 131072)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_1 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_2 = 0; ax0_ax1_ax2_ax3_fused_1_2 < 16; ++ax0_ax1_ax2_ax3_fused_1_2) {\n      mediate0_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_2) + 4096)] = ((input1[((((((((((((int)blockIdx.x) & 7) >> 2) * 524288) + ((((int)threadIdx.x) >> 4) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 7) * 2)) + (ax0_ax1_ax2_ax3_fused_1_2 >> 3)) + 262144)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_2 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_3 = 0; ax0_ax1_ax2_ax3_fused_1_3 < 16; ++ax0_ax1_ax2_ax3_fused_1_3) {\n      mediate0_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_3) + 6144)] = ((input1[((((((((((((int)blockIdx.x) & 7) >> 2) * 524288) + ((((int)threadIdx.x) >> 4) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 7) * 2)) + (ax0_ax1_ax2_ax3_fused_1_3 >> 3)) + 393216)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_3 & 7))) & (signed char)1);\n    }\n    __syncthreads();\n    for (int k_1 = 0; k_1 < 2; ++k_1) {\n      for (int kk_1 = 0; kk_1 < 32; ++kk_1) {\n        for (int i2_1_1 = 0; i2_1_1 < 2; ++i2_1_1) {\n          mediate1_local[i2_1_1] = (mediate1_local[i2_1_1] + (((int)input0_shared[(((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          mediate1_local[(i2_1_1 + 16)] = (mediate1_local[(i2_1_1 + 16)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)mediate0_shared[((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          mediate1_local[(i2_1_1 + 32)] = (mediate1_local[(i2_1_1 + 32)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          mediate1_local[(i2_1_1 + 48)] = (mediate1_local[(i2_1_1 + 48)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)mediate0_shared[((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          mediate1_local[(i2_1_1 + 64)] = (mediate1_local[(i2_1_1 + 64)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          mediate1_local[(i2_1_1 + 80)] = (mediate1_local[(i2_1_1 + 80)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 320)]) * ((int)mediate0_shared[((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          mediate1_local[(i2_1_1 + 96)] = (mediate1_local[(i2_1_1 + 96)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          mediate1_local[(i2_1_1 + 112)] = (mediate1_local[(i2_1_1 + 112)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 448)]) * ((int)mediate0_shared[((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          mediate1_local[(i2_1_1 + 2)] = (mediate1_local[(i2_1_1 + 2)] + (((int)input0_shared[(((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          mediate1_local[(i2_1_1 + 18)] = (mediate1_local[(i2_1_1 + 18)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          mediate1_local[(i2_1_1 + 34)] = (mediate1_local[(i2_1_1 + 34)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          mediate1_local[(i2_1_1 + 50)] = (mediate1_local[(i2_1_1 + 50)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          mediate1_local[(i2_1_1 + 66)] = (mediate1_local[(i2_1_1 + 66)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          mediate1_local[(i2_1_1 + 82)] = (mediate1_local[(i2_1_1 + 82)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 320)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          mediate1_local[(i2_1_1 + 98)] = (mediate1_local[(i2_1_1 + 98)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          mediate1_local[(i2_1_1 + 114)] = (mediate1_local[(i2_1_1 + 114)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 448)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          mediate1_local[(i2_1_1 + 4)] = (mediate1_local[(i2_1_1 + 4)] + (((int)input0_shared[(((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          mediate1_local[(i2_1_1 + 20)] = (mediate1_local[(i2_1_1 + 20)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          mediate1_local[(i2_1_1 + 36)] = (mediate1_local[(i2_1_1 + 36)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          mediate1_local[(i2_1_1 + 52)] = (mediate1_local[(i2_1_1 + 52)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          mediate1_local[(i2_1_1 + 68)] = (mediate1_local[(i2_1_1 + 68)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          mediate1_local[(i2_1_1 + 84)] = (mediate1_local[(i2_1_1 + 84)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 320)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          mediate1_local[(i2_1_1 + 100)] = (mediate1_local[(i2_1_1 + 100)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          mediate1_local[(i2_1_1 + 116)] = (mediate1_local[(i2_1_1 + 116)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 448)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          mediate1_local[(i2_1_1 + 6)] = (mediate1_local[(i2_1_1 + 6)] + (((int)input0_shared[(((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          mediate1_local[(i2_1_1 + 22)] = (mediate1_local[(i2_1_1 + 22)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          mediate1_local[(i2_1_1 + 38)] = (mediate1_local[(i2_1_1 + 38)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          mediate1_local[(i2_1_1 + 54)] = (mediate1_local[(i2_1_1 + 54)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          mediate1_local[(i2_1_1 + 70)] = (mediate1_local[(i2_1_1 + 70)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          mediate1_local[(i2_1_1 + 86)] = (mediate1_local[(i2_1_1 + 86)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 320)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          mediate1_local[(i2_1_1 + 102)] = (mediate1_local[(i2_1_1 + 102)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          mediate1_local[(i2_1_1 + 118)] = (mediate1_local[(i2_1_1 + 118)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 448)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          mediate1_local[(i2_1_1 + 8)] = (mediate1_local[(i2_1_1 + 8)] + (((int)input0_shared[(((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4096)])));\n          mediate1_local[(i2_1_1 + 24)] = (mediate1_local[(i2_1_1 + 24)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4096)])));\n          mediate1_local[(i2_1_1 + 40)] = (mediate1_local[(i2_1_1 + 40)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4096)])));\n          mediate1_local[(i2_1_1 + 56)] = (mediate1_local[(i2_1_1 + 56)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4096)])));\n          mediate1_local[(i2_1_1 + 72)] = (mediate1_local[(i2_1_1 + 72)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4096)])));\n          mediate1_local[(i2_1_1 + 88)] = (mediate1_local[(i2_1_1 + 88)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 320)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4096)])));\n          mediate1_local[(i2_1_1 + 104)] = (mediate1_local[(i2_1_1 + 104)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4096)])));\n          mediate1_local[(i2_1_1 + 120)] = (mediate1_local[(i2_1_1 + 120)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 448)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4096)])));\n          mediate1_local[(i2_1_1 + 10)] = (mediate1_local[(i2_1_1 + 10)] + (((int)input0_shared[(((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5120)])));\n          mediate1_local[(i2_1_1 + 26)] = (mediate1_local[(i2_1_1 + 26)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5120)])));\n          mediate1_local[(i2_1_1 + 42)] = (mediate1_local[(i2_1_1 + 42)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5120)])));\n          mediate1_local[(i2_1_1 + 58)] = (mediate1_local[(i2_1_1 + 58)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5120)])));\n          mediate1_local[(i2_1_1 + 74)] = (mediate1_local[(i2_1_1 + 74)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5120)])));\n          mediate1_local[(i2_1_1 + 90)] = (mediate1_local[(i2_1_1 + 90)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 320)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5120)])));\n          mediate1_local[(i2_1_1 + 106)] = (mediate1_local[(i2_1_1 + 106)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5120)])));\n          mediate1_local[(i2_1_1 + 122)] = (mediate1_local[(i2_1_1 + 122)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 448)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5120)])));\n          mediate1_local[(i2_1_1 + 12)] = (mediate1_local[(i2_1_1 + 12)] + (((int)input0_shared[(((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6144)])));\n          mediate1_local[(i2_1_1 + 28)] = (mediate1_local[(i2_1_1 + 28)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6144)])));\n          mediate1_local[(i2_1_1 + 44)] = (mediate1_local[(i2_1_1 + 44)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6144)])));\n          mediate1_local[(i2_1_1 + 60)] = (mediate1_local[(i2_1_1 + 60)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6144)])));\n          mediate1_local[(i2_1_1 + 76)] = (mediate1_local[(i2_1_1 + 76)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6144)])));\n          mediate1_local[(i2_1_1 + 92)] = (mediate1_local[(i2_1_1 + 92)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 320)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6144)])));\n          mediate1_local[(i2_1_1 + 108)] = (mediate1_local[(i2_1_1 + 108)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6144)])));\n          mediate1_local[(i2_1_1 + 124)] = (mediate1_local[(i2_1_1 + 124)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 448)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6144)])));\n          mediate1_local[(i2_1_1 + 14)] = (mediate1_local[(i2_1_1 + 14)] + (((int)input0_shared[(((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7168)])));\n          mediate1_local[(i2_1_1 + 30)] = (mediate1_local[(i2_1_1 + 30)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7168)])));\n          mediate1_local[(i2_1_1 + 46)] = (mediate1_local[(i2_1_1 + 46)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7168)])));\n          mediate1_local[(i2_1_1 + 62)] = (mediate1_local[(i2_1_1 + 62)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7168)])));\n          mediate1_local[(i2_1_1 + 78)] = (mediate1_local[(i2_1_1 + 78)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7168)])));\n          mediate1_local[(i2_1_1 + 94)] = (mediate1_local[(i2_1_1 + 94)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 320)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7168)])));\n          mediate1_local[(i2_1_1 + 110)] = (mediate1_local[(i2_1_1 + 110)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7168)])));\n          mediate1_local[(i2_1_1 + 126)] = (mediate1_local[(i2_1_1 + 126)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (i2_1_1 * 32)) + kk_1) + 448)]) * ((int)mediate0_shared[(((((((((int)threadIdx.x) & 15) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7168)])));\n        }\n      }\n    }\n  }\n  for (int ax0 = 0; ax0 < 2; ++ax0) {\n    output0[(((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3))] = ((half)mediate1_local[ax0]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 32)] = ((half)mediate1_local[(ax0 + 16)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 64)] = ((half)mediate1_local[(ax0 + 32)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 96)] = ((half)mediate1_local[(ax0 + 48)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524288)] = ((half)mediate1_local[(ax0 + 64)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524320)] = ((half)mediate1_local[(ax0 + 80)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524352)] = ((half)mediate1_local[(ax0 + 96)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524384)] = ((half)mediate1_local[(ax0 + 112)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 128)] = ((half)mediate1_local[(ax0 + 2)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 160)] = ((half)mediate1_local[(ax0 + 18)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 192)] = ((half)mediate1_local[(ax0 + 34)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 224)] = ((half)mediate1_local[(ax0 + 50)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524416)] = ((half)mediate1_local[(ax0 + 66)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524448)] = ((half)mediate1_local[(ax0 + 82)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524480)] = ((half)mediate1_local[(ax0 + 98)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524512)] = ((half)mediate1_local[(ax0 + 114)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 256)] = ((half)mediate1_local[(ax0 + 4)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 288)] = ((half)mediate1_local[(ax0 + 20)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 320)] = ((half)mediate1_local[(ax0 + 36)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 352)] = ((half)mediate1_local[(ax0 + 52)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524544)] = ((half)mediate1_local[(ax0 + 68)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524576)] = ((half)mediate1_local[(ax0 + 84)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524608)] = ((half)mediate1_local[(ax0 + 100)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524640)] = ((half)mediate1_local[(ax0 + 116)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 384)] = ((half)mediate1_local[(ax0 + 6)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 416)] = ((half)mediate1_local[(ax0 + 22)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 448)] = ((half)mediate1_local[(ax0 + 38)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 480)] = ((half)mediate1_local[(ax0 + 54)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524672)] = ((half)mediate1_local[(ax0 + 70)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524704)] = ((half)mediate1_local[(ax0 + 86)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524736)] = ((half)mediate1_local[(ax0 + 102)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524768)] = ((half)mediate1_local[(ax0 + 118)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 512)] = ((half)mediate1_local[(ax0 + 8)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 544)] = ((half)mediate1_local[(ax0 + 24)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 576)] = ((half)mediate1_local[(ax0 + 40)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 608)] = ((half)mediate1_local[(ax0 + 56)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524800)] = ((half)mediate1_local[(ax0 + 72)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524832)] = ((half)mediate1_local[(ax0 + 88)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524864)] = ((half)mediate1_local[(ax0 + 104)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524896)] = ((half)mediate1_local[(ax0 + 120)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 640)] = ((half)mediate1_local[(ax0 + 10)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 672)] = ((half)mediate1_local[(ax0 + 26)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 704)] = ((half)mediate1_local[(ax0 + 42)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 736)] = ((half)mediate1_local[(ax0 + 58)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524928)] = ((half)mediate1_local[(ax0 + 74)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524960)] = ((half)mediate1_local[(ax0 + 90)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 524992)] = ((half)mediate1_local[(ax0 + 106)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 525024)] = ((half)mediate1_local[(ax0 + 122)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 768)] = ((half)mediate1_local[(ax0 + 12)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 800)] = ((half)mediate1_local[(ax0 + 28)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 832)] = ((half)mediate1_local[(ax0 + 44)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 864)] = ((half)mediate1_local[(ax0 + 60)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 525056)] = ((half)mediate1_local[(ax0 + 76)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 525088)] = ((half)mediate1_local[(ax0 + 92)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 525120)] = ((half)mediate1_local[(ax0 + 108)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 525152)] = ((half)mediate1_local[(ax0 + 124)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 896)] = ((half)mediate1_local[(ax0 + 14)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 928)] = ((half)mediate1_local[(ax0 + 30)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 960)] = ((half)mediate1_local[(ax0 + 46)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 992)] = ((half)mediate1_local[(ax0 + 62)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 525184)] = ((half)mediate1_local[(ax0 + 78)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 525216)] = ((half)mediate1_local[(ax0 + 94)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 525248)] = ((half)mediate1_local[(ax0 + 110)]);\n    output0[((((((((((((int)threadIdx.x) & 15) >> 2) * 1048576) + ((((int)blockIdx.x) >> 3) * 16384)) + ((((int)threadIdx.x) >> 4) * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 525280)] = ((half)mediate1_local[(ax0 + 126)]);\n  }\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      256,
      1,
      1
    ],
    "latency": 7.764377593994141,
    "name": "Group5",
    "gain": 0.04671864211559296
  },
  {
    "nodes": [
      8
    ],
    "node_names": [
      "multiply_strided_slice_negative_strided_slice_concatenate_multiply_add_expand_dims_broadcast_to_reshape_transpose_reshape_transpose_8"
    ],
    "group_id": 6,
    "input_desc": [
      [
        "multiply_strided_slice_negative_strided_slice_concatenate_multiply_add_expand_dims_broadcast_to_reshape_transpose_reshape_transpose_8",
        8,
        0
      ],
      [
        "multiply_strided_slice_negative_strided_slice_concatenate_multiply_add_expand_dims_broadcast_to_reshape_transpose_reshape_transpose_8",
        8,
        1
      ],
      [
        "multiply_strided_slice_negative_strided_slice_concatenate_multiply_add_expand_dims_broadcast_to_reshape_transpose_reshape_transpose_8",
        8,
        2
      ]
    ],
    "output_desc": [
      [
        "multiply_strided_slice_negative_strided_slice_concatenate_multiply_add_expand_dims_broadcast_to_reshape_transpose_reshape_transpose_8",
        8,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group6(half* __restrict__ p0, half* __restrict__ p1, half* __restrict__ p2, half* __restrict__ T_transpose_15) {\n  \n  T_transpose_15[(((((((int)blockIdx.x) >> 13) * 8388608) + ((((int)threadIdx.x) >> 6) * 1048576)) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63))] = ((p0[((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63))] * p1[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]) + ((((((int)blockIdx.x) & 1) == 1) ? p0[((((((int)blockIdx.x) >> 13) * 1048576) + (((((int)blockIdx.x) & 8191) >> 1) * 128)) + (((int)threadIdx.x) & 63))] : (__float2half_rn(0.000000e+00f) - p0[(((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 64)])) * p2[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]));\n  T_transpose_15[((((((((int)blockIdx.x) >> 13) * 8388608) + ((((int)threadIdx.x) >> 6) * 1048576)) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 2097152)] = ((p0[((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63))] * p1[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]) + ((((((int)blockIdx.x) & 1) == 1) ? p0[((((((int)blockIdx.x) >> 13) * 1048576) + (((((int)blockIdx.x) & 8191) >> 1) * 128)) + (((int)threadIdx.x) & 63))] : (__float2half_rn(0.000000e+00f) - p0[(((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 64)])) * p2[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]));\n  T_transpose_15[((((((((int)blockIdx.x) >> 13) * 8388608) + ((((int)threadIdx.x) >> 6) * 1048576)) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 4194304)] = ((p0[(((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 524288)] * p1[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]) + ((((((int)blockIdx.x) & 1) == 1) ? p0[(((((((int)blockIdx.x) >> 13) * 1048576) + (((((int)blockIdx.x) & 8191) >> 1) * 128)) + (((int)threadIdx.x) & 63)) + 524288)] : (__float2half_rn(0.000000e+00f) - p0[(((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 524352)])) * p2[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]));\n  T_transpose_15[((((((((int)blockIdx.x) >> 13) * 8388608) + ((((int)threadIdx.x) >> 6) * 1048576)) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 6291456)] = ((p0[(((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 524288)] * p1[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]) + ((((((int)blockIdx.x) & 1) == 1) ? p0[(((((((int)blockIdx.x) >> 13) * 1048576) + (((((int)blockIdx.x) & 8191) >> 1) * 128)) + (((int)threadIdx.x) & 63)) + 524288)] : (__float2half_rn(0.000000e+00f) - p0[(((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 524352)])) * p2[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]));\n  T_transpose_15[((((((((int)blockIdx.x) >> 13) * 8388608) + ((((int)threadIdx.x) >> 6) * 1048576)) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 524288)] = ((p0[((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63))] * p1[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]) + ((((((int)blockIdx.x) & 1) == 1) ? p0[((((((int)blockIdx.x) >> 13) * 1048576) + (((((int)blockIdx.x) & 8191) >> 1) * 128)) + (((int)threadIdx.x) & 63))] : (__float2half_rn(0.000000e+00f) - p0[(((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 64)])) * p2[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]));\n  T_transpose_15[((((((((int)blockIdx.x) >> 13) * 8388608) + ((((int)threadIdx.x) >> 6) * 1048576)) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 2621440)] = ((p0[((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63))] * p1[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]) + ((((((int)blockIdx.x) & 1) == 1) ? p0[((((((int)blockIdx.x) >> 13) * 1048576) + (((((int)blockIdx.x) & 8191) >> 1) * 128)) + (((int)threadIdx.x) & 63))] : (__float2half_rn(0.000000e+00f) - p0[(((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 64)])) * p2[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]));\n  T_transpose_15[((((((((int)blockIdx.x) >> 13) * 8388608) + ((((int)threadIdx.x) >> 6) * 1048576)) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 4718592)] = ((p0[(((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 524288)] * p1[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]) + ((((((int)blockIdx.x) & 1) == 1) ? p0[(((((((int)blockIdx.x) >> 13) * 1048576) + (((((int)blockIdx.x) & 8191) >> 1) * 128)) + (((int)threadIdx.x) & 63)) + 524288)] : (__float2half_rn(0.000000e+00f) - p0[(((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 524352)])) * p2[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]));\n  T_transpose_15[((((((((int)blockIdx.x) >> 13) * 8388608) + ((((int)threadIdx.x) >> 6) * 1048576)) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 6815744)] = ((p0[(((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 524288)] * p1[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]) + ((((((int)blockIdx.x) & 1) == 1) ? p0[(((((((int)blockIdx.x) >> 13) * 1048576) + (((((int)blockIdx.x) & 8191) >> 1) * 128)) + (((int)threadIdx.x) & 63)) + 524288)] : (__float2half_rn(0.000000e+00f) - p0[(((((((int)blockIdx.x) >> 13) * 1048576) + ((((int)blockIdx.x) & 8191) * 64)) + (((int)threadIdx.x) & 63)) + 524352)])) * p2[(((((int)blockIdx.x) & 8191) * 64) + (((int)threadIdx.x) & 63))]));\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      32768,
      1,
      1
    ],
    "latency": 0.11499200016260147,
    "name": "Group6",
    "gain": 0
  },
  {
    "nodes": [
      9,
      10
    ],
    "node_names": [
      "nn_batch_matmul_9",
      "reshape_divide_10"
    ],
    "group_id": 7,
    "input_desc": [
      [
        "nn_batch_matmul_9",
        9,
        0
      ],
      [
        "nn_batch_matmul_9",
        9,
        1
      ]
    ],
    "output_desc": [
      [
        "reshape_divide_10",
        10,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group7(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output0) {\n  \n  half mediate0_local[256];\n  __shared__ half input0_shared[16384];\n  __shared__ half input1_shared[8192];\n  for (int j_1_1_init = 0; j_1_1_init < 2; ++j_1_1_init) {\n    mediate0_local[j_1_1_init] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 32)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 64)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 96)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 128)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 160)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 192)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 224)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 2)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 34)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 66)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 98)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 130)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 162)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 194)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 226)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 4)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 36)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 68)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 100)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 132)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 164)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 196)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 228)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 6)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 38)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 70)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 102)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 134)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 166)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 198)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 230)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 8)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 40)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 72)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 104)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 136)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 168)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 200)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 232)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 10)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 42)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 74)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 106)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 138)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 170)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 202)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 234)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 12)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 44)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 76)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 108)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 140)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 172)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 204)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 236)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 14)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 46)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 78)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 110)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 142)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 174)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 206)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 238)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 16)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 48)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 80)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 112)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 144)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 176)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 208)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 240)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 18)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 50)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 82)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 114)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 146)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 178)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 210)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 242)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 20)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 52)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 84)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 116)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 148)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 180)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 212)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 244)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 22)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 54)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 86)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 118)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 150)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 182)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 214)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 246)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 24)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 56)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 88)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 120)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 152)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 184)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 216)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 248)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 26)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 58)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 90)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 122)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 154)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 186)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 218)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 250)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 28)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 60)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 92)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 124)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 156)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 188)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 220)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 252)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 30)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 62)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 94)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 126)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 158)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 190)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 222)] = __float2half_rn(0.000000e+00f);\n    mediate0_local[(j_1_1_init + 254)] = __float2half_rn(0.000000e+00f);\n  }\n  for (int k_0 = 0; k_0 < 2; ++k_0) {\n    __syncthreads();\n    *(uint4*)(input0_shared + (((int)threadIdx.x) * 8)) = *(uint4*)(input0 + (((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 1024)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 2048));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 2048)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 4096));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 3072)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 6144));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 4096)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 8192));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 5120)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 10240));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 6144)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 12288));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 7168)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 14336));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 8192)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 16384));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 9216)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 18432));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 10240)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 20480));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 11264)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 22528));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 12288)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 24576));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 13312)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 26624));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 14336)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 28672));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 15360)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 5) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 30720));\n    *(uint4*)(input1_shared + (((int)threadIdx.x) * 8)) = *(uint4*)(input1 + ((((((((int)blockIdx.x) >> 9) * 524288) + ((((int)blockIdx.x) & 31) * 16384)) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)));\n    *(uint4*)(input1_shared + ((((int)threadIdx.x) * 8) + 1024)) = *(uint4*)(input1 + (((((((((int)blockIdx.x) >> 9) * 524288) + ((((int)blockIdx.x) & 31) * 16384)) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 2048));\n    *(uint4*)(input1_shared + ((((int)threadIdx.x) * 8) + 2048)) = *(uint4*)(input1 + (((((((((int)blockIdx.x) >> 9) * 524288) + ((((int)blockIdx.x) & 31) * 16384)) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 4096));\n    *(uint4*)(input1_shared + ((((int)threadIdx.x) * 8) + 3072)) = *(uint4*)(input1 + (((((((((int)blockIdx.x) >> 9) * 524288) + ((((int)blockIdx.x) & 31) * 16384)) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 6144));\n    *(uint4*)(input1_shared + ((((int)threadIdx.x) * 8) + 4096)) = *(uint4*)(input1 + (((((((((int)blockIdx.x) >> 9) * 524288) + ((((int)blockIdx.x) & 31) * 16384)) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 8192));\n    *(uint4*)(input1_shared + ((((int)threadIdx.x) * 8) + 5120)) = *(uint4*)(input1 + (((((((((int)blockIdx.x) >> 9) * 524288) + ((((int)blockIdx.x) & 31) * 16384)) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 10240));\n    *(uint4*)(input1_shared + ((((int)threadIdx.x) * 8) + 6144)) = *(uint4*)(input1 + (((((((((int)blockIdx.x) >> 9) * 524288) + ((((int)blockIdx.x) & 31) * 16384)) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 12288));\n    *(uint4*)(input1_shared + ((((int)threadIdx.x) * 8) + 7168)) = *(uint4*)(input1 + (((((((((int)blockIdx.x) >> 9) * 524288) + ((((int)blockIdx.x) & 31) * 16384)) + ((((int)threadIdx.x) >> 3) * 128)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 14336));\n    __syncthreads();\n    for (int k_1 = 0; k_1 < 64; ++k_1) {\n      for (int j_1_1 = 0; j_1_1 < 2; ++j_1_1) {\n        mediate0_local[j_1_1] = (mediate0_local[j_1_1] + (input0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 32)] = (mediate0_local[(j_1_1 + 32)] + (input0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 64)] = (mediate0_local[(j_1_1 + 64)] + (input0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 96)] = (mediate0_local[(j_1_1 + 96)] + (input0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 128)] = (mediate0_local[(j_1_1 + 128)] + (input0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 160)] = (mediate0_local[(j_1_1 + 160)] + (input0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 192)] = (mediate0_local[(j_1_1 + 192)] + (input0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 224)] = (mediate0_local[(j_1_1 + 224)] + (input0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 2)] = (mediate0_local[(j_1_1 + 2)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 34)] = (mediate0_local[(j_1_1 + 34)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 66)] = (mediate0_local[(j_1_1 + 66)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 98)] = (mediate0_local[(j_1_1 + 98)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 130)] = (mediate0_local[(j_1_1 + 130)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 162)] = (mediate0_local[(j_1_1 + 162)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 194)] = (mediate0_local[(j_1_1 + 194)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 226)] = (mediate0_local[(j_1_1 + 226)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 4)] = (mediate0_local[(j_1_1 + 4)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 36)] = (mediate0_local[(j_1_1 + 36)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 68)] = (mediate0_local[(j_1_1 + 68)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 100)] = (mediate0_local[(j_1_1 + 100)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 132)] = (mediate0_local[(j_1_1 + 132)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 164)] = (mediate0_local[(j_1_1 + 164)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 196)] = (mediate0_local[(j_1_1 + 196)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 228)] = (mediate0_local[(j_1_1 + 228)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 6)] = (mediate0_local[(j_1_1 + 6)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 38)] = (mediate0_local[(j_1_1 + 38)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 70)] = (mediate0_local[(j_1_1 + 70)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 102)] = (mediate0_local[(j_1_1 + 102)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 134)] = (mediate0_local[(j_1_1 + 134)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 166)] = (mediate0_local[(j_1_1 + 166)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 198)] = (mediate0_local[(j_1_1 + 198)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 230)] = (mediate0_local[(j_1_1 + 230)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 8)] = (mediate0_local[(j_1_1 + 8)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 40)] = (mediate0_local[(j_1_1 + 40)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 72)] = (mediate0_local[(j_1_1 + 72)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 104)] = (mediate0_local[(j_1_1 + 104)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 136)] = (mediate0_local[(j_1_1 + 136)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 168)] = (mediate0_local[(j_1_1 + 168)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 200)] = (mediate0_local[(j_1_1 + 200)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 232)] = (mediate0_local[(j_1_1 + 232)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 10)] = (mediate0_local[(j_1_1 + 10)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 42)] = (mediate0_local[(j_1_1 + 42)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 74)] = (mediate0_local[(j_1_1 + 74)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 106)] = (mediate0_local[(j_1_1 + 106)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 138)] = (mediate0_local[(j_1_1 + 138)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 170)] = (mediate0_local[(j_1_1 + 170)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 202)] = (mediate0_local[(j_1_1 + 202)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 234)] = (mediate0_local[(j_1_1 + 234)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 12)] = (mediate0_local[(j_1_1 + 12)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 44)] = (mediate0_local[(j_1_1 + 44)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 76)] = (mediate0_local[(j_1_1 + 76)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 108)] = (mediate0_local[(j_1_1 + 108)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 140)] = (mediate0_local[(j_1_1 + 140)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 172)] = (mediate0_local[(j_1_1 + 172)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 204)] = (mediate0_local[(j_1_1 + 204)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 236)] = (mediate0_local[(j_1_1 + 236)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 14)] = (mediate0_local[(j_1_1 + 14)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 46)] = (mediate0_local[(j_1_1 + 46)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 78)] = (mediate0_local[(j_1_1 + 78)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 110)] = (mediate0_local[(j_1_1 + 110)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 142)] = (mediate0_local[(j_1_1 + 142)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 174)] = (mediate0_local[(j_1_1 + 174)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 206)] = (mediate0_local[(j_1_1 + 206)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 238)] = (mediate0_local[(j_1_1 + 238)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 16)] = (mediate0_local[(j_1_1 + 16)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 48)] = (mediate0_local[(j_1_1 + 48)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 80)] = (mediate0_local[(j_1_1 + 80)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 112)] = (mediate0_local[(j_1_1 + 112)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 144)] = (mediate0_local[(j_1_1 + 144)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 176)] = (mediate0_local[(j_1_1 + 176)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 208)] = (mediate0_local[(j_1_1 + 208)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 240)] = (mediate0_local[(j_1_1 + 240)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 18)] = (mediate0_local[(j_1_1 + 18)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 50)] = (mediate0_local[(j_1_1 + 50)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 82)] = (mediate0_local[(j_1_1 + 82)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 114)] = (mediate0_local[(j_1_1 + 114)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 146)] = (mediate0_local[(j_1_1 + 146)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 178)] = (mediate0_local[(j_1_1 + 178)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 210)] = (mediate0_local[(j_1_1 + 210)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 242)] = (mediate0_local[(j_1_1 + 242)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 20)] = (mediate0_local[(j_1_1 + 20)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 52)] = (mediate0_local[(j_1_1 + 52)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 84)] = (mediate0_local[(j_1_1 + 84)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 116)] = (mediate0_local[(j_1_1 + 116)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 148)] = (mediate0_local[(j_1_1 + 148)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 180)] = (mediate0_local[(j_1_1 + 180)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 212)] = (mediate0_local[(j_1_1 + 212)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 244)] = (mediate0_local[(j_1_1 + 244)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 22)] = (mediate0_local[(j_1_1 + 22)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 54)] = (mediate0_local[(j_1_1 + 54)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 86)] = (mediate0_local[(j_1_1 + 86)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 118)] = (mediate0_local[(j_1_1 + 118)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 150)] = (mediate0_local[(j_1_1 + 150)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 182)] = (mediate0_local[(j_1_1 + 182)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 214)] = (mediate0_local[(j_1_1 + 214)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 246)] = (mediate0_local[(j_1_1 + 246)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 24)] = (mediate0_local[(j_1_1 + 24)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 56)] = (mediate0_local[(j_1_1 + 56)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 88)] = (mediate0_local[(j_1_1 + 88)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 120)] = (mediate0_local[(j_1_1 + 120)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 152)] = (mediate0_local[(j_1_1 + 152)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 184)] = (mediate0_local[(j_1_1 + 184)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 216)] = (mediate0_local[(j_1_1 + 216)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 248)] = (mediate0_local[(j_1_1 + 248)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 26)] = (mediate0_local[(j_1_1 + 26)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 58)] = (mediate0_local[(j_1_1 + 58)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 90)] = (mediate0_local[(j_1_1 + 90)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 122)] = (mediate0_local[(j_1_1 + 122)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 154)] = (mediate0_local[(j_1_1 + 154)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 186)] = (mediate0_local[(j_1_1 + 186)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 218)] = (mediate0_local[(j_1_1 + 218)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 250)] = (mediate0_local[(j_1_1 + 250)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 28)] = (mediate0_local[(j_1_1 + 28)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 60)] = (mediate0_local[(j_1_1 + 60)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 92)] = (mediate0_local[(j_1_1 + 92)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 124)] = (mediate0_local[(j_1_1 + 124)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 156)] = (mediate0_local[(j_1_1 + 156)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 188)] = (mediate0_local[(j_1_1 + 188)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 220)] = (mediate0_local[(j_1_1 + 220)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 252)] = (mediate0_local[(j_1_1 + 252)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        mediate0_local[(j_1_1 + 30)] = (mediate0_local[(j_1_1 + 30)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * input1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        mediate0_local[(j_1_1 + 62)] = (mediate0_local[(j_1_1 + 62)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        mediate0_local[(j_1_1 + 94)] = (mediate0_local[(j_1_1 + 94)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        mediate0_local[(j_1_1 + 126)] = (mediate0_local[(j_1_1 + 126)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        mediate0_local[(j_1_1 + 158)] = (mediate0_local[(j_1_1 + 158)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        mediate0_local[(j_1_1 + 190)] = (mediate0_local[(j_1_1 + 190)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        mediate0_local[(j_1_1 + 222)] = (mediate0_local[(j_1_1 + 222)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        mediate0_local[(j_1_1 + 254)] = (mediate0_local[(j_1_1 + 254)] + (input0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * input1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n      }\n    }\n  }\n  for (int ax0 = 0; ax0 < 2; ++ax0) {\n    output0[((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0)] = (mediate0_local[ax0] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 16)] = (mediate0_local[(ax0 + 32)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 32)] = (mediate0_local[(ax0 + 64)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 48)] = (mediate0_local[(ax0 + 96)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 64)] = (mediate0_local[(ax0 + 128)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 80)] = (mediate0_local[(ax0 + 160)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 96)] = (mediate0_local[(ax0 + 192)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 112)] = (mediate0_local[(ax0 + 224)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 65536)] = (mediate0_local[(ax0 + 2)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 65552)] = (mediate0_local[(ax0 + 34)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 65568)] = (mediate0_local[(ax0 + 66)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 65584)] = (mediate0_local[(ax0 + 98)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 65600)] = (mediate0_local[(ax0 + 130)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 65616)] = (mediate0_local[(ax0 + 162)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 65632)] = (mediate0_local[(ax0 + 194)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 65648)] = (mediate0_local[(ax0 + 226)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 131072)] = (mediate0_local[(ax0 + 4)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 131088)] = (mediate0_local[(ax0 + 36)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 131104)] = (mediate0_local[(ax0 + 68)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 131120)] = (mediate0_local[(ax0 + 100)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 131136)] = (mediate0_local[(ax0 + 132)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 131152)] = (mediate0_local[(ax0 + 164)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 131168)] = (mediate0_local[(ax0 + 196)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 131184)] = (mediate0_local[(ax0 + 228)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 196608)] = (mediate0_local[(ax0 + 6)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 196624)] = (mediate0_local[(ax0 + 38)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 196640)] = (mediate0_local[(ax0 + 70)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 196656)] = (mediate0_local[(ax0 + 102)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 196672)] = (mediate0_local[(ax0 + 134)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 196688)] = (mediate0_local[(ax0 + 166)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 196704)] = (mediate0_local[(ax0 + 198)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 196720)] = (mediate0_local[(ax0 + 230)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 262144)] = (mediate0_local[(ax0 + 8)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 262160)] = (mediate0_local[(ax0 + 40)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 262176)] = (mediate0_local[(ax0 + 72)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 262192)] = (mediate0_local[(ax0 + 104)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 262208)] = (mediate0_local[(ax0 + 136)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 262224)] = (mediate0_local[(ax0 + 168)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 262240)] = (mediate0_local[(ax0 + 200)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 262256)] = (mediate0_local[(ax0 + 232)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 327680)] = (mediate0_local[(ax0 + 10)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 327696)] = (mediate0_local[(ax0 + 42)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 327712)] = (mediate0_local[(ax0 + 74)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 327728)] = (mediate0_local[(ax0 + 106)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 327744)] = (mediate0_local[(ax0 + 138)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 327760)] = (mediate0_local[(ax0 + 170)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 327776)] = (mediate0_local[(ax0 + 202)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 327792)] = (mediate0_local[(ax0 + 234)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 393216)] = (mediate0_local[(ax0 + 12)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 393232)] = (mediate0_local[(ax0 + 44)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 393248)] = (mediate0_local[(ax0 + 76)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 393264)] = (mediate0_local[(ax0 + 108)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 393280)] = (mediate0_local[(ax0 + 140)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 393296)] = (mediate0_local[(ax0 + 172)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 393312)] = (mediate0_local[(ax0 + 204)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 393328)] = (mediate0_local[(ax0 + 236)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 458752)] = (mediate0_local[(ax0 + 14)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 458768)] = (mediate0_local[(ax0 + 46)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 458784)] = (mediate0_local[(ax0 + 78)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 458800)] = (mediate0_local[(ax0 + 110)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 458816)] = (mediate0_local[(ax0 + 142)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 458832)] = (mediate0_local[(ax0 + 174)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 458848)] = (mediate0_local[(ax0 + 206)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 458864)] = (mediate0_local[(ax0 + 238)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 524288)] = (mediate0_local[(ax0 + 16)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 524304)] = (mediate0_local[(ax0 + 48)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 524320)] = (mediate0_local[(ax0 + 80)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 524336)] = (mediate0_local[(ax0 + 112)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 524352)] = (mediate0_local[(ax0 + 144)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 524368)] = (mediate0_local[(ax0 + 176)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 524384)] = (mediate0_local[(ax0 + 208)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 524400)] = (mediate0_local[(ax0 + 240)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 589824)] = (mediate0_local[(ax0 + 18)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 589840)] = (mediate0_local[(ax0 + 50)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 589856)] = (mediate0_local[(ax0 + 82)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 589872)] = (mediate0_local[(ax0 + 114)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 589888)] = (mediate0_local[(ax0 + 146)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 589904)] = (mediate0_local[(ax0 + 178)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 589920)] = (mediate0_local[(ax0 + 210)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 589936)] = (mediate0_local[(ax0 + 242)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 655360)] = (mediate0_local[(ax0 + 20)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 655376)] = (mediate0_local[(ax0 + 52)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 655392)] = (mediate0_local[(ax0 + 84)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 655408)] = (mediate0_local[(ax0 + 116)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 655424)] = (mediate0_local[(ax0 + 148)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 655440)] = (mediate0_local[(ax0 + 180)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 655456)] = (mediate0_local[(ax0 + 212)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 655472)] = (mediate0_local[(ax0 + 244)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 720896)] = (mediate0_local[(ax0 + 22)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 720912)] = (mediate0_local[(ax0 + 54)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 720928)] = (mediate0_local[(ax0 + 86)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 720944)] = (mediate0_local[(ax0 + 118)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 720960)] = (mediate0_local[(ax0 + 150)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 720976)] = (mediate0_local[(ax0 + 182)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 720992)] = (mediate0_local[(ax0 + 214)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 721008)] = (mediate0_local[(ax0 + 246)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 786432)] = (mediate0_local[(ax0 + 24)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 786448)] = (mediate0_local[(ax0 + 56)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 786464)] = (mediate0_local[(ax0 + 88)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 786480)] = (mediate0_local[(ax0 + 120)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 786496)] = (mediate0_local[(ax0 + 152)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 786512)] = (mediate0_local[(ax0 + 184)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 786528)] = (mediate0_local[(ax0 + 216)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 786544)] = (mediate0_local[(ax0 + 248)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 851968)] = (mediate0_local[(ax0 + 26)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 851984)] = (mediate0_local[(ax0 + 58)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 852000)] = (mediate0_local[(ax0 + 90)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 852016)] = (mediate0_local[(ax0 + 122)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 852032)] = (mediate0_local[(ax0 + 154)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 852048)] = (mediate0_local[(ax0 + 186)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 852064)] = (mediate0_local[(ax0 + 218)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 852080)] = (mediate0_local[(ax0 + 250)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 917504)] = (mediate0_local[(ax0 + 28)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 917520)] = (mediate0_local[(ax0 + 60)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 917536)] = (mediate0_local[(ax0 + 92)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 917552)] = (mediate0_local[(ax0 + 124)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 917568)] = (mediate0_local[(ax0 + 156)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 917584)] = (mediate0_local[(ax0 + 188)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 917600)] = (mediate0_local[(ax0 + 220)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 917616)] = (mediate0_local[(ax0 + 252)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 983040)] = (mediate0_local[(ax0 + 30)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 983056)] = (mediate0_local[(ax0 + 62)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 983072)] = (mediate0_local[(ax0 + 94)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 983088)] = (mediate0_local[(ax0 + 126)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 983104)] = (mediate0_local[(ax0 + 158)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 983120)] = (mediate0_local[(ax0 + 190)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 983136)] = (mediate0_local[(ax0 + 222)] * __float2half_rn(8.839779e-02f));\n    output0[(((((((((int)blockIdx.x) >> 5) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + ((((int)blockIdx.x) & 31) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 983152)] = (mediate0_local[(ax0 + 254)] * __float2half_rn(8.839779e-02f));\n  }\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      32768,
      1,
      1
    ],
    "latency": 31.569305419921875,
    "name": "Group7",
    "gain": 6.475739479064941
  },
  {
    "nodes": [
      11,
      12
    ],
    "node_names": [
      "max_11",
      "subtract_exp_12"
    ],
    "group_id": 8,
    "input_desc": [
      [
        "max_11",
        11,
        0
      ],
      [
        "subtract_exp_12",
        12,
        0
      ]
    ],
    "output_desc": [
      [
        "subtract_exp_12",
        12,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group8(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output0) {\n  \n  half mediate0_local[1];\n  __shared__ half input0_shared[8192];\n  mediate0_local[0] = __float2half_rn(-6.550400e+04f);\n  for (int k3_outer = 0; k3_outer < 64; ++k3_outer) {\n    __syncthreads();\n    *(uint4*)(input0_shared + (((int)threadIdx.x) * 8)) = *(uint4*)(input0 + ((((((((int)blockIdx.x) >> 18) * 33554432) + (((((int)blockIdx.x) & 262143) >> 12) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + (k3_outer * 64)) + ((((int)threadIdx.x) & 7) * 8)));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 1024)) = *(uint4*)(input0 + (((((((((int)blockIdx.x) >> 18) * 33554432) + (((((int)blockIdx.x) & 262143) >> 12) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + (k3_outer * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 65536));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 2048)) = *(uint4*)(input0 + (((((((((int)blockIdx.x) >> 18) * 33554432) + (((((int)blockIdx.x) & 262143) >> 12) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + (k3_outer * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 131072));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 3072)) = *(uint4*)(input0 + (((((((((int)blockIdx.x) >> 18) * 33554432) + (((((int)blockIdx.x) & 262143) >> 12) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + (k3_outer * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 196608));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 4096)) = *(uint4*)(input0 + (((((((((int)blockIdx.x) >> 18) * 33554432) + (((((int)blockIdx.x) & 262143) >> 12) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + (k3_outer * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 16777216));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 5120)) = *(uint4*)(input0 + (((((((((int)blockIdx.x) >> 18) * 33554432) + (((((int)blockIdx.x) & 262143) >> 12) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + (k3_outer * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 16842752));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 6144)) = *(uint4*)(input0 + (((((((((int)blockIdx.x) >> 18) * 33554432) + (((((int)blockIdx.x) & 262143) >> 12) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + (k3_outer * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 16908288));\n    *(uint4*)(input0_shared + ((((int)threadIdx.x) * 8) + 7168)) = *(uint4*)(input0 + (((((((((int)blockIdx.x) >> 18) * 33554432) + (((((int)blockIdx.x) & 262143) >> 12) * 262144)) + ((((int)threadIdx.x) >> 3) * 4096)) + (k3_outer * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 16973824));\n    __syncthreads();\n    for (int k3_inner = 0; k3_inner < 64; ++k3_inner) {\n      mediate0_local[0] = max(mediate0_local[0], input0_shared[((((int)threadIdx.x) * 64) + k3_inner)]);\n    }\n  }\n  output0[((((((((int)blockIdx.x) >> 18) * 33554432) + ((((int)threadIdx.x) >> 6) * 16777216)) + (((((int)blockIdx.x) & 262143) >> 12) * 262144)) + ((((int)threadIdx.x) & 63) * 4096)) + (((int)blockIdx.x) & 4095))] = hexp((input1[((((((((int)blockIdx.x) >> 18) * 33554432) + ((((int)threadIdx.x) >> 6) * 16777216)) + (((((int)blockIdx.x) & 262143) >> 12) * 262144)) + ((((int)threadIdx.x) & 63) * 4096)) + (((int)blockIdx.x) & 4095))] - mediate0_local[0]));\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      2048,
      1,
      1
    ],
    "latency": 2.945280075073242,
    "name": "Group8",
    "gain": 5.92596435546875
  },
  {
    "nodes": [
      13,
      14
    ],
    "node_names": [
      "sum_13",
      "divide_cast_cast_reshape_14"
    ],
    "group_id": 9,
    "input_desc": [
      [
        "sum_13",
        13,
        0
      ],
      [
        "divide_cast_cast_reshape_14",
        14,
        0
      ]
    ],
    "output_desc": [
      [
        "divide_cast_cast_reshape_14",
        14,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group9(half* __restrict__ input0, half* __restrict__ input1, half* __restrict__ output0) {\n  \n  half mediate0_local[1];\n  __shared__ half input0_shared[64];\n  mediate0_local[0] = __float2half_rn(0.000000e+00f);\n  for (int k3_outer = 0; k3_outer < 64; ++k3_outer) {\n    __syncthreads();\n    if (((int)threadIdx.x) < 8) {\n      *(uint4*)(input0_shared + (((int)threadIdx.x) * 8)) = *(uint4*)(input0 + ((((((int)blockIdx.x) >> 4) * 4096) + (k3_outer * 64)) + (((int)threadIdx.x) * 8)));\n    }\n    __syncthreads();\n    for (int k3_inner = 0; k3_inner < 64; ++k3_inner) {\n      mediate0_local[0] = (mediate0_local[0] + input0_shared[k3_inner]);\n    }\n  }\n  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {\n    output0[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + ax2_inner_inner_inner)] = ((half)((float)(input1[(((((int)blockIdx.x) * 256) + (((int)threadIdx.x) * 2)) + ax2_inner_inner_inner)] / mediate0_local[0])));\n  }\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      1024,
      1,
      1
    ],
    "latency": 0.1013759970664978,
    "name": "Group9",
    "gain": 8.807833969593048
  },
  {
    "nodes": [
      15
    ],
    "node_names": [
      "ladder_perfect_quant_linear_cast_15"
    ],
    "group_id": 10,
    "input_desc": [
      [
        "ladder_perfect_quant_linear_cast_15",
        15,
        0
      ],
      [
        "ladder_perfect_quant_linear_cast_15",
        15,
        1
      ]
    ],
    "output_desc": [
      [
        "ladder_perfect_quant_linear_cast_15",
        15,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group10(int8_t* __restrict__ p0, int8_t* __restrict__ p1, half* __restrict__ T_cast) {\n  \n  int T_perfect_quant_linear_local[128];\n  __shared__ signed char p0_shared[8192];\n  __shared__ signed char B_decode_shared[8192];\n  for (int i2_1_1_init = 0; i2_1_1_init < 2; ++i2_1_1_init) {\n    T_perfect_quant_linear_local[i2_1_1_init] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 64)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 4)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 68)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 8)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 72)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 12)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 76)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 16)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 80)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 20)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 84)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 24)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 88)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 28)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 92)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 32)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 96)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 36)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 100)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 40)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 104)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 44)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 108)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 48)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 112)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 52)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 116)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 56)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 120)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 60)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 124)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 2)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 66)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 6)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 70)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 10)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 74)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 14)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 78)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 18)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 82)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 22)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 86)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 26)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 90)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 30)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 94)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 34)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 98)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 38)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 102)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 42)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 106)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 46)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 110)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 50)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 114)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 54)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 118)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 58)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 122)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 62)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 126)] = 0;\n  }\n  for (int k_0 = 0; k_0 < 128; ++k_0) {\n    __syncthreads();\n    *(int4*)(p0_shared + (((int)threadIdx.x) * 16)) = *(int4*)(p0 + (((((((((int)blockIdx.x) >> 5) * 4194304) + ((((int)threadIdx.x) >> 4) * 131072)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 15) >> 3) * 512)) + (((((int)blockIdx.x) & 15) >> 2) * 128)) + ((((int)threadIdx.x) & 7) * 16)));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 2048)) = *(int4*)(p0 + ((((((((((int)blockIdx.x) >> 5) * 4194304) + ((((int)threadIdx.x) >> 4) * 131072)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 15) >> 3) * 512)) + (((((int)blockIdx.x) & 15) >> 2) * 128)) + ((((int)threadIdx.x) & 7) * 16)) + 1048576));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 4096)) = *(int4*)(p0 + ((((((((((int)blockIdx.x) >> 5) * 4194304) + ((((int)threadIdx.x) >> 4) * 131072)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 15) >> 3) * 512)) + (((((int)blockIdx.x) & 15) >> 2) * 128)) + ((((int)threadIdx.x) & 7) * 16)) + 2097152));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 6144)) = *(int4*)(p0 + ((((((((((int)blockIdx.x) >> 5) * 4194304) + ((((int)threadIdx.x) >> 4) * 131072)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 15) >> 3) * 512)) + (((((int)blockIdx.x) & 15) >> 2) * 128)) + ((((int)threadIdx.x) & 7) * 16)) + 3145728));\n    for (int ax0_ax1_ax2_ax3_fused_1 = 0; ax0_ax1_ax2_ax3_fused_1 < 16; ++ax0_ax1_ax2_ax3_fused_1) {\n      B_decode_shared[((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1)] = ((p1[(((((((((((int)blockIdx.x) & 31) >> 4) * 524288) + ((((int)threadIdx.x) >> 4) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 7) * 2)) + (ax0_ax1_ax2_ax3_fused_1 >> 3))] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_1 = 0; ax0_ax1_ax2_ax3_fused_1_1 < 16; ++ax0_ax1_ax2_ax3_fused_1_1) {\n      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_1) + 2048)] = ((p1[((((((((((((int)blockIdx.x) & 31) >> 4) * 524288) + ((((int)threadIdx.x) >> 4) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 7) * 2)) + (ax0_ax1_ax2_ax3_fused_1_1 >> 3)) + 131072)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_1 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_2 = 0; ax0_ax1_ax2_ax3_fused_1_2 < 16; ++ax0_ax1_ax2_ax3_fused_1_2) {\n      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_2) + 4096)] = ((p1[((((((((((((int)blockIdx.x) & 31) >> 4) * 524288) + ((((int)threadIdx.x) >> 4) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 7) * 2)) + (ax0_ax1_ax2_ax3_fused_1_2 >> 3)) + 262144)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_2 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_3 = 0; ax0_ax1_ax2_ax3_fused_1_3 < 16; ++ax0_ax1_ax2_ax3_fused_1_3) {\n      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_3) + 6144)] = ((p1[((((((((((((int)blockIdx.x) & 31) >> 4) * 524288) + ((((int)threadIdx.x) >> 4) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 7) * 2)) + (ax0_ax1_ax2_ax3_fused_1_3 >> 3)) + 393216)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_3 & 7))) & (signed char)1);\n    }\n    __syncthreads();\n    for (int k_1 = 0; k_1 < 2; ++k_1) {\n      for (int kk_1 = 0; kk_1 < 32; ++kk_1) {\n        for (int i2_1_1 = 0; i2_1_1 < 2; ++i2_1_1) {\n          T_perfect_quant_linear_local[i2_1_1] = (T_perfect_quant_linear_local[i2_1_1] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 64)] = (T_perfect_quant_linear_local[(i2_1_1 + 64)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 4)] = (T_perfect_quant_linear_local[(i2_1_1 + 4)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 68)] = (T_perfect_quant_linear_local[(i2_1_1 + 68)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 8)] = (T_perfect_quant_linear_local[(i2_1_1 + 8)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 72)] = (T_perfect_quant_linear_local[(i2_1_1 + 72)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 12)] = (T_perfect_quant_linear_local[(i2_1_1 + 12)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 76)] = (T_perfect_quant_linear_local[(i2_1_1 + 76)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 16)] = (T_perfect_quant_linear_local[(i2_1_1 + 16)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 80)] = (T_perfect_quant_linear_local[(i2_1_1 + 80)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 20)] = (T_perfect_quant_linear_local[(i2_1_1 + 20)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 84)] = (T_perfect_quant_linear_local[(i2_1_1 + 84)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 24)] = (T_perfect_quant_linear_local[(i2_1_1 + 24)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 88)] = (T_perfect_quant_linear_local[(i2_1_1 + 88)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 28)] = (T_perfect_quant_linear_local[(i2_1_1 + 28)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 92)] = (T_perfect_quant_linear_local[(i2_1_1 + 92)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 32)] = (T_perfect_quant_linear_local[(i2_1_1 + 32)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 96)] = (T_perfect_quant_linear_local[(i2_1_1 + 96)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 36)] = (T_perfect_quant_linear_local[(i2_1_1 + 36)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 100)] = (T_perfect_quant_linear_local[(i2_1_1 + 100)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 40)] = (T_perfect_quant_linear_local[(i2_1_1 + 40)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 104)] = (T_perfect_quant_linear_local[(i2_1_1 + 104)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 44)] = (T_perfect_quant_linear_local[(i2_1_1 + 44)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 108)] = (T_perfect_quant_linear_local[(i2_1_1 + 108)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 48)] = (T_perfect_quant_linear_local[(i2_1_1 + 48)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 112)] = (T_perfect_quant_linear_local[(i2_1_1 + 112)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 52)] = (T_perfect_quant_linear_local[(i2_1_1 + 52)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 116)] = (T_perfect_quant_linear_local[(i2_1_1 + 116)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 56)] = (T_perfect_quant_linear_local[(i2_1_1 + 56)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 120)] = (T_perfect_quant_linear_local[(i2_1_1 + 120)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 60)] = (T_perfect_quant_linear_local[(i2_1_1 + 60)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7680)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 124)] = (T_perfect_quant_linear_local[(i2_1_1 + 124)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7680)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 2)] = (T_perfect_quant_linear_local[(i2_1_1 + 2)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 66)] = (T_perfect_quant_linear_local[(i2_1_1 + 66)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 6)] = (T_perfect_quant_linear_local[(i2_1_1 + 6)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 70)] = (T_perfect_quant_linear_local[(i2_1_1 + 70)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 10)] = (T_perfect_quant_linear_local[(i2_1_1 + 10)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 74)] = (T_perfect_quant_linear_local[(i2_1_1 + 74)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 14)] = (T_perfect_quant_linear_local[(i2_1_1 + 14)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 78)] = (T_perfect_quant_linear_local[(i2_1_1 + 78)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 18)] = (T_perfect_quant_linear_local[(i2_1_1 + 18)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 82)] = (T_perfect_quant_linear_local[(i2_1_1 + 82)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 22)] = (T_perfect_quant_linear_local[(i2_1_1 + 22)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 86)] = (T_perfect_quant_linear_local[(i2_1_1 + 86)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 26)] = (T_perfect_quant_linear_local[(i2_1_1 + 26)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 90)] = (T_perfect_quant_linear_local[(i2_1_1 + 90)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 30)] = (T_perfect_quant_linear_local[(i2_1_1 + 30)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 94)] = (T_perfect_quant_linear_local[(i2_1_1 + 94)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 34)] = (T_perfect_quant_linear_local[(i2_1_1 + 34)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 98)] = (T_perfect_quant_linear_local[(i2_1_1 + 98)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 38)] = (T_perfect_quant_linear_local[(i2_1_1 + 38)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 102)] = (T_perfect_quant_linear_local[(i2_1_1 + 102)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 42)] = (T_perfect_quant_linear_local[(i2_1_1 + 42)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 106)] = (T_perfect_quant_linear_local[(i2_1_1 + 106)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 46)] = (T_perfect_quant_linear_local[(i2_1_1 + 46)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 110)] = (T_perfect_quant_linear_local[(i2_1_1 + 110)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 50)] = (T_perfect_quant_linear_local[(i2_1_1 + 50)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 114)] = (T_perfect_quant_linear_local[(i2_1_1 + 114)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 54)] = (T_perfect_quant_linear_local[(i2_1_1 + 54)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 118)] = (T_perfect_quant_linear_local[(i2_1_1 + 118)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 58)] = (T_perfect_quant_linear_local[(i2_1_1 + 58)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 122)] = (T_perfect_quant_linear_local[(i2_1_1 + 122)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 62)] = (T_perfect_quant_linear_local[(i2_1_1 + 62)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7680)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 126)] = (T_perfect_quant_linear_local[(i2_1_1 + 126)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((((((((int)threadIdx.x) & 7) >> 2) * 256) + (k_1 * 128)) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 7680)])));\n        }\n      }\n    }\n  }\n  for (int ax0 = 0; ax0 < 2; ++ax0) {\n    T_cast[(((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3))] = ((half)T_perfect_quant_linear_local[ax0]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 32)] = ((half)T_perfect_quant_linear_local[(ax0 + 64)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 512)] = ((half)T_perfect_quant_linear_local[(ax0 + 4)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 544)] = ((half)T_perfect_quant_linear_local[(ax0 + 68)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1024)] = ((half)T_perfect_quant_linear_local[(ax0 + 8)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1056)] = ((half)T_perfect_quant_linear_local[(ax0 + 72)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1536)] = ((half)T_perfect_quant_linear_local[(ax0 + 12)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1568)] = ((half)T_perfect_quant_linear_local[(ax0 + 76)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2048)] = ((half)T_perfect_quant_linear_local[(ax0 + 16)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2080)] = ((half)T_perfect_quant_linear_local[(ax0 + 80)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2560)] = ((half)T_perfect_quant_linear_local[(ax0 + 20)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2592)] = ((half)T_perfect_quant_linear_local[(ax0 + 84)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 3072)] = ((half)T_perfect_quant_linear_local[(ax0 + 24)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 3104)] = ((half)T_perfect_quant_linear_local[(ax0 + 88)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 3584)] = ((half)T_perfect_quant_linear_local[(ax0 + 28)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 3616)] = ((half)T_perfect_quant_linear_local[(ax0 + 92)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 4096)] = ((half)T_perfect_quant_linear_local[(ax0 + 32)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 4128)] = ((half)T_perfect_quant_linear_local[(ax0 + 96)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 4608)] = ((half)T_perfect_quant_linear_local[(ax0 + 36)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 4640)] = ((half)T_perfect_quant_linear_local[(ax0 + 100)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 5120)] = ((half)T_perfect_quant_linear_local[(ax0 + 40)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 5152)] = ((half)T_perfect_quant_linear_local[(ax0 + 104)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 5632)] = ((half)T_perfect_quant_linear_local[(ax0 + 44)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 5664)] = ((half)T_perfect_quant_linear_local[(ax0 + 108)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 6144)] = ((half)T_perfect_quant_linear_local[(ax0 + 48)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 6176)] = ((half)T_perfect_quant_linear_local[(ax0 + 112)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 6656)] = ((half)T_perfect_quant_linear_local[(ax0 + 52)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 6688)] = ((half)T_perfect_quant_linear_local[(ax0 + 116)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 7168)] = ((half)T_perfect_quant_linear_local[(ax0 + 56)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 7200)] = ((half)T_perfect_quant_linear_local[(ax0 + 120)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 7680)] = ((half)T_perfect_quant_linear_local[(ax0 + 60)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 7712)] = ((half)T_perfect_quant_linear_local[(ax0 + 124)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 262144)] = ((half)T_perfect_quant_linear_local[(ax0 + 2)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 262176)] = ((half)T_perfect_quant_linear_local[(ax0 + 66)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 262656)] = ((half)T_perfect_quant_linear_local[(ax0 + 6)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 262688)] = ((half)T_perfect_quant_linear_local[(ax0 + 70)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 263168)] = ((half)T_perfect_quant_linear_local[(ax0 + 10)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 263200)] = ((half)T_perfect_quant_linear_local[(ax0 + 74)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 263680)] = ((half)T_perfect_quant_linear_local[(ax0 + 14)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 263712)] = ((half)T_perfect_quant_linear_local[(ax0 + 78)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 264192)] = ((half)T_perfect_quant_linear_local[(ax0 + 18)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 264224)] = ((half)T_perfect_quant_linear_local[(ax0 + 82)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 264704)] = ((half)T_perfect_quant_linear_local[(ax0 + 22)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 264736)] = ((half)T_perfect_quant_linear_local[(ax0 + 86)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 265216)] = ((half)T_perfect_quant_linear_local[(ax0 + 26)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 265248)] = ((half)T_perfect_quant_linear_local[(ax0 + 90)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 265728)] = ((half)T_perfect_quant_linear_local[(ax0 + 30)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 265760)] = ((half)T_perfect_quant_linear_local[(ax0 + 94)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 266240)] = ((half)T_perfect_quant_linear_local[(ax0 + 34)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 266272)] = ((half)T_perfect_quant_linear_local[(ax0 + 98)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 266752)] = ((half)T_perfect_quant_linear_local[(ax0 + 38)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 266784)] = ((half)T_perfect_quant_linear_local[(ax0 + 102)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 267264)] = ((half)T_perfect_quant_linear_local[(ax0 + 42)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 267296)] = ((half)T_perfect_quant_linear_local[(ax0 + 106)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 267776)] = ((half)T_perfect_quant_linear_local[(ax0 + 46)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 267808)] = ((half)T_perfect_quant_linear_local[(ax0 + 110)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 268288)] = ((half)T_perfect_quant_linear_local[(ax0 + 50)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 268320)] = ((half)T_perfect_quant_linear_local[(ax0 + 114)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 268800)] = ((half)T_perfect_quant_linear_local[(ax0 + 54)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 268832)] = ((half)T_perfect_quant_linear_local[(ax0 + 118)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 269312)] = ((half)T_perfect_quant_linear_local[(ax0 + 58)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 269344)] = ((half)T_perfect_quant_linear_local[(ax0 + 122)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 269824)] = ((half)T_perfect_quant_linear_local[(ax0 + 62)]);\n    T_cast[((((((((((((int)blockIdx.x) >> 5) * 524288) + ((((int)threadIdx.x) >> 3) * 16384)) + (((((int)blockIdx.x) & 31) >> 4) * 8192)) + (((((int)threadIdx.x) & 7) >> 2) * 256)) + (((((int)blockIdx.x) & 15) >> 2) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 269856)] = ((half)T_perfect_quant_linear_local[(ax0 + 126)]);\n  }\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      256,
      1,
      1
    ],
    "latency": 7.783628940582275,
    "name": "Group10",
    "gain": 0
  },
  {
    "nodes": [
      16
    ],
    "node_names": [
      "reshape_reshape_transpose_expand_dims_broadcast_to_reshape_reshape_transpose_16"
    ],
    "group_id": 11,
    "input_desc": [
      [
        "reshape_reshape_transpose_expand_dims_broadcast_to_reshape_reshape_transpose_16",
        16,
        0
      ]
    ],
    "output_desc": [
      [
        "reshape_reshape_transpose_expand_dims_broadcast_to_reshape_reshape_transpose_16",
        16,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group11(half* __restrict__ p0, half* __restrict__ T_transpose_8) {\n  \n  T_transpose_8[((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63))] = p0[(((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2))];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 16384)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 4)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 32768)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 8)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 49152)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 12)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 524288)] = p0[(((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2))];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 540672)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 4)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 557056)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 8)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 573440)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 12)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1048576)] = p0[(((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2))];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1064960)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 4)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1081344)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 8)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1097728)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 12)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1572864)] = p0[(((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2))];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1589248)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 4)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1605632)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 8)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1622016)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 12)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2097152)] = p0[(((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2))];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2113536)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 4)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2129920)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 8)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2146304)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 12)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2621440)] = p0[(((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2))];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2637824)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 4)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2654208)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 8)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2670592)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 12)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3145728)] = p0[(((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2))];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3162112)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 4)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3178496)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 8)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3194880)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 12)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3670016)] = p0[(((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2))];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3686400)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 4)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3702784)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 8)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3719168)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 12)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 4096)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 1)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 20480)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 5)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 36864)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 9)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 53248)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 13)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 528384)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 1)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 544768)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 5)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 561152)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 9)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 577536)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 13)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1052672)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 1)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1069056)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 5)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1085440)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 9)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1101824)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 13)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1576960)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 1)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1593344)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 5)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1609728)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 9)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 1626112)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 13)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2101248)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 1)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2117632)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 5)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2134016)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 9)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2150400)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 13)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2625536)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 1)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2641920)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 5)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2658304)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 9)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 2674688)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 13)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3149824)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 1)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3166208)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 5)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3182592)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 9)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3198976)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 13)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3674112)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 1)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3690496)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 5)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3706880)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 9)];\n  T_transpose_8[(((((((((int)blockIdx.x) >> 9) * 4194304) + (((((int)blockIdx.x) & 511) >> 6) * 65536)) + ((((int)threadIdx.x) >> 6) * 8192)) + ((((int)blockIdx.x) & 63) * 64)) + (((int)threadIdx.x) & 63)) + 3723264)] = p0[((((((((int)blockIdx.x) & 63) * 65536) + ((((int)threadIdx.x) & 63) * 1024)) + ((((int)blockIdx.x) >> 6) * 16)) + ((((int)threadIdx.x) >> 6) * 2)) + 13)];\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      4096,
      1,
      1
    ],
    "latency": 0.11647733300924301,
    "name": "Group11",
    "gain": 0
  },
  {
    "nodes": [
      17
    ],
    "node_names": [
      "nn_batch_matmul_17"
    ],
    "group_id": 12,
    "input_desc": [
      [
        "nn_batch_matmul_17",
        17,
        0
      ],
      [
        "nn_batch_matmul_17",
        17,
        1
      ]
    ],
    "output_desc": [
      [
        "nn_batch_matmul_17",
        17,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group12(half* __restrict__ p0, half* __restrict__ p1, half* __restrict__ T_batch_matmul_NT) {\n  \n  half T_batch_matmul_NT_local[256];\n  __shared__ half p0_shared[16384];\n  __shared__ half p1_shared[8192];\n  for (int j_1_1_init = 0; j_1_1_init < 2; ++j_1_1_init) {\n    T_batch_matmul_NT_local[j_1_1_init] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 32)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 64)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 96)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 128)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 160)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 192)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 224)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 2)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 34)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 66)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 98)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 130)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 162)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 194)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 226)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 4)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 36)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 68)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 100)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 132)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 164)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 196)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 228)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 6)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 38)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 70)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 102)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 134)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 166)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 198)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 230)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 8)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 40)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 72)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 104)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 136)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 168)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 200)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 232)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 10)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 42)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 74)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 106)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 138)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 170)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 202)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 234)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 12)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 44)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 76)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 108)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 140)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 172)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 204)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 236)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 14)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 46)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 78)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 110)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 142)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 174)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 206)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 238)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 16)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 48)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 80)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 112)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 144)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 176)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 208)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 240)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 18)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 50)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 82)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 114)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 146)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 178)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 210)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 242)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 20)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 52)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 84)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 116)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 148)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 180)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 212)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 244)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 22)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 54)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 86)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 118)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 150)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 182)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 214)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 246)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 24)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 56)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 88)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 120)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 152)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 184)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 216)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 248)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 26)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 58)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 90)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 122)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 154)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 186)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 218)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 250)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 28)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 60)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 92)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 124)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 156)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 188)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 220)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 252)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 30)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 62)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 94)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 126)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 158)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 190)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 222)] = __float2half_rn(0.000000e+00f);\n    T_batch_matmul_NT_local[(j_1_1_init + 254)] = __float2half_rn(0.000000e+00f);\n  }\n  for (int k_0 = 0; k_0 < 64; ++k_0) {\n    __syncthreads();\n    *(uint4*)(p0_shared + (((int)threadIdx.x) * 8)) = *(uint4*)(p0 + ((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 1024)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 65536));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 2048)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 131072));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 3072)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 196608));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 4096)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 262144));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 5120)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 327680));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 6144)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 393216));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 7168)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 458752));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 8192)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 524288));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 9216)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 589824));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 10240)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 655360));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 11264)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 720896));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 12288)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 786432));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 13312)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 851968));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 14336)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 917504));\n    *(uint4*)(p0_shared + ((((int)threadIdx.x) * 8) + 15360)) = *(uint4*)(p0 + (((((((int)blockIdx.x) * 1048576) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 983040));\n    *(uint4*)(p1_shared + (((int)threadIdx.x) * 8)) = *(uint4*)(p1 + (((((((int)blockIdx.x) >> 4) * 524288) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)));\n    *(uint4*)(p1_shared + ((((int)threadIdx.x) * 8) + 1024)) = *(uint4*)(p1 + ((((((((int)blockIdx.x) >> 4) * 524288) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 65536));\n    *(uint4*)(p1_shared + ((((int)threadIdx.x) * 8) + 2048)) = *(uint4*)(p1 + ((((((((int)blockIdx.x) >> 4) * 524288) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 131072));\n    *(uint4*)(p1_shared + ((((int)threadIdx.x) * 8) + 3072)) = *(uint4*)(p1 + ((((((((int)blockIdx.x) >> 4) * 524288) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 196608));\n    *(uint4*)(p1_shared + ((((int)threadIdx.x) * 8) + 4096)) = *(uint4*)(p1 + ((((((((int)blockIdx.x) >> 4) * 524288) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 262144));\n    *(uint4*)(p1_shared + ((((int)threadIdx.x) * 8) + 5120)) = *(uint4*)(p1 + ((((((((int)blockIdx.x) >> 4) * 524288) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 327680));\n    *(uint4*)(p1_shared + ((((int)threadIdx.x) * 8) + 6144)) = *(uint4*)(p1 + ((((((((int)blockIdx.x) >> 4) * 524288) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 393216));\n    *(uint4*)(p1_shared + ((((int)threadIdx.x) * 8) + 7168)) = *(uint4*)(p1 + ((((((((int)blockIdx.x) >> 4) * 524288) + ((((int)threadIdx.x) >> 3) * 4096)) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + 458752));\n    __syncthreads();\n    for (int k_1 = 0; k_1 < 64; ++k_1) {\n      for (int j_1_1 = 0; j_1_1 < 2; ++j_1_1) {\n        T_batch_matmul_NT_local[j_1_1] = (T_batch_matmul_NT_local[j_1_1] + (p0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 32)] = (T_batch_matmul_NT_local[(j_1_1 + 32)] + (p0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 64)] = (T_batch_matmul_NT_local[(j_1_1 + 64)] + (p0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 96)] = (T_batch_matmul_NT_local[(j_1_1 + 96)] + (p0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 128)] = (T_batch_matmul_NT_local[(j_1_1 + 128)] + (p0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 160)] = (T_batch_matmul_NT_local[(j_1_1 + 160)] + (p0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 192)] = (T_batch_matmul_NT_local[(j_1_1 + 192)] + (p0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 224)] = (T_batch_matmul_NT_local[(j_1_1 + 224)] + (p0_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 2)] = (T_batch_matmul_NT_local[(j_1_1 + 2)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 34)] = (T_batch_matmul_NT_local[(j_1_1 + 34)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 66)] = (T_batch_matmul_NT_local[(j_1_1 + 66)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 98)] = (T_batch_matmul_NT_local[(j_1_1 + 98)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 130)] = (T_batch_matmul_NT_local[(j_1_1 + 130)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 162)] = (T_batch_matmul_NT_local[(j_1_1 + 162)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 194)] = (T_batch_matmul_NT_local[(j_1_1 + 194)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 226)] = (T_batch_matmul_NT_local[(j_1_1 + 226)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 4)] = (T_batch_matmul_NT_local[(j_1_1 + 4)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 36)] = (T_batch_matmul_NT_local[(j_1_1 + 36)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 68)] = (T_batch_matmul_NT_local[(j_1_1 + 68)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 100)] = (T_batch_matmul_NT_local[(j_1_1 + 100)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 132)] = (T_batch_matmul_NT_local[(j_1_1 + 132)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 164)] = (T_batch_matmul_NT_local[(j_1_1 + 164)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 196)] = (T_batch_matmul_NT_local[(j_1_1 + 196)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 228)] = (T_batch_matmul_NT_local[(j_1_1 + 228)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 6)] = (T_batch_matmul_NT_local[(j_1_1 + 6)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 38)] = (T_batch_matmul_NT_local[(j_1_1 + 38)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 70)] = (T_batch_matmul_NT_local[(j_1_1 + 70)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 102)] = (T_batch_matmul_NT_local[(j_1_1 + 102)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 134)] = (T_batch_matmul_NT_local[(j_1_1 + 134)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 166)] = (T_batch_matmul_NT_local[(j_1_1 + 166)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 198)] = (T_batch_matmul_NT_local[(j_1_1 + 198)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 230)] = (T_batch_matmul_NT_local[(j_1_1 + 230)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 8)] = (T_batch_matmul_NT_local[(j_1_1 + 8)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 40)] = (T_batch_matmul_NT_local[(j_1_1 + 40)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 72)] = (T_batch_matmul_NT_local[(j_1_1 + 72)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 104)] = (T_batch_matmul_NT_local[(j_1_1 + 104)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 136)] = (T_batch_matmul_NT_local[(j_1_1 + 136)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 168)] = (T_batch_matmul_NT_local[(j_1_1 + 168)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 200)] = (T_batch_matmul_NT_local[(j_1_1 + 200)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 232)] = (T_batch_matmul_NT_local[(j_1_1 + 232)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 10)] = (T_batch_matmul_NT_local[(j_1_1 + 10)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 42)] = (T_batch_matmul_NT_local[(j_1_1 + 42)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 74)] = (T_batch_matmul_NT_local[(j_1_1 + 74)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 106)] = (T_batch_matmul_NT_local[(j_1_1 + 106)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 138)] = (T_batch_matmul_NT_local[(j_1_1 + 138)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 170)] = (T_batch_matmul_NT_local[(j_1_1 + 170)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 202)] = (T_batch_matmul_NT_local[(j_1_1 + 202)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 234)] = (T_batch_matmul_NT_local[(j_1_1 + 234)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 12)] = (T_batch_matmul_NT_local[(j_1_1 + 12)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 44)] = (T_batch_matmul_NT_local[(j_1_1 + 44)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 76)] = (T_batch_matmul_NT_local[(j_1_1 + 76)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 108)] = (T_batch_matmul_NT_local[(j_1_1 + 108)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 140)] = (T_batch_matmul_NT_local[(j_1_1 + 140)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 172)] = (T_batch_matmul_NT_local[(j_1_1 + 172)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 204)] = (T_batch_matmul_NT_local[(j_1_1 + 204)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 236)] = (T_batch_matmul_NT_local[(j_1_1 + 236)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 14)] = (T_batch_matmul_NT_local[(j_1_1 + 14)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 46)] = (T_batch_matmul_NT_local[(j_1_1 + 46)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 78)] = (T_batch_matmul_NT_local[(j_1_1 + 78)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 110)] = (T_batch_matmul_NT_local[(j_1_1 + 110)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 142)] = (T_batch_matmul_NT_local[(j_1_1 + 142)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 174)] = (T_batch_matmul_NT_local[(j_1_1 + 174)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 206)] = (T_batch_matmul_NT_local[(j_1_1 + 206)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 238)] = (T_batch_matmul_NT_local[(j_1_1 + 238)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 7168)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 16)] = (T_batch_matmul_NT_local[(j_1_1 + 16)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 48)] = (T_batch_matmul_NT_local[(j_1_1 + 48)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 80)] = (T_batch_matmul_NT_local[(j_1_1 + 80)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 112)] = (T_batch_matmul_NT_local[(j_1_1 + 112)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 144)] = (T_batch_matmul_NT_local[(j_1_1 + 144)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 176)] = (T_batch_matmul_NT_local[(j_1_1 + 176)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 208)] = (T_batch_matmul_NT_local[(j_1_1 + 208)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 240)] = (T_batch_matmul_NT_local[(j_1_1 + 240)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 8192)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 18)] = (T_batch_matmul_NT_local[(j_1_1 + 18)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 50)] = (T_batch_matmul_NT_local[(j_1_1 + 50)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 82)] = (T_batch_matmul_NT_local[(j_1_1 + 82)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 114)] = (T_batch_matmul_NT_local[(j_1_1 + 114)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 146)] = (T_batch_matmul_NT_local[(j_1_1 + 146)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 178)] = (T_batch_matmul_NT_local[(j_1_1 + 178)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 210)] = (T_batch_matmul_NT_local[(j_1_1 + 210)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 242)] = (T_batch_matmul_NT_local[(j_1_1 + 242)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 9216)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 20)] = (T_batch_matmul_NT_local[(j_1_1 + 20)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 52)] = (T_batch_matmul_NT_local[(j_1_1 + 52)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 84)] = (T_batch_matmul_NT_local[(j_1_1 + 84)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 116)] = (T_batch_matmul_NT_local[(j_1_1 + 116)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 148)] = (T_batch_matmul_NT_local[(j_1_1 + 148)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 180)] = (T_batch_matmul_NT_local[(j_1_1 + 180)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 212)] = (T_batch_matmul_NT_local[(j_1_1 + 212)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 244)] = (T_batch_matmul_NT_local[(j_1_1 + 244)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 10240)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 22)] = (T_batch_matmul_NT_local[(j_1_1 + 22)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 54)] = (T_batch_matmul_NT_local[(j_1_1 + 54)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 86)] = (T_batch_matmul_NT_local[(j_1_1 + 86)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 118)] = (T_batch_matmul_NT_local[(j_1_1 + 118)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 150)] = (T_batch_matmul_NT_local[(j_1_1 + 150)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 182)] = (T_batch_matmul_NT_local[(j_1_1 + 182)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 214)] = (T_batch_matmul_NT_local[(j_1_1 + 214)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 246)] = (T_batch_matmul_NT_local[(j_1_1 + 246)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 11264)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 24)] = (T_batch_matmul_NT_local[(j_1_1 + 24)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 56)] = (T_batch_matmul_NT_local[(j_1_1 + 56)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 88)] = (T_batch_matmul_NT_local[(j_1_1 + 88)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 120)] = (T_batch_matmul_NT_local[(j_1_1 + 120)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 152)] = (T_batch_matmul_NT_local[(j_1_1 + 152)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 184)] = (T_batch_matmul_NT_local[(j_1_1 + 184)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 216)] = (T_batch_matmul_NT_local[(j_1_1 + 216)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 248)] = (T_batch_matmul_NT_local[(j_1_1 + 248)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 12288)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 26)] = (T_batch_matmul_NT_local[(j_1_1 + 26)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 58)] = (T_batch_matmul_NT_local[(j_1_1 + 58)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 90)] = (T_batch_matmul_NT_local[(j_1_1 + 90)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 122)] = (T_batch_matmul_NT_local[(j_1_1 + 122)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 154)] = (T_batch_matmul_NT_local[(j_1_1 + 154)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 186)] = (T_batch_matmul_NT_local[(j_1_1 + 186)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 218)] = (T_batch_matmul_NT_local[(j_1_1 + 218)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 250)] = (T_batch_matmul_NT_local[(j_1_1 + 250)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 13312)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 28)] = (T_batch_matmul_NT_local[(j_1_1 + 28)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 60)] = (T_batch_matmul_NT_local[(j_1_1 + 60)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 92)] = (T_batch_matmul_NT_local[(j_1_1 + 92)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 124)] = (T_batch_matmul_NT_local[(j_1_1 + 124)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 156)] = (T_batch_matmul_NT_local[(j_1_1 + 156)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 188)] = (T_batch_matmul_NT_local[(j_1_1 + 188)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 220)] = (T_batch_matmul_NT_local[(j_1_1 + 220)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 252)] = (T_batch_matmul_NT_local[(j_1_1 + 252)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 14336)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n        T_batch_matmul_NT_local[(j_1_1 + 30)] = (T_batch_matmul_NT_local[(j_1_1 + 30)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * p1_shared[((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1)]));\n        T_batch_matmul_NT_local[(j_1_1 + 62)] = (T_batch_matmul_NT_local[(j_1_1 + 62)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 1024)]));\n        T_batch_matmul_NT_local[(j_1_1 + 94)] = (T_batch_matmul_NT_local[(j_1_1 + 94)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 2048)]));\n        T_batch_matmul_NT_local[(j_1_1 + 126)] = (T_batch_matmul_NT_local[(j_1_1 + 126)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 3072)]));\n        T_batch_matmul_NT_local[(j_1_1 + 158)] = (T_batch_matmul_NT_local[(j_1_1 + 158)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 4096)]));\n        T_batch_matmul_NT_local[(j_1_1 + 190)] = (T_batch_matmul_NT_local[(j_1_1 + 190)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 5120)]));\n        T_batch_matmul_NT_local[(j_1_1 + 222)] = (T_batch_matmul_NT_local[(j_1_1 + 222)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 6144)]));\n        T_batch_matmul_NT_local[(j_1_1 + 254)] = (T_batch_matmul_NT_local[(j_1_1 + 254)] + (p0_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 15360)] * p1_shared[(((((((int)threadIdx.x) & 7) * 128) + (j_1_1 * 64)) + k_1) + 7168)]));\n      }\n    }\n  }\n  for (int ax0 = 0; ax0 < 2; ++ax0) {\n    T_batch_matmul_NT[((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0)] = T_batch_matmul_NT_local[ax0];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 16)] = T_batch_matmul_NT_local[(ax0 + 32)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 32)] = T_batch_matmul_NT_local[(ax0 + 64)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 48)] = T_batch_matmul_NT_local[(ax0 + 96)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 64)] = T_batch_matmul_NT_local[(ax0 + 128)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 80)] = T_batch_matmul_NT_local[(ax0 + 160)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 96)] = T_batch_matmul_NT_local[(ax0 + 192)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 112)] = T_batch_matmul_NT_local[(ax0 + 224)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 2048)] = T_batch_matmul_NT_local[(ax0 + 2)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 2064)] = T_batch_matmul_NT_local[(ax0 + 34)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 2080)] = T_batch_matmul_NT_local[(ax0 + 66)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 2096)] = T_batch_matmul_NT_local[(ax0 + 98)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 2112)] = T_batch_matmul_NT_local[(ax0 + 130)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 2128)] = T_batch_matmul_NT_local[(ax0 + 162)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 2144)] = T_batch_matmul_NT_local[(ax0 + 194)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 2160)] = T_batch_matmul_NT_local[(ax0 + 226)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 4096)] = T_batch_matmul_NT_local[(ax0 + 4)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 4112)] = T_batch_matmul_NT_local[(ax0 + 36)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 4128)] = T_batch_matmul_NT_local[(ax0 + 68)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 4144)] = T_batch_matmul_NT_local[(ax0 + 100)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 4160)] = T_batch_matmul_NT_local[(ax0 + 132)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 4176)] = T_batch_matmul_NT_local[(ax0 + 164)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 4192)] = T_batch_matmul_NT_local[(ax0 + 196)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 4208)] = T_batch_matmul_NT_local[(ax0 + 228)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 6144)] = T_batch_matmul_NT_local[(ax0 + 6)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 6160)] = T_batch_matmul_NT_local[(ax0 + 38)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 6176)] = T_batch_matmul_NT_local[(ax0 + 70)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 6192)] = T_batch_matmul_NT_local[(ax0 + 102)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 6208)] = T_batch_matmul_NT_local[(ax0 + 134)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 6224)] = T_batch_matmul_NT_local[(ax0 + 166)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 6240)] = T_batch_matmul_NT_local[(ax0 + 198)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 6256)] = T_batch_matmul_NT_local[(ax0 + 230)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 8192)] = T_batch_matmul_NT_local[(ax0 + 8)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 8208)] = T_batch_matmul_NT_local[(ax0 + 40)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 8224)] = T_batch_matmul_NT_local[(ax0 + 72)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 8240)] = T_batch_matmul_NT_local[(ax0 + 104)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 8256)] = T_batch_matmul_NT_local[(ax0 + 136)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 8272)] = T_batch_matmul_NT_local[(ax0 + 168)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 8288)] = T_batch_matmul_NT_local[(ax0 + 200)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 8304)] = T_batch_matmul_NT_local[(ax0 + 232)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 10240)] = T_batch_matmul_NT_local[(ax0 + 10)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 10256)] = T_batch_matmul_NT_local[(ax0 + 42)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 10272)] = T_batch_matmul_NT_local[(ax0 + 74)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 10288)] = T_batch_matmul_NT_local[(ax0 + 106)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 10304)] = T_batch_matmul_NT_local[(ax0 + 138)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 10320)] = T_batch_matmul_NT_local[(ax0 + 170)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 10336)] = T_batch_matmul_NT_local[(ax0 + 202)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 10352)] = T_batch_matmul_NT_local[(ax0 + 234)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 12288)] = T_batch_matmul_NT_local[(ax0 + 12)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 12304)] = T_batch_matmul_NT_local[(ax0 + 44)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 12320)] = T_batch_matmul_NT_local[(ax0 + 76)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 12336)] = T_batch_matmul_NT_local[(ax0 + 108)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 12352)] = T_batch_matmul_NT_local[(ax0 + 140)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 12368)] = T_batch_matmul_NT_local[(ax0 + 172)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 12384)] = T_batch_matmul_NT_local[(ax0 + 204)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 12400)] = T_batch_matmul_NT_local[(ax0 + 236)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 14336)] = T_batch_matmul_NT_local[(ax0 + 14)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 14352)] = T_batch_matmul_NT_local[(ax0 + 46)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 14368)] = T_batch_matmul_NT_local[(ax0 + 78)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 14384)] = T_batch_matmul_NT_local[(ax0 + 110)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 14400)] = T_batch_matmul_NT_local[(ax0 + 142)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 14416)] = T_batch_matmul_NT_local[(ax0 + 174)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 14432)] = T_batch_matmul_NT_local[(ax0 + 206)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 14448)] = T_batch_matmul_NT_local[(ax0 + 238)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 16384)] = T_batch_matmul_NT_local[(ax0 + 16)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 16400)] = T_batch_matmul_NT_local[(ax0 + 48)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 16416)] = T_batch_matmul_NT_local[(ax0 + 80)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 16432)] = T_batch_matmul_NT_local[(ax0 + 112)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 16448)] = T_batch_matmul_NT_local[(ax0 + 144)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 16464)] = T_batch_matmul_NT_local[(ax0 + 176)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 16480)] = T_batch_matmul_NT_local[(ax0 + 208)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 16496)] = T_batch_matmul_NT_local[(ax0 + 240)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 18432)] = T_batch_matmul_NT_local[(ax0 + 18)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 18448)] = T_batch_matmul_NT_local[(ax0 + 50)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 18464)] = T_batch_matmul_NT_local[(ax0 + 82)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 18480)] = T_batch_matmul_NT_local[(ax0 + 114)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 18496)] = T_batch_matmul_NT_local[(ax0 + 146)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 18512)] = T_batch_matmul_NT_local[(ax0 + 178)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 18528)] = T_batch_matmul_NT_local[(ax0 + 210)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 18544)] = T_batch_matmul_NT_local[(ax0 + 242)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 20480)] = T_batch_matmul_NT_local[(ax0 + 20)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 20496)] = T_batch_matmul_NT_local[(ax0 + 52)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 20512)] = T_batch_matmul_NT_local[(ax0 + 84)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 20528)] = T_batch_matmul_NT_local[(ax0 + 116)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 20544)] = T_batch_matmul_NT_local[(ax0 + 148)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 20560)] = T_batch_matmul_NT_local[(ax0 + 180)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 20576)] = T_batch_matmul_NT_local[(ax0 + 212)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 20592)] = T_batch_matmul_NT_local[(ax0 + 244)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 22528)] = T_batch_matmul_NT_local[(ax0 + 22)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 22544)] = T_batch_matmul_NT_local[(ax0 + 54)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 22560)] = T_batch_matmul_NT_local[(ax0 + 86)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 22576)] = T_batch_matmul_NT_local[(ax0 + 118)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 22592)] = T_batch_matmul_NT_local[(ax0 + 150)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 22608)] = T_batch_matmul_NT_local[(ax0 + 182)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 22624)] = T_batch_matmul_NT_local[(ax0 + 214)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 22640)] = T_batch_matmul_NT_local[(ax0 + 246)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 24576)] = T_batch_matmul_NT_local[(ax0 + 24)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 24592)] = T_batch_matmul_NT_local[(ax0 + 56)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 24608)] = T_batch_matmul_NT_local[(ax0 + 88)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 24624)] = T_batch_matmul_NT_local[(ax0 + 120)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 24640)] = T_batch_matmul_NT_local[(ax0 + 152)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 24656)] = T_batch_matmul_NT_local[(ax0 + 184)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 24672)] = T_batch_matmul_NT_local[(ax0 + 216)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 24688)] = T_batch_matmul_NT_local[(ax0 + 248)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 26624)] = T_batch_matmul_NT_local[(ax0 + 26)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 26640)] = T_batch_matmul_NT_local[(ax0 + 58)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 26656)] = T_batch_matmul_NT_local[(ax0 + 90)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 26672)] = T_batch_matmul_NT_local[(ax0 + 122)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 26688)] = T_batch_matmul_NT_local[(ax0 + 154)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 26704)] = T_batch_matmul_NT_local[(ax0 + 186)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 26720)] = T_batch_matmul_NT_local[(ax0 + 218)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 26736)] = T_batch_matmul_NT_local[(ax0 + 250)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 28672)] = T_batch_matmul_NT_local[(ax0 + 28)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 28688)] = T_batch_matmul_NT_local[(ax0 + 60)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 28704)] = T_batch_matmul_NT_local[(ax0 + 92)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 28720)] = T_batch_matmul_NT_local[(ax0 + 124)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 28736)] = T_batch_matmul_NT_local[(ax0 + 156)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 28752)] = T_batch_matmul_NT_local[(ax0 + 188)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 28768)] = T_batch_matmul_NT_local[(ax0 + 220)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 28784)] = T_batch_matmul_NT_local[(ax0 + 252)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 30720)] = T_batch_matmul_NT_local[(ax0 + 30)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 30736)] = T_batch_matmul_NT_local[(ax0 + 62)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 30752)] = T_batch_matmul_NT_local[(ax0 + 94)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 30768)] = T_batch_matmul_NT_local[(ax0 + 126)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 30784)] = T_batch_matmul_NT_local[(ax0 + 158)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 30800)] = T_batch_matmul_NT_local[(ax0 + 190)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 30816)] = T_batch_matmul_NT_local[(ax0 + 222)];\n    T_batch_matmul_NT[(((((((int)blockIdx.x) * 32768) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + ax0) + 30832)] = T_batch_matmul_NT_local[(ax0 + 254)];\n  }\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      1024,
      1,
      1
    ],
    "latency": 32.72028350830078,
    "name": "Group12",
    "gain": 0
  },
  {
    "nodes": [
      18
    ],
    "node_names": [
      "reshape_transpose_reshape_reshape_cast_cast_reshape_18"
    ],
    "group_id": 13,
    "input_desc": [
      [
        "reshape_transpose_reshape_reshape_cast_cast_reshape_18",
        18,
        0
      ]
    ],
    "output_desc": [
      [
        "reshape_transpose_reshape_reshape_cast_cast_reshape_18",
        18,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group13(half* __restrict__ p0, int8_t* __restrict__ T_reshape_7) {\n  \n  T_reshape_7[(((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4))] = ((signed char)((float)p0[(((((((int)blockIdx.x) & 3) * 8388608) + ((((int)threadIdx.x) >> 5) * 2097152)) + ((((int)blockIdx.x) >> 2) * 128)) + ((((int)threadIdx.x) & 31) * 4))]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 128)] = ((signed char)((float)p0[(((((((((((int)blockIdx.x) & 63) * 16) + ((((int)threadIdx.x) >> 5) * 4)) + 1) & 63) * 524288) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 128) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4))]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 256)] = ((signed char)((float)p0[(((((((((((int)blockIdx.x) & 63) * 16) + ((((int)threadIdx.x) >> 5) * 4)) + 2) & 63) * 524288) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 256) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4))]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 384)] = ((signed char)((float)p0[(((((((((((int)blockIdx.x) & 63) * 16) + ((((int)threadIdx.x) >> 5) * 4)) + 3) & 63) * 524288) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 384) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4))]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 1)] = ((signed char)((float)p0[(((((((((int)blockIdx.x) & 3) * 8388608) + ((((int)threadIdx.x) >> 5) * 2097152)) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 1) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 1)]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 129)] = ((signed char)((float)p0[((((((((((((int)blockIdx.x) & 63) * 16) + ((((int)threadIdx.x) >> 5) * 4)) + 1) & 63) * 524288) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 129) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 1)]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 257)] = ((signed char)((float)p0[((((((((((((int)blockIdx.x) & 63) * 16) + ((((int)threadIdx.x) >> 5) * 4)) + 2) & 63) * 524288) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 257) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 1)]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 385)] = ((signed char)((float)p0[((((((((((((int)blockIdx.x) & 63) * 16) + ((((int)threadIdx.x) >> 5) * 4)) + 3) & 63) * 524288) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 385) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 1)]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 2)] = ((signed char)((float)p0[(((((((((int)blockIdx.x) & 3) * 8388608) + ((((int)threadIdx.x) >> 5) * 2097152)) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 2) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 2)]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 130)] = ((signed char)((float)p0[((((((((((((int)blockIdx.x) & 63) * 16) + ((((int)threadIdx.x) >> 5) * 4)) + 1) & 63) * 524288) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 130) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 2)]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 258)] = ((signed char)((float)p0[((((((((((((int)blockIdx.x) & 63) * 16) + ((((int)threadIdx.x) >> 5) * 4)) + 2) & 63) * 524288) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 258) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 2)]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 386)] = ((signed char)((float)p0[((((((((((((int)blockIdx.x) & 63) * 16) + ((((int)threadIdx.x) >> 5) * 4)) + 3) & 63) * 524288) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 386) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 2)]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 3)] = ((signed char)((float)p0[(((((((((int)blockIdx.x) & 3) * 8388608) + ((((int)threadIdx.x) >> 5) * 2097152)) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 3) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 3)]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 131)] = ((signed char)((float)p0[((((((((((((int)blockIdx.x) & 63) * 16) + ((((int)threadIdx.x) >> 5) * 4)) + 1) & 63) * 524288) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 131) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 3)]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 259)] = ((signed char)((float)p0[((((((((((((int)blockIdx.x) & 63) * 16) + ((((int)threadIdx.x) >> 5) * 4)) + 2) & 63) * 524288) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 259) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 3)]));\n  T_reshape_7[((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 387)] = ((signed char)((float)p0[((((((((((((int)blockIdx.x) & 63) * 16) + ((((int)threadIdx.x) >> 5) * 4)) + 3) & 63) * 524288) + ((((int)blockIdx.x) >> 6) * 2048)) + (((((((((int)blockIdx.x) & 63) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + ((((int)threadIdx.x) & 31) * 4)) + 387) >> 13) * 128)) + ((((int)threadIdx.x) & 31) * 4)) + 3)]));\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      16384,
      1,
      1
    ],
    "latency": 0.14827200770378113,
    "name": "Group13",
    "gain": 0
  },
  {
    "nodes": [
      19
    ],
    "node_names": [
      "ladder_perfect_quant_linear_cast_19"
    ],
    "group_id": 14,
    "input_desc": [
      [
        "ladder_perfect_quant_linear_cast_19",
        19,
        0
      ],
      [
        "ladder_perfect_quant_linear_cast_19",
        19,
        1
      ]
    ],
    "output_desc": [
      [
        "ladder_perfect_quant_linear_cast_19",
        19,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group2(int8_t* __restrict__ p0, int8_t* __restrict__ p1, half* __restrict__ T_cast) {\n  \n  int T_perfect_quant_linear_local[128];\n  __shared__ signed char p0_shared[8192];\n  __shared__ signed char B_decode_shared[8192];\n  for (int i2_1_1_init = 0; i2_1_1_init < 2; ++i2_1_1_init) {\n    T_perfect_quant_linear_local[i2_1_1_init] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 64)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 4)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 68)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 8)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 72)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 12)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 76)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 16)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 80)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 20)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 84)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 24)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 88)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 28)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 92)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 32)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 96)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 36)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 100)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 40)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 104)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 44)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 108)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 48)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 112)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 52)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 116)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 56)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 120)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 60)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 124)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 2)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 66)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 6)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 70)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 10)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 74)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 14)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 78)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 18)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 82)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 22)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 86)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 26)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 90)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 30)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 94)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 34)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 98)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 38)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 102)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 42)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 106)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 46)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 110)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 50)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 114)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 54)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 118)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 58)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 122)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 62)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 126)] = 0;\n  }\n  for (int k_0 = 0; k_0 < 128; ++k_0) {\n    __syncthreads();\n    *(int4*)(p0_shared + (((int)threadIdx.x) * 16)) = *(int4*)(p0 + (((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 4) * 131072)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 15) >> 3) * 512)) + (((((int)blockIdx.x) & 7) >> 1) * 128)) + ((((int)threadIdx.x) & 7) * 16)));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 2048)) = *(int4*)(p0 + ((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 4) * 131072)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 15) >> 3) * 512)) + (((((int)blockIdx.x) & 7) >> 1) * 128)) + ((((int)threadIdx.x) & 7) * 16)) + 1048576));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 4096)) = *(int4*)(p0 + ((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 4) * 131072)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 15) >> 3) * 512)) + (((((int)blockIdx.x) & 7) >> 1) * 128)) + ((((int)threadIdx.x) & 7) * 16)) + 2097152));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 6144)) = *(int4*)(p0 + ((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 4) * 131072)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 15) >> 3) * 512)) + (((((int)blockIdx.x) & 7) >> 1) * 128)) + ((((int)threadIdx.x) & 7) * 16)) + 3145728));\n    for (int ax0_ax1_ax2_ax3_fused_1 = 0; ax0_ax1_ax2_ax3_fused_1 < 16; ++ax0_ax1_ax2_ax3_fused_1) {\n      B_decode_shared[((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1)] = ((p1[(((((((((((int)blockIdx.x) & 255) >> 3) * 262144) + ((((int)threadIdx.x) >> 5) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 31) >> 4) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + (ax0_ax1_ax2_ax3_fused_1 >> 3))] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_1 = 0; ax0_ax1_ax2_ax3_fused_1_1 < 16; ++ax0_ax1_ax2_ax3_fused_1_1) {\n      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_1) + 2048)] = ((p1[((((((((((((int)blockIdx.x) & 255) >> 3) * 262144) + ((((int)threadIdx.x) >> 5) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 31) >> 4) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + (ax0_ax1_ax2_ax3_fused_1_1 >> 3)) + 65536)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_1 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_2 = 0; ax0_ax1_ax2_ax3_fused_1_2 < 16; ++ax0_ax1_ax2_ax3_fused_1_2) {\n      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_2) + 4096)] = ((p1[((((((((((((int)blockIdx.x) & 255) >> 3) * 262144) + ((((int)threadIdx.x) >> 5) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 31) >> 4) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + (ax0_ax1_ax2_ax3_fused_1_2 >> 3)) + 131072)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_2 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_3 = 0; ax0_ax1_ax2_ax3_fused_1_3 < 16; ++ax0_ax1_ax2_ax3_fused_1_3) {\n      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_3) + 6144)] = ((p1[((((((((((((int)blockIdx.x) & 255) >> 3) * 262144) + ((((int)threadIdx.x) >> 5) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 31) >> 4) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + (ax0_ax1_ax2_ax3_fused_1_3 >> 3)) + 196608)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_3 & 7))) & (signed char)1);\n    }\n    __syncthreads();\n    for (int k_1 = 0; k_1 < 2; ++k_1) {\n      for (int kk_1 = 0; kk_1 < 32; ++kk_1) {\n        for (int i2_1_1 = 0; i2_1_1 < 2; ++i2_1_1) {\n          T_perfect_quant_linear_local[i2_1_1] = (T_perfect_quant_linear_local[i2_1_1] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 64)] = (T_perfect_quant_linear_local[(i2_1_1 + 64)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 4)] = (T_perfect_quant_linear_local[(i2_1_1 + 4)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 68)] = (T_perfect_quant_linear_local[(i2_1_1 + 68)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 8)] = (T_perfect_quant_linear_local[(i2_1_1 + 8)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 72)] = (T_perfect_quant_linear_local[(i2_1_1 + 72)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 12)] = (T_perfect_quant_linear_local[(i2_1_1 + 12)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 76)] = (T_perfect_quant_linear_local[(i2_1_1 + 76)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 16)] = (T_perfect_quant_linear_local[(i2_1_1 + 16)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 80)] = (T_perfect_quant_linear_local[(i2_1_1 + 80)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 20)] = (T_perfect_quant_linear_local[(i2_1_1 + 20)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 84)] = (T_perfect_quant_linear_local[(i2_1_1 + 84)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 24)] = (T_perfect_quant_linear_local[(i2_1_1 + 24)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 88)] = (T_perfect_quant_linear_local[(i2_1_1 + 88)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 28)] = (T_perfect_quant_linear_local[(i2_1_1 + 28)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 92)] = (T_perfect_quant_linear_local[(i2_1_1 + 92)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 32)] = (T_perfect_quant_linear_local[(i2_1_1 + 32)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 96)] = (T_perfect_quant_linear_local[(i2_1_1 + 96)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 36)] = (T_perfect_quant_linear_local[(i2_1_1 + 36)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 100)] = (T_perfect_quant_linear_local[(i2_1_1 + 100)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 40)] = (T_perfect_quant_linear_local[(i2_1_1 + 40)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 104)] = (T_perfect_quant_linear_local[(i2_1_1 + 104)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 44)] = (T_perfect_quant_linear_local[(i2_1_1 + 44)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 108)] = (T_perfect_quant_linear_local[(i2_1_1 + 108)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 48)] = (T_perfect_quant_linear_local[(i2_1_1 + 48)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 112)] = (T_perfect_quant_linear_local[(i2_1_1 + 112)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 52)] = (T_perfect_quant_linear_local[(i2_1_1 + 52)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 116)] = (T_perfect_quant_linear_local[(i2_1_1 + 116)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 56)] = (T_perfect_quant_linear_local[(i2_1_1 + 56)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 120)] = (T_perfect_quant_linear_local[(i2_1_1 + 120)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 60)] = (T_perfect_quant_linear_local[(i2_1_1 + 60)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7680)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 124)] = (T_perfect_quant_linear_local[(i2_1_1 + 124)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7680)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 2)] = (T_perfect_quant_linear_local[(i2_1_1 + 2)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 66)] = (T_perfect_quant_linear_local[(i2_1_1 + 66)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 6)] = (T_perfect_quant_linear_local[(i2_1_1 + 6)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 70)] = (T_perfect_quant_linear_local[(i2_1_1 + 70)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 10)] = (T_perfect_quant_linear_local[(i2_1_1 + 10)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 74)] = (T_perfect_quant_linear_local[(i2_1_1 + 74)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 14)] = (T_perfect_quant_linear_local[(i2_1_1 + 14)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 78)] = (T_perfect_quant_linear_local[(i2_1_1 + 78)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 18)] = (T_perfect_quant_linear_local[(i2_1_1 + 18)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 82)] = (T_perfect_quant_linear_local[(i2_1_1 + 82)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 22)] = (T_perfect_quant_linear_local[(i2_1_1 + 22)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 86)] = (T_perfect_quant_linear_local[(i2_1_1 + 86)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 26)] = (T_perfect_quant_linear_local[(i2_1_1 + 26)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 90)] = (T_perfect_quant_linear_local[(i2_1_1 + 90)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 30)] = (T_perfect_quant_linear_local[(i2_1_1 + 30)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 94)] = (T_perfect_quant_linear_local[(i2_1_1 + 94)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 34)] = (T_perfect_quant_linear_local[(i2_1_1 + 34)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 98)] = (T_perfect_quant_linear_local[(i2_1_1 + 98)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 38)] = (T_perfect_quant_linear_local[(i2_1_1 + 38)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 102)] = (T_perfect_quant_linear_local[(i2_1_1 + 102)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 42)] = (T_perfect_quant_linear_local[(i2_1_1 + 42)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 106)] = (T_perfect_quant_linear_local[(i2_1_1 + 106)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 46)] = (T_perfect_quant_linear_local[(i2_1_1 + 46)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 110)] = (T_perfect_quant_linear_local[(i2_1_1 + 110)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 50)] = (T_perfect_quant_linear_local[(i2_1_1 + 50)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 114)] = (T_perfect_quant_linear_local[(i2_1_1 + 114)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 54)] = (T_perfect_quant_linear_local[(i2_1_1 + 54)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 118)] = (T_perfect_quant_linear_local[(i2_1_1 + 118)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 58)] = (T_perfect_quant_linear_local[(i2_1_1 + 58)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 122)] = (T_perfect_quant_linear_local[(i2_1_1 + 122)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 62)] = (T_perfect_quant_linear_local[(i2_1_1 + 62)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4096)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7680)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 126)] = (T_perfect_quant_linear_local[(i2_1_1 + 126)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 256) + (k_1 * 128)) + (i2_1_1 * 32)) + kk_1) + 4160)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7680)])));\n        }\n      }\n    }\n  }\n  for (int ax0 = 0; ax0 < 2; ++ax0) {\n    T_cast[((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7))] = ((half)T_perfect_quant_linear_local[ax0]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 32)] = ((half)T_perfect_quant_linear_local[(ax0 + 64)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 256)] = ((half)T_perfect_quant_linear_local[(ax0 + 4)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 288)] = ((half)T_perfect_quant_linear_local[(ax0 + 68)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 512)] = ((half)T_perfect_quant_linear_local[(ax0 + 8)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 544)] = ((half)T_perfect_quant_linear_local[(ax0 + 72)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 768)] = ((half)T_perfect_quant_linear_local[(ax0 + 12)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 800)] = ((half)T_perfect_quant_linear_local[(ax0 + 76)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1024)] = ((half)T_perfect_quant_linear_local[(ax0 + 16)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1056)] = ((half)T_perfect_quant_linear_local[(ax0 + 80)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1280)] = ((half)T_perfect_quant_linear_local[(ax0 + 20)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1312)] = ((half)T_perfect_quant_linear_local[(ax0 + 84)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1536)] = ((half)T_perfect_quant_linear_local[(ax0 + 24)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1568)] = ((half)T_perfect_quant_linear_local[(ax0 + 88)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1792)] = ((half)T_perfect_quant_linear_local[(ax0 + 28)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1824)] = ((half)T_perfect_quant_linear_local[(ax0 + 92)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2048)] = ((half)T_perfect_quant_linear_local[(ax0 + 32)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2080)] = ((half)T_perfect_quant_linear_local[(ax0 + 96)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2304)] = ((half)T_perfect_quant_linear_local[(ax0 + 36)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2336)] = ((half)T_perfect_quant_linear_local[(ax0 + 100)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2560)] = ((half)T_perfect_quant_linear_local[(ax0 + 40)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2592)] = ((half)T_perfect_quant_linear_local[(ax0 + 104)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2816)] = ((half)T_perfect_quant_linear_local[(ax0 + 44)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2848)] = ((half)T_perfect_quant_linear_local[(ax0 + 108)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3072)] = ((half)T_perfect_quant_linear_local[(ax0 + 48)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3104)] = ((half)T_perfect_quant_linear_local[(ax0 + 112)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3328)] = ((half)T_perfect_quant_linear_local[(ax0 + 52)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3360)] = ((half)T_perfect_quant_linear_local[(ax0 + 116)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3584)] = ((half)T_perfect_quant_linear_local[(ax0 + 56)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3616)] = ((half)T_perfect_quant_linear_local[(ax0 + 120)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3840)] = ((half)T_perfect_quant_linear_local[(ax0 + 60)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3872)] = ((half)T_perfect_quant_linear_local[(ax0 + 124)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097152)] = ((half)T_perfect_quant_linear_local[(ax0 + 2)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097184)] = ((half)T_perfect_quant_linear_local[(ax0 + 66)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097408)] = ((half)T_perfect_quant_linear_local[(ax0 + 6)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097440)] = ((half)T_perfect_quant_linear_local[(ax0 + 70)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097664)] = ((half)T_perfect_quant_linear_local[(ax0 + 10)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097696)] = ((half)T_perfect_quant_linear_local[(ax0 + 74)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097920)] = ((half)T_perfect_quant_linear_local[(ax0 + 14)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2097952)] = ((half)T_perfect_quant_linear_local[(ax0 + 78)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098176)] = ((half)T_perfect_quant_linear_local[(ax0 + 18)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098208)] = ((half)T_perfect_quant_linear_local[(ax0 + 82)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098432)] = ((half)T_perfect_quant_linear_local[(ax0 + 22)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098464)] = ((half)T_perfect_quant_linear_local[(ax0 + 86)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098688)] = ((half)T_perfect_quant_linear_local[(ax0 + 26)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098720)] = ((half)T_perfect_quant_linear_local[(ax0 + 90)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098944)] = ((half)T_perfect_quant_linear_local[(ax0 + 30)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2098976)] = ((half)T_perfect_quant_linear_local[(ax0 + 94)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2099200)] = ((half)T_perfect_quant_linear_local[(ax0 + 34)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2099232)] = ((half)T_perfect_quant_linear_local[(ax0 + 98)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2099456)] = ((half)T_perfect_quant_linear_local[(ax0 + 38)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2099488)] = ((half)T_perfect_quant_linear_local[(ax0 + 102)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2099712)] = ((half)T_perfect_quant_linear_local[(ax0 + 42)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2099744)] = ((half)T_perfect_quant_linear_local[(ax0 + 106)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2099968)] = ((half)T_perfect_quant_linear_local[(ax0 + 46)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100000)] = ((half)T_perfect_quant_linear_local[(ax0 + 110)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100224)] = ((half)T_perfect_quant_linear_local[(ax0 + 50)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100256)] = ((half)T_perfect_quant_linear_local[(ax0 + 114)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100480)] = ((half)T_perfect_quant_linear_local[(ax0 + 54)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100512)] = ((half)T_perfect_quant_linear_local[(ax0 + 118)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100736)] = ((half)T_perfect_quant_linear_local[(ax0 + 58)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100768)] = ((half)T_perfect_quant_linear_local[(ax0 + 122)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2100992)] = ((half)T_perfect_quant_linear_local[(ax0 + 62)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 8) * 4194304) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 255) >> 3) * 4096)) + (((((int)blockIdx.x) & 7) >> 1) * 64)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2101024)] = ((half)T_perfect_quant_linear_local[(ax0 + 126)]);\n  }\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      2048,
      1,
      1
    ],
    "latency": 48.37253189086914,
    "name": "Group2",
    "gain": 0
  },
  {
    "nodes": [
      20
    ],
    "node_names": [
      "reshape_add_20"
    ],
    "group_id": 15,
    "input_desc": [
      [
        "reshape_add_20",
        20,
        0
      ],
      [
        "reshape_add_20",
        20,
        1
      ]
    ],
    "output_desc": [
      [
        "reshape_add_20",
        20,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group15(half* __restrict__ p0, half* __restrict__ p1, half* __restrict__ T_add) {\n  \n  T_add[(((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2))] = (p1[(((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2))] + p0[(((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2))]);\n  T_add[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32)] = (p1[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32)] + p0[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32)]);\n  T_add[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] = (p1[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] + p0[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 1)]);\n  T_add[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 33)] = (p1[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 33)] + p0[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 33)]);\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      65536,
      1,
      1
    ],
    "latency": 0.27654826641082764,
    "name": "Group15",
    "gain": 0
  },
  {
    "nodes": [
      21,
      22
    ],
    "node_names": [
      "cast_multiply_21",
      "mean_add_sqrt_divide_22"
    ],
    "group_id": 16,
    "input_desc": [
      [
        "cast_multiply_21",
        21,
        0
      ]
    ],
    "output_desc": [
      [
        "cast_multiply_21",
        21,
        0
      ],
      [
        "mean_add_sqrt_divide_22",
        22,
        0
      ]
    ],
    "code": "__device__ void Group0_0_cast_multiply_0(half* __restrict__ p0, float* __restrict__ output_proxy, float* __restrict__ output_proxy_1, char* shared) {\n  output_proxy[((((int)blockIdx.x) * 8192) + ((int)threadIdx.x))] = ((float)p0[((((int)blockIdx.x) * 8192) + ((int)threadIdx.x))]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 128)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 128)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 256)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 256)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 384)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 384)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 512)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 512)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 640)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 640)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 768)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 768)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 896)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 896)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1024)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1024)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1152)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1152)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1280)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1280)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1408)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1408)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1536)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1536)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1664)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1664)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1792)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1792)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1920)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1920)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2048)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2048)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2176)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2176)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2304)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2304)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2432)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2432)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2560)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2560)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2688)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2688)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2816)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2816)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2944)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2944)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3072)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3072)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3200)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3200)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3328)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3328)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3456)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3456)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3584)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3584)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3712)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3712)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3840)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3840)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3968)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3968)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4096)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4096)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4224)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4224)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4352)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4352)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4480)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4480)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4608)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4608)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4736)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4736)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4864)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4864)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4992)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4992)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5120)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5120)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5248)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5248)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5376)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5376)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5504)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5504)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5632)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5632)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5760)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5760)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5888)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5888)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6016)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6016)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6144)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6144)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6272)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6272)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6400)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6400)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6528)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6528)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6656)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6656)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6784)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6784)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6912)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6912)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7040)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7040)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7168)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7168)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7296)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7296)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7424)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7424)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7552)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7552)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7680)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7680)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7808)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7808)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7936)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7936)]);\n  output_proxy[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 8064)] = ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 8064)]);\n  __syncthreads();\n  output_proxy_1[((int)threadIdx.x)] = (((float)p0[((((int)blockIdx.x) * 8192) + ((int)threadIdx.x))]) * ((float)p0[((((int)blockIdx.x) * 8192) + ((int)threadIdx.x))]));\n  output_proxy_1[(((int)threadIdx.x) + 128)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 128)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 128)]));\n  output_proxy_1[(((int)threadIdx.x) + 256)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 256)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 256)]));\n  output_proxy_1[(((int)threadIdx.x) + 384)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 384)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 384)]));\n  output_proxy_1[(((int)threadIdx.x) + 512)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 512)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 512)]));\n  output_proxy_1[(((int)threadIdx.x) + 640)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 640)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 640)]));\n  output_proxy_1[(((int)threadIdx.x) + 768)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 768)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 768)]));\n  output_proxy_1[(((int)threadIdx.x) + 896)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 896)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 896)]));\n  output_proxy_1[(((int)threadIdx.x) + 1024)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1024)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1024)]));\n  output_proxy_1[(((int)threadIdx.x) + 1152)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1152)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1152)]));\n  output_proxy_1[(((int)threadIdx.x) + 1280)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1280)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1280)]));\n  output_proxy_1[(((int)threadIdx.x) + 1408)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1408)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1408)]));\n  output_proxy_1[(((int)threadIdx.x) + 1536)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1536)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1536)]));\n  output_proxy_1[(((int)threadIdx.x) + 1664)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1664)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1664)]));\n  output_proxy_1[(((int)threadIdx.x) + 1792)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1792)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1792)]));\n  output_proxy_1[(((int)threadIdx.x) + 1920)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1920)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 1920)]));\n  output_proxy_1[(((int)threadIdx.x) + 2048)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2048)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2048)]));\n  output_proxy_1[(((int)threadIdx.x) + 2176)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2176)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2176)]));\n  output_proxy_1[(((int)threadIdx.x) + 2304)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2304)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2304)]));\n  output_proxy_1[(((int)threadIdx.x) + 2432)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2432)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2432)]));\n  output_proxy_1[(((int)threadIdx.x) + 2560)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2560)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2560)]));\n  output_proxy_1[(((int)threadIdx.x) + 2688)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2688)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2688)]));\n  output_proxy_1[(((int)threadIdx.x) + 2816)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2816)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2816)]));\n  output_proxy_1[(((int)threadIdx.x) + 2944)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2944)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 2944)]));\n  output_proxy_1[(((int)threadIdx.x) + 3072)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3072)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3072)]));\n  output_proxy_1[(((int)threadIdx.x) + 3200)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3200)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3200)]));\n  output_proxy_1[(((int)threadIdx.x) + 3328)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3328)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3328)]));\n  output_proxy_1[(((int)threadIdx.x) + 3456)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3456)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3456)]));\n  output_proxy_1[(((int)threadIdx.x) + 3584)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3584)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3584)]));\n  output_proxy_1[(((int)threadIdx.x) + 3712)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3712)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3712)]));\n  output_proxy_1[(((int)threadIdx.x) + 3840)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3840)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3840)]));\n  output_proxy_1[(((int)threadIdx.x) + 3968)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3968)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 3968)]));\n  output_proxy_1[(((int)threadIdx.x) + 4096)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4096)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4096)]));\n  output_proxy_1[(((int)threadIdx.x) + 4224)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4224)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4224)]));\n  output_proxy_1[(((int)threadIdx.x) + 4352)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4352)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4352)]));\n  output_proxy_1[(((int)threadIdx.x) + 4480)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4480)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4480)]));\n  output_proxy_1[(((int)threadIdx.x) + 4608)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4608)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4608)]));\n  output_proxy_1[(((int)threadIdx.x) + 4736)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4736)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4736)]));\n  output_proxy_1[(((int)threadIdx.x) + 4864)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4864)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4864)]));\n  output_proxy_1[(((int)threadIdx.x) + 4992)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4992)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 4992)]));\n  output_proxy_1[(((int)threadIdx.x) + 5120)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5120)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5120)]));\n  output_proxy_1[(((int)threadIdx.x) + 5248)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5248)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5248)]));\n  output_proxy_1[(((int)threadIdx.x) + 5376)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5376)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5376)]));\n  output_proxy_1[(((int)threadIdx.x) + 5504)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5504)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5504)]));\n  output_proxy_1[(((int)threadIdx.x) + 5632)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5632)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5632)]));\n  output_proxy_1[(((int)threadIdx.x) + 5760)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5760)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5760)]));\n  output_proxy_1[(((int)threadIdx.x) + 5888)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5888)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 5888)]));\n  output_proxy_1[(((int)threadIdx.x) + 6016)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6016)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6016)]));\n  output_proxy_1[(((int)threadIdx.x) + 6144)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6144)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6144)]));\n  output_proxy_1[(((int)threadIdx.x) + 6272)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6272)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6272)]));\n  output_proxy_1[(((int)threadIdx.x) + 6400)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6400)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6400)]));\n  output_proxy_1[(((int)threadIdx.x) + 6528)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6528)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6528)]));\n  output_proxy_1[(((int)threadIdx.x) + 6656)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6656)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6656)]));\n  output_proxy_1[(((int)threadIdx.x) + 6784)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6784)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6784)]));\n  output_proxy_1[(((int)threadIdx.x) + 6912)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6912)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 6912)]));\n  output_proxy_1[(((int)threadIdx.x) + 7040)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7040)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7040)]));\n  output_proxy_1[(((int)threadIdx.x) + 7168)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7168)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7168)]));\n  output_proxy_1[(((int)threadIdx.x) + 7296)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7296)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7296)]));\n  output_proxy_1[(((int)threadIdx.x) + 7424)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7424)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7424)]));\n  output_proxy_1[(((int)threadIdx.x) + 7552)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7552)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7552)]));\n  output_proxy_1[(((int)threadIdx.x) + 7680)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7680)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7680)]));\n  output_proxy_1[(((int)threadIdx.x) + 7808)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7808)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7808)]));\n  output_proxy_1[(((int)threadIdx.x) + 7936)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7936)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 7936)]));\n  output_proxy_1[(((int)threadIdx.x) + 8064)] = (((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 8064)]) * ((float)p0[(((((int)blockIdx.x) * 8192) + ((int)threadIdx.x)) + 8064)]));\n  __syncthreads();\n}\n\n__device__ void Group0_1_mean_add_sqrt_divide_1(float* __restrict__ p0, float* __restrict__ T_divide_7, char* shared) {\n  float normal_reduce_temp0[1];\n  float* p0_shared = (float*)p0;\n  __shared__ float red_buf0[128];\n  normal_reduce_temp0[0] = 0.000000e+00f;\n  for (int k2_inner_outer = 0; k2_inner_outer < 64; ++k2_inner_outer) {\n    normal_reduce_temp0[0] = (normal_reduce_temp0[0] + p0_shared[((k2_inner_outer * 128) + ((int)threadIdx.x))]);\n  }\n  __syncthreads();\n  ((volatile float*)red_buf0)[((int)threadIdx.x)] = normal_reduce_temp0[0];\n  __syncthreads();\n  if (((int)threadIdx.x) < 64) {\n    ((volatile float*)red_buf0)[((int)threadIdx.x)] = (((volatile float*)red_buf0)[((int)threadIdx.x)] + ((volatile float*)red_buf0)[(((int)threadIdx.x) + 64)]);\n  }\n  __syncthreads();\n  if (((int)threadIdx.x) < 32) {\n    ((volatile float*)red_buf0)[((int)threadIdx.x)] = (((volatile float*)red_buf0)[((int)threadIdx.x)] + ((volatile float*)red_buf0)[(((int)threadIdx.x) + 32)]);\n  }\n  __syncthreads();\n  if (((int)threadIdx.x) < 16) {\n    float w_16_0 = (((volatile float*)red_buf0)[((int)threadIdx.x)] + ((volatile float*)red_buf0)[(((int)threadIdx.x) + 16)]);\n    ((volatile float*)red_buf0)[((int)threadIdx.x)] = w_16_0;\n    float w_8_0 = (((volatile float*)red_buf0)[((int)threadIdx.x)] + ((volatile float*)red_buf0)[(((int)threadIdx.x) + 8)]);\n    ((volatile float*)red_buf0)[((int)threadIdx.x)] = w_8_0;\n    float w_4_0 = (((volatile float*)red_buf0)[((int)threadIdx.x)] + ((volatile float*)red_buf0)[(((int)threadIdx.x) + 4)]);\n    ((volatile float*)red_buf0)[((int)threadIdx.x)] = w_4_0;\n    float w_2_0 = (((volatile float*)red_buf0)[((int)threadIdx.x)] + ((volatile float*)red_buf0)[(((int)threadIdx.x) + 2)]);\n    ((volatile float*)red_buf0)[((int)threadIdx.x)] = w_2_0;\n    float w_1_0 = (((volatile float*)red_buf0)[((int)threadIdx.x)] + ((volatile float*)red_buf0)[(((int)threadIdx.x) + 1)]);\n    ((volatile float*)red_buf0)[((int)threadIdx.x)] = w_1_0;\n  }\n  __syncthreads();\n  T_divide_7[((int)blockIdx.x)] = (1.000000e+00f / sqrtf(((((volatile float*)red_buf0)[0] * 1.220703e-04f) + 1.000000e-05f)));\n}\n\n__global__ void __launch_bounds__(128) Group0(half* input0, float* output0, float* output1) {\n  __shared__ char shared[32768];\n  Group0_0_cast_multiply_0(input0, output0, (float*)(shared+0), shared+0);\n  Group0_1_mean_add_sqrt_divide_1((float*)(shared+0), output1, shared+32768);\n}\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      4096,
      1,
      1
    ],
    "latency": 0.26030081510543823,
    "name": "Group0",
    "gain": 0.3363627940416336
  },
  {
    "nodes": [
      23,
      24
    ],
    "node_names": [
      "multiply_cast_multiply_23",
      "reshape_cast_cast_reshape_24"
    ],
    "group_id": 17,
    "input_desc": [
      [
        "multiply_cast_multiply_23",
        23,
        0
      ],
      [
        "multiply_cast_multiply_23",
        23,
        1
      ],
      [
        "multiply_cast_multiply_23",
        23,
        2
      ]
    ],
    "output_desc": [
      [
        "reshape_cast_cast_reshape_24",
        24,
        0
      ]
    ],
    "code": "__device__ void Group17_0_multiply_cast_multiply_23(float* __restrict__ p0, float* __restrict__ p1, half* __restrict__ p2, half* __restrict__ T_multiply_5, char* shared) {\n  __syncthreads();\n  T_multiply_5[(((int)threadIdx.x) * 2)] = (p2[(((((int)blockIdx.x) & 15) * 512) + (((int)threadIdx.x) * 2))] * ((half)(p0[((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2))] * p1[(((int)blockIdx.x) >> 4)])));\n  T_multiply_5[((((int)threadIdx.x) * 2) + 256)] = (p2[((((((int)blockIdx.x) & 15) * 512) + (((int)threadIdx.x) * 2)) + 256)] * ((half)(p0[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2)) + 256)] * p1[(((int)blockIdx.x) >> 4)])));\n  T_multiply_5[((((int)threadIdx.x) * 2) + 1)] = (p2[((((((int)blockIdx.x) & 15) * 512) + (((int)threadIdx.x) * 2)) + 1)] * ((half)(p0[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2)) + 1)] * p1[(((int)blockIdx.x) >> 4)])));\n  T_multiply_5[((((int)threadIdx.x) * 2) + 257)] = (p2[((((((int)blockIdx.x) & 15) * 512) + (((int)threadIdx.x) * 2)) + 257)] * ((half)(p0[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 2)) + 257)] * p1[(((int)blockIdx.x) >> 4)])));\n  __syncthreads();\n}\n\n__device__ void Group17_1_reshape_cast_cast_reshape_24(half* __restrict__ p0, int8_t* __restrict__ T_reshape_4, char* shared) {\n  half* p0_shared = (half*)p0;\n  T_reshape_4[((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 4))] = ((signed char)((float)p0_shared[(((int)threadIdx.x) * 4)]));\n  T_reshape_4[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 4)) + 1)] = ((signed char)((float)p0_shared[((((((((int)blockIdx.x) & 255) * 512) + (((int)threadIdx.x) * 4)) + 1) & 8191) - ((((int)blockIdx.x) & 15) * 512))]));\n  T_reshape_4[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 4)) + 2)] = ((signed char)((float)p0_shared[((((((((int)blockIdx.x) & 255) * 512) + (((int)threadIdx.x) * 4)) + 2) & 8191) - ((((int)blockIdx.x) & 15) * 512))]));\n  T_reshape_4[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 4)) + 3)] = ((signed char)((float)p0_shared[((((((((int)blockIdx.x) & 255) * 512) + (((int)threadIdx.x) * 4)) + 3) & 8191) - ((((int)blockIdx.x) & 15) * 512))]));\n}\n\n__global__ void __launch_bounds__(128) Group17(float* input0, float* input1, half* input2, int8_t* output0) {\n  __shared__ char shared[1024];\n  Group17_0_multiply_cast_multiply_23(input0, input1, input2, (half*)(shared+0), shared+0);\n  Group17_1_reshape_cast_cast_reshape_24((half*)(shared+0), output0, shared+1024);\n}\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      65536,
      1,
      1
    ],
    "latency": 0.2133643627166748,
    "name": "Group17",
    "gain": 0.17242763936519623
  },
  {
    "nodes": [
      25,
      26
    ],
    "node_names": [
      "ladder_perfect_quant_linear_cast_25",
      "reshape_26"
    ],
    "group_id": 18,
    "input_desc": [
      [
        "ladder_perfect_quant_linear_cast_25",
        25,
        0
      ],
      [
        "ladder_perfect_quant_linear_cast_25",
        25,
        1
      ]
    ],
    "output_desc": [
      [
        "reshape_26",
        26,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group18(int8_t* __restrict__ input0, int8_t* __restrict__ input1, half* __restrict__ output0) {\n  \n  int mediate1_local[112];\n  __shared__ signed char input0_shared[8192];\n  __shared__ signed char mediate0_shared[7168];\n  for (int i2_1_1_init = 0; i2_1_1_init < 2; ++i2_1_1_init) {\n    mediate1_local[i2_1_1_init] = 0;\n    mediate1_local[(i2_1_1_init + 28)] = 0;\n    mediate1_local[(i2_1_1_init + 56)] = 0;\n    mediate1_local[(i2_1_1_init + 84)] = 0;\n    mediate1_local[(i2_1_1_init + 2)] = 0;\n    mediate1_local[(i2_1_1_init + 30)] = 0;\n    mediate1_local[(i2_1_1_init + 58)] = 0;\n    mediate1_local[(i2_1_1_init + 86)] = 0;\n    mediate1_local[(i2_1_1_init + 4)] = 0;\n    mediate1_local[(i2_1_1_init + 32)] = 0;\n    mediate1_local[(i2_1_1_init + 60)] = 0;\n    mediate1_local[(i2_1_1_init + 88)] = 0;\n    mediate1_local[(i2_1_1_init + 6)] = 0;\n    mediate1_local[(i2_1_1_init + 34)] = 0;\n    mediate1_local[(i2_1_1_init + 62)] = 0;\n    mediate1_local[(i2_1_1_init + 90)] = 0;\n    mediate1_local[(i2_1_1_init + 8)] = 0;\n    mediate1_local[(i2_1_1_init + 36)] = 0;\n    mediate1_local[(i2_1_1_init + 64)] = 0;\n    mediate1_local[(i2_1_1_init + 92)] = 0;\n    mediate1_local[(i2_1_1_init + 10)] = 0;\n    mediate1_local[(i2_1_1_init + 38)] = 0;\n    mediate1_local[(i2_1_1_init + 66)] = 0;\n    mediate1_local[(i2_1_1_init + 94)] = 0;\n    mediate1_local[(i2_1_1_init + 12)] = 0;\n    mediate1_local[(i2_1_1_init + 40)] = 0;\n    mediate1_local[(i2_1_1_init + 68)] = 0;\n    mediate1_local[(i2_1_1_init + 96)] = 0;\n    mediate1_local[(i2_1_1_init + 14)] = 0;\n    mediate1_local[(i2_1_1_init + 42)] = 0;\n    mediate1_local[(i2_1_1_init + 70)] = 0;\n    mediate1_local[(i2_1_1_init + 98)] = 0;\n    mediate1_local[(i2_1_1_init + 16)] = 0;\n    mediate1_local[(i2_1_1_init + 44)] = 0;\n    mediate1_local[(i2_1_1_init + 72)] = 0;\n    mediate1_local[(i2_1_1_init + 100)] = 0;\n    mediate1_local[(i2_1_1_init + 18)] = 0;\n    mediate1_local[(i2_1_1_init + 46)] = 0;\n    mediate1_local[(i2_1_1_init + 74)] = 0;\n    mediate1_local[(i2_1_1_init + 102)] = 0;\n    mediate1_local[(i2_1_1_init + 20)] = 0;\n    mediate1_local[(i2_1_1_init + 48)] = 0;\n    mediate1_local[(i2_1_1_init + 76)] = 0;\n    mediate1_local[(i2_1_1_init + 104)] = 0;\n    mediate1_local[(i2_1_1_init + 22)] = 0;\n    mediate1_local[(i2_1_1_init + 50)] = 0;\n    mediate1_local[(i2_1_1_init + 78)] = 0;\n    mediate1_local[(i2_1_1_init + 106)] = 0;\n    mediate1_local[(i2_1_1_init + 24)] = 0;\n    mediate1_local[(i2_1_1_init + 52)] = 0;\n    mediate1_local[(i2_1_1_init + 80)] = 0;\n    mediate1_local[(i2_1_1_init + 108)] = 0;\n    mediate1_local[(i2_1_1_init + 26)] = 0;\n    mediate1_local[(i2_1_1_init + 54)] = 0;\n    mediate1_local[(i2_1_1_init + 82)] = 0;\n    mediate1_local[(i2_1_1_init + 110)] = 0;\n  }\n  for (int k_0 = 0; k_0 < 128; ++k_0) {\n    __syncthreads();\n    *(int4*)(input0_shared + (((int)threadIdx.x) * 16)) = *(int4*)(input0 + (((((((int)blockIdx.x) >> 8) * 1048576) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)));\n    *(int4*)(input0_shared + ((((int)threadIdx.x) * 16) + 2048)) = *(int4*)(input0 + ((((((((int)blockIdx.x) >> 8) * 1048576) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)) + 262144));\n    *(int4*)(input0_shared + ((((int)threadIdx.x) * 16) + 4096)) = *(int4*)(input0 + ((((((((int)blockIdx.x) >> 8) * 1048576) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)) + 524288));\n    *(int4*)(input0_shared + ((((int)threadIdx.x) * 16) + 6144)) = *(int4*)(input0 + ((((((((int)blockIdx.x) >> 8) * 1048576) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)) + 786432));\n    for (int ax0_ax1_ax2_ax3_fused_1 = 0; ax0_ax1_ax2_ax3_fused_1 < 8; ++ax0_ax1_ax2_ax3_fused_1) {\n      mediate0_shared[((((int)threadIdx.x) * 8) + ax0_ax1_ax2_ax3_fused_1)] = ((input1[((((((((((int)blockIdx.x) & 255) >> 1) * 229376) + ((((int)threadIdx.x) >> 6) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 63) >> 5) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + (((int)threadIdx.x) & 31))] >> ((signed char)ax0_ax1_ax2_ax3_fused_1)) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_1 = 0; ax0_ax1_ax2_ax3_fused_1_1 < 8; ++ax0_ax1_ax2_ax3_fused_1_1) {\n      mediate0_shared[(((((int)threadIdx.x) * 8) + ax0_ax1_ax2_ax3_fused_1_1) + 1024)] = ((input1[(((((((((((int)blockIdx.x) & 255) >> 1) * 229376) + ((((int)threadIdx.x) >> 6) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 63) >> 5) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + (((int)threadIdx.x) & 31)) + 32768)] >> ((signed char)ax0_ax1_ax2_ax3_fused_1_1)) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_2 = 0; ax0_ax1_ax2_ax3_fused_1_2 < 8; ++ax0_ax1_ax2_ax3_fused_1_2) {\n      mediate0_shared[(((((int)threadIdx.x) * 8) + ax0_ax1_ax2_ax3_fused_1_2) + 2048)] = ((input1[(((((((((((int)blockIdx.x) & 255) >> 1) * 229376) + ((((int)threadIdx.x) >> 6) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 63) >> 5) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + (((int)threadIdx.x) & 31)) + 65536)] >> ((signed char)ax0_ax1_ax2_ax3_fused_1_2)) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_3 = 0; ax0_ax1_ax2_ax3_fused_1_3 < 8; ++ax0_ax1_ax2_ax3_fused_1_3) {\n      mediate0_shared[(((((int)threadIdx.x) * 8) + ax0_ax1_ax2_ax3_fused_1_3) + 3072)] = ((input1[(((((((((((int)blockIdx.x) & 255) >> 1) * 229376) + ((((int)threadIdx.x) >> 6) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 63) >> 5) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + (((int)threadIdx.x) & 31)) + 98304)] >> ((signed char)ax0_ax1_ax2_ax3_fused_1_3)) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_4 = 0; ax0_ax1_ax2_ax3_fused_1_4 < 8; ++ax0_ax1_ax2_ax3_fused_1_4) {\n      mediate0_shared[(((((int)threadIdx.x) * 8) + ax0_ax1_ax2_ax3_fused_1_4) + 4096)] = ((input1[(((((((((((int)blockIdx.x) & 255) >> 1) * 229376) + ((((int)threadIdx.x) >> 6) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 63) >> 5) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + (((int)threadIdx.x) & 31)) + 131072)] >> ((signed char)ax0_ax1_ax2_ax3_fused_1_4)) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_5 = 0; ax0_ax1_ax2_ax3_fused_1_5 < 8; ++ax0_ax1_ax2_ax3_fused_1_5) {\n      mediate0_shared[(((((int)threadIdx.x) * 8) + ax0_ax1_ax2_ax3_fused_1_5) + 5120)] = ((input1[(((((((((((int)blockIdx.x) & 255) >> 1) * 229376) + ((((int)threadIdx.x) >> 6) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 63) >> 5) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + (((int)threadIdx.x) & 31)) + 163840)] >> ((signed char)ax0_ax1_ax2_ax3_fused_1_5)) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_6 = 0; ax0_ax1_ax2_ax3_fused_1_6 < 8; ++ax0_ax1_ax2_ax3_fused_1_6) {\n      mediate0_shared[(((((int)threadIdx.x) * 8) + ax0_ax1_ax2_ax3_fused_1_6) + 6144)] = ((input1[(((((((((((int)blockIdx.x) & 255) >> 1) * 229376) + ((((int)threadIdx.x) >> 6) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 63) >> 5) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + (((int)threadIdx.x) & 31)) + 196608)] >> ((signed char)ax0_ax1_ax2_ax3_fused_1_6)) & (signed char)1);\n    }\n    __syncthreads();\n    for (int k_1 = 0; k_1 < 2; ++k_1) {\n      for (int kk_1 = 0; kk_1 < 32; ++kk_1) {\n        for (int i2_1_1 = 0; i2_1_1 < 2; ++i2_1_1) {\n          mediate1_local[i2_1_1] = (mediate1_local[i2_1_1] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          mediate1_local[(i2_1_1 + 28)] = (mediate1_local[(i2_1_1 + 28)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          mediate1_local[(i2_1_1 + 56)] = (mediate1_local[(i2_1_1 + 56)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          mediate1_local[(i2_1_1 + 84)] = (mediate1_local[(i2_1_1 + 84)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          mediate1_local[(i2_1_1 + 2)] = (mediate1_local[(i2_1_1 + 2)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          mediate1_local[(i2_1_1 + 30)] = (mediate1_local[(i2_1_1 + 30)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          mediate1_local[(i2_1_1 + 58)] = (mediate1_local[(i2_1_1 + 58)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          mediate1_local[(i2_1_1 + 86)] = (mediate1_local[(i2_1_1 + 86)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          mediate1_local[(i2_1_1 + 4)] = (mediate1_local[(i2_1_1 + 4)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          mediate1_local[(i2_1_1 + 32)] = (mediate1_local[(i2_1_1 + 32)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          mediate1_local[(i2_1_1 + 60)] = (mediate1_local[(i2_1_1 + 60)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          mediate1_local[(i2_1_1 + 88)] = (mediate1_local[(i2_1_1 + 88)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          mediate1_local[(i2_1_1 + 6)] = (mediate1_local[(i2_1_1 + 6)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          mediate1_local[(i2_1_1 + 34)] = (mediate1_local[(i2_1_1 + 34)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          mediate1_local[(i2_1_1 + 62)] = (mediate1_local[(i2_1_1 + 62)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          mediate1_local[(i2_1_1 + 90)] = (mediate1_local[(i2_1_1 + 90)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          mediate1_local[(i2_1_1 + 8)] = (mediate1_local[(i2_1_1 + 8)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          mediate1_local[(i2_1_1 + 36)] = (mediate1_local[(i2_1_1 + 36)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          mediate1_local[(i2_1_1 + 64)] = (mediate1_local[(i2_1_1 + 64)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          mediate1_local[(i2_1_1 + 92)] = (mediate1_local[(i2_1_1 + 92)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          mediate1_local[(i2_1_1 + 10)] = (mediate1_local[(i2_1_1 + 10)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          mediate1_local[(i2_1_1 + 38)] = (mediate1_local[(i2_1_1 + 38)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          mediate1_local[(i2_1_1 + 66)] = (mediate1_local[(i2_1_1 + 66)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          mediate1_local[(i2_1_1 + 94)] = (mediate1_local[(i2_1_1 + 94)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          mediate1_local[(i2_1_1 + 12)] = (mediate1_local[(i2_1_1 + 12)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          mediate1_local[(i2_1_1 + 40)] = (mediate1_local[(i2_1_1 + 40)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          mediate1_local[(i2_1_1 + 68)] = (mediate1_local[(i2_1_1 + 68)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          mediate1_local[(i2_1_1 + 96)] = (mediate1_local[(i2_1_1 + 96)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          mediate1_local[(i2_1_1 + 14)] = (mediate1_local[(i2_1_1 + 14)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          mediate1_local[(i2_1_1 + 42)] = (mediate1_local[(i2_1_1 + 42)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          mediate1_local[(i2_1_1 + 70)] = (mediate1_local[(i2_1_1 + 70)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          mediate1_local[(i2_1_1 + 98)] = (mediate1_local[(i2_1_1 + 98)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          mediate1_local[(i2_1_1 + 16)] = (mediate1_local[(i2_1_1 + 16)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          mediate1_local[(i2_1_1 + 44)] = (mediate1_local[(i2_1_1 + 44)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          mediate1_local[(i2_1_1 + 72)] = (mediate1_local[(i2_1_1 + 72)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          mediate1_local[(i2_1_1 + 100)] = (mediate1_local[(i2_1_1 + 100)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          mediate1_local[(i2_1_1 + 18)] = (mediate1_local[(i2_1_1 + 18)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          mediate1_local[(i2_1_1 + 46)] = (mediate1_local[(i2_1_1 + 46)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          mediate1_local[(i2_1_1 + 74)] = (mediate1_local[(i2_1_1 + 74)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          mediate1_local[(i2_1_1 + 102)] = (mediate1_local[(i2_1_1 + 102)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          mediate1_local[(i2_1_1 + 20)] = (mediate1_local[(i2_1_1 + 20)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          mediate1_local[(i2_1_1 + 48)] = (mediate1_local[(i2_1_1 + 48)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          mediate1_local[(i2_1_1 + 76)] = (mediate1_local[(i2_1_1 + 76)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          mediate1_local[(i2_1_1 + 104)] = (mediate1_local[(i2_1_1 + 104)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          mediate1_local[(i2_1_1 + 22)] = (mediate1_local[(i2_1_1 + 22)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          mediate1_local[(i2_1_1 + 50)] = (mediate1_local[(i2_1_1 + 50)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          mediate1_local[(i2_1_1 + 78)] = (mediate1_local[(i2_1_1 + 78)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          mediate1_local[(i2_1_1 + 106)] = (mediate1_local[(i2_1_1 + 106)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          mediate1_local[(i2_1_1 + 24)] = (mediate1_local[(i2_1_1 + 24)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          mediate1_local[(i2_1_1 + 52)] = (mediate1_local[(i2_1_1 + 52)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          mediate1_local[(i2_1_1 + 80)] = (mediate1_local[(i2_1_1 + 80)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          mediate1_local[(i2_1_1 + 108)] = (mediate1_local[(i2_1_1 + 108)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          mediate1_local[(i2_1_1 + 26)] = (mediate1_local[(i2_1_1 + 26)] + (((int)input0_shared[((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          mediate1_local[(i2_1_1 + 54)] = (mediate1_local[(i2_1_1 + 54)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          mediate1_local[(i2_1_1 + 82)] = (mediate1_local[(i2_1_1 + 82)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          mediate1_local[(i2_1_1 + 110)] = (mediate1_local[(i2_1_1 + 110)] + (((int)input0_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 15) >> 3) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)mediate0_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n        }\n      }\n    }\n  }\n  for (int ax0 = 0; ax0 < 2; ++ax0) {\n    output0[((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7))] = ((half)mediate1_local[ax0]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 64)] = ((half)mediate1_local[(ax0 + 28)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 128)] = ((half)mediate1_local[(ax0 + 56)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 192)] = ((half)mediate1_local[(ax0 + 84)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 256)] = ((half)mediate1_local[(ax0 + 2)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 320)] = ((half)mediate1_local[(ax0 + 30)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 384)] = ((half)mediate1_local[(ax0 + 58)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 448)] = ((half)mediate1_local[(ax0 + 86)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 512)] = ((half)mediate1_local[(ax0 + 4)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 576)] = ((half)mediate1_local[(ax0 + 32)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 640)] = ((half)mediate1_local[(ax0 + 60)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 704)] = ((half)mediate1_local[(ax0 + 88)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 768)] = ((half)mediate1_local[(ax0 + 6)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 832)] = ((half)mediate1_local[(ax0 + 34)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 896)] = ((half)mediate1_local[(ax0 + 62)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 960)] = ((half)mediate1_local[(ax0 + 90)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1024)] = ((half)mediate1_local[(ax0 + 8)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1088)] = ((half)mediate1_local[(ax0 + 36)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1152)] = ((half)mediate1_local[(ax0 + 64)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1216)] = ((half)mediate1_local[(ax0 + 92)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1280)] = ((half)mediate1_local[(ax0 + 10)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1344)] = ((half)mediate1_local[(ax0 + 38)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1408)] = ((half)mediate1_local[(ax0 + 66)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1472)] = ((half)mediate1_local[(ax0 + 94)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1536)] = ((half)mediate1_local[(ax0 + 12)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1600)] = ((half)mediate1_local[(ax0 + 40)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1664)] = ((half)mediate1_local[(ax0 + 68)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1728)] = ((half)mediate1_local[(ax0 + 96)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1792)] = ((half)mediate1_local[(ax0 + 14)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1856)] = ((half)mediate1_local[(ax0 + 42)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1920)] = ((half)mediate1_local[(ax0 + 70)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1984)] = ((half)mediate1_local[(ax0 + 98)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2048)] = ((half)mediate1_local[(ax0 + 16)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2112)] = ((half)mediate1_local[(ax0 + 44)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2176)] = ((half)mediate1_local[(ax0 + 72)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2240)] = ((half)mediate1_local[(ax0 + 100)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2304)] = ((half)mediate1_local[(ax0 + 18)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2368)] = ((half)mediate1_local[(ax0 + 46)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2432)] = ((half)mediate1_local[(ax0 + 74)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2496)] = ((half)mediate1_local[(ax0 + 102)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2560)] = ((half)mediate1_local[(ax0 + 20)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2624)] = ((half)mediate1_local[(ax0 + 48)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2688)] = ((half)mediate1_local[(ax0 + 76)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2752)] = ((half)mediate1_local[(ax0 + 104)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2816)] = ((half)mediate1_local[(ax0 + 22)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2880)] = ((half)mediate1_local[(ax0 + 50)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2944)] = ((half)mediate1_local[(ax0 + 78)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3008)] = ((half)mediate1_local[(ax0 + 106)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3072)] = ((half)mediate1_local[(ax0 + 24)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3136)] = ((half)mediate1_local[(ax0 + 52)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3200)] = ((half)mediate1_local[(ax0 + 80)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3264)] = ((half)mediate1_local[(ax0 + 108)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3328)] = ((half)mediate1_local[(ax0 + 26)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3392)] = ((half)mediate1_local[(ax0 + 54)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3456)] = ((half)mediate1_local[(ax0 + 82)]);\n    output0[(((((((((((int)blockIdx.x) >> 8) * 3670016) + ((((int)threadIdx.x) >> 4) * 458752)) + (((((int)blockIdx.x) & 255) >> 1) * 3584)) + (((((int)threadIdx.x) & 15) >> 3) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3520)] = ((half)mediate1_local[(ax0 + 110)]);\n  }\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      8192,
      1,
      1
    ],
    "latency": 149.0692138671875,
    "name": "Group18",
    "gain": 2.3468017578125
  },
  {
    "nodes": [
      27
    ],
    "node_names": [
      "ladder_perfect_quant_linear_cast_27"
    ],
    "group_id": 19,
    "input_desc": [
      [
        "ladder_perfect_quant_linear_cast_27",
        27,
        0
      ],
      [
        "ladder_perfect_quant_linear_cast_27",
        27,
        1
      ]
    ],
    "output_desc": [
      [
        "ladder_perfect_quant_linear_cast_27",
        27,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group19(int8_t* __restrict__ p0, int8_t* __restrict__ p1, half* __restrict__ T_cast) {\n  \n  int T_perfect_quant_linear_local[112];\n  __shared__ signed char p0_shared[16384];\n  __shared__ signed char B_decode_shared[3584];\n  for (int i2_1_1_init = 0; i2_1_1_init < 2; ++i2_1_1_init) {\n    T_perfect_quant_linear_local[i2_1_1_init] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 28)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 56)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 84)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 2)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 30)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 58)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 86)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 4)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 32)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 60)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 88)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 6)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 34)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 62)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 90)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 8)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 36)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 64)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 92)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 10)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 38)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 66)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 94)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 12)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 40)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 68)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 96)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 14)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 42)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 70)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 98)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 16)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 44)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 72)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 100)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 18)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 46)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 74)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 102)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 20)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 48)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 76)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 104)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 22)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 50)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 78)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 106)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 24)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 52)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 80)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 108)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 26)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 54)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 82)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 110)] = 0;\n  }\n  for (int k_0 = 0; k_0 < 128; ++k_0) {\n    __syncthreads();\n    *(int4*)(p0_shared + (((int)threadIdx.x) * 16)) = *(int4*)(p0 + (((((((int)blockIdx.x) >> 9) * 2097152) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 2048)) = *(int4*)(p0 + ((((((((int)blockIdx.x) >> 9) * 2097152) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)) + 262144));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 4096)) = *(int4*)(p0 + ((((((((int)blockIdx.x) >> 9) * 2097152) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)) + 524288));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 6144)) = *(int4*)(p0 + ((((((((int)blockIdx.x) >> 9) * 2097152) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)) + 786432));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 8192)) = *(int4*)(p0 + ((((((((int)blockIdx.x) >> 9) * 2097152) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)) + 1048576));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 10240)) = *(int4*)(p0 + ((((((((int)blockIdx.x) >> 9) * 2097152) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)) + 1310720));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 12288)) = *(int4*)(p0 + ((((((((int)blockIdx.x) >> 9) * 2097152) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)) + 1572864));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 14336)) = *(int4*)(p0 + ((((((((int)blockIdx.x) >> 9) * 2097152) + ((((int)threadIdx.x) >> 6) * 131072)) + (k_0 * 1024)) + ((((int)threadIdx.x) & 63) * 16)) + 1835008));\n    for (int ax0_ax1_ax2_ax3_fused_1 = 0; ax0_ax1_ax2_ax3_fused_1 < 4; ++ax0_ax1_ax2_ax3_fused_1) {\n      B_decode_shared[((((int)threadIdx.x) * 4) + ax0_ax1_ax2_ax3_fused_1)] = ((p1[((((((((((int)blockIdx.x) & 511) >> 2) * 229376) + ((((int)threadIdx.x) >> 6) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 63) >> 5) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 31) >> 1))] >> ((signed char)(((((int)threadIdx.x) & 1) * 4) + ax0_ax1_ax2_ax3_fused_1))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_1 = 0; ax0_ax1_ax2_ax3_fused_1_1 < 4; ++ax0_ax1_ax2_ax3_fused_1_1) {\n      B_decode_shared[(((((int)threadIdx.x) * 4) + ax0_ax1_ax2_ax3_fused_1_1) + 512)] = ((p1[(((((((((((int)blockIdx.x) & 511) >> 2) * 229376) + ((((int)threadIdx.x) >> 6) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 63) >> 5) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 31) >> 1)) + 32768)] >> ((signed char)(((((int)threadIdx.x) & 1) * 4) + ax0_ax1_ax2_ax3_fused_1_1))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_2 = 0; ax0_ax1_ax2_ax3_fused_1_2 < 4; ++ax0_ax1_ax2_ax3_fused_1_2) {\n      B_decode_shared[(((((int)threadIdx.x) * 4) + ax0_ax1_ax2_ax3_fused_1_2) + 1024)] = ((p1[(((((((((((int)blockIdx.x) & 511) >> 2) * 229376) + ((((int)threadIdx.x) >> 6) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 63) >> 5) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 31) >> 1)) + 65536)] >> ((signed char)(((((int)threadIdx.x) & 1) * 4) + ax0_ax1_ax2_ax3_fused_1_2))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_3 = 0; ax0_ax1_ax2_ax3_fused_1_3 < 4; ++ax0_ax1_ax2_ax3_fused_1_3) {\n      B_decode_shared[(((((int)threadIdx.x) * 4) + ax0_ax1_ax2_ax3_fused_1_3) + 1536)] = ((p1[(((((((((((int)blockIdx.x) & 511) >> 2) * 229376) + ((((int)threadIdx.x) >> 6) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 63) >> 5) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 31) >> 1)) + 98304)] >> ((signed char)(((((int)threadIdx.x) & 1) * 4) + ax0_ax1_ax2_ax3_fused_1_3))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_4 = 0; ax0_ax1_ax2_ax3_fused_1_4 < 4; ++ax0_ax1_ax2_ax3_fused_1_4) {\n      B_decode_shared[(((((int)threadIdx.x) * 4) + ax0_ax1_ax2_ax3_fused_1_4) + 2048)] = ((p1[(((((((((((int)blockIdx.x) & 511) >> 2) * 229376) + ((((int)threadIdx.x) >> 6) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 63) >> 5) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 31) >> 1)) + 131072)] >> ((signed char)(((((int)threadIdx.x) & 1) * 4) + ax0_ax1_ax2_ax3_fused_1_4))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_5 = 0; ax0_ax1_ax2_ax3_fused_1_5 < 4; ++ax0_ax1_ax2_ax3_fused_1_5) {\n      B_decode_shared[(((((int)threadIdx.x) * 4) + ax0_ax1_ax2_ax3_fused_1_5) + 2560)] = ((p1[(((((((((((int)blockIdx.x) & 511) >> 2) * 229376) + ((((int)threadIdx.x) >> 6) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 63) >> 5) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 31) >> 1)) + 163840)] >> ((signed char)(((((int)threadIdx.x) & 1) * 4) + ax0_ax1_ax2_ax3_fused_1_5))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_6 = 0; ax0_ax1_ax2_ax3_fused_1_6 < 4; ++ax0_ax1_ax2_ax3_fused_1_6) {\n      B_decode_shared[(((((int)threadIdx.x) * 4) + ax0_ax1_ax2_ax3_fused_1_6) + 3072)] = ((p1[(((((((((((int)blockIdx.x) & 511) >> 2) * 229376) + ((((int)threadIdx.x) >> 6) * 16384)) + (k_0 * 128)) + (((((int)threadIdx.x) & 63) >> 5) * 64)) + ((((int)blockIdx.x) & 3) * 16)) + ((((int)threadIdx.x) & 31) >> 1)) + 196608)] >> ((signed char)(((((int)threadIdx.x) & 1) * 4) + ax0_ax1_ax2_ax3_fused_1_6))) & (signed char)1);\n    }\n    __syncthreads();\n    for (int k_1 = 0; k_1 < 2; ++k_1) {\n      for (int kk_1 = 0; kk_1 < 32; ++kk_1) {\n        for (int i2_1_1 = 0; i2_1_1 < 2; ++i2_1_1) {\n          T_perfect_quant_linear_local[i2_1_1] = (T_perfect_quant_linear_local[i2_1_1] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 28)] = (T_perfect_quant_linear_local[(i2_1_1 + 28)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[(((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 56)] = (T_perfect_quant_linear_local[(i2_1_1 + 56)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)B_decode_shared[(((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 84)] = (T_perfect_quant_linear_local[(i2_1_1 + 84)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)B_decode_shared[(((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 2)] = (T_perfect_quant_linear_local[(i2_1_1 + 2)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 256)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 30)] = (T_perfect_quant_linear_local[(i2_1_1 + 30)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 256)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 58)] = (T_perfect_quant_linear_local[(i2_1_1 + 58)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 256)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 86)] = (T_perfect_quant_linear_local[(i2_1_1 + 86)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 256)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 4)] = (T_perfect_quant_linear_local[(i2_1_1 + 4)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 32)] = (T_perfect_quant_linear_local[(i2_1_1 + 32)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 60)] = (T_perfect_quant_linear_local[(i2_1_1 + 60)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 88)] = (T_perfect_quant_linear_local[(i2_1_1 + 88)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 6)] = (T_perfect_quant_linear_local[(i2_1_1 + 6)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 768)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 34)] = (T_perfect_quant_linear_local[(i2_1_1 + 34)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 768)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 62)] = (T_perfect_quant_linear_local[(i2_1_1 + 62)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 768)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 90)] = (T_perfect_quant_linear_local[(i2_1_1 + 90)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 768)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 8)] = (T_perfect_quant_linear_local[(i2_1_1 + 8)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 36)] = (T_perfect_quant_linear_local[(i2_1_1 + 36)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 64)] = (T_perfect_quant_linear_local[(i2_1_1 + 64)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 92)] = (T_perfect_quant_linear_local[(i2_1_1 + 92)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 10)] = (T_perfect_quant_linear_local[(i2_1_1 + 10)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1280)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 38)] = (T_perfect_quant_linear_local[(i2_1_1 + 38)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1280)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 66)] = (T_perfect_quant_linear_local[(i2_1_1 + 66)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1280)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 94)] = (T_perfect_quant_linear_local[(i2_1_1 + 94)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1280)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 12)] = (T_perfect_quant_linear_local[(i2_1_1 + 12)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 40)] = (T_perfect_quant_linear_local[(i2_1_1 + 40)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 68)] = (T_perfect_quant_linear_local[(i2_1_1 + 68)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 96)] = (T_perfect_quant_linear_local[(i2_1_1 + 96)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 14)] = (T_perfect_quant_linear_local[(i2_1_1 + 14)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1792)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 42)] = (T_perfect_quant_linear_local[(i2_1_1 + 42)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1792)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 70)] = (T_perfect_quant_linear_local[(i2_1_1 + 70)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1792)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 98)] = (T_perfect_quant_linear_local[(i2_1_1 + 98)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 1792)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 16)] = (T_perfect_quant_linear_local[(i2_1_1 + 16)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 44)] = (T_perfect_quant_linear_local[(i2_1_1 + 44)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 72)] = (T_perfect_quant_linear_local[(i2_1_1 + 72)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 100)] = (T_perfect_quant_linear_local[(i2_1_1 + 100)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 18)] = (T_perfect_quant_linear_local[(i2_1_1 + 18)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2304)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 46)] = (T_perfect_quant_linear_local[(i2_1_1 + 46)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2304)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 74)] = (T_perfect_quant_linear_local[(i2_1_1 + 74)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2304)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 102)] = (T_perfect_quant_linear_local[(i2_1_1 + 102)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2304)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 20)] = (T_perfect_quant_linear_local[(i2_1_1 + 20)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 48)] = (T_perfect_quant_linear_local[(i2_1_1 + 48)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 76)] = (T_perfect_quant_linear_local[(i2_1_1 + 76)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 104)] = (T_perfect_quant_linear_local[(i2_1_1 + 104)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 22)] = (T_perfect_quant_linear_local[(i2_1_1 + 22)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2816)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 50)] = (T_perfect_quant_linear_local[(i2_1_1 + 50)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2816)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 78)] = (T_perfect_quant_linear_local[(i2_1_1 + 78)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2816)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 106)] = (T_perfect_quant_linear_local[(i2_1_1 + 106)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 2816)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 24)] = (T_perfect_quant_linear_local[(i2_1_1 + 24)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 52)] = (T_perfect_quant_linear_local[(i2_1_1 + 52)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 80)] = (T_perfect_quant_linear_local[(i2_1_1 + 80)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 108)] = (T_perfect_quant_linear_local[(i2_1_1 + 108)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 26)] = (T_perfect_quant_linear_local[(i2_1_1 + 26)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3328)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 54)] = (T_perfect_quant_linear_local[(i2_1_1 + 54)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3328)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 82)] = (T_perfect_quant_linear_local[(i2_1_1 + 82)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 256)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3328)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 110)] = (T_perfect_quant_linear_local[(i2_1_1 + 110)] + (((int)p0_shared[(((((((((int)threadIdx.x) >> 3) * 1024) + (k_1 * 512)) + (((((int)threadIdx.x) & 7) >> 2) * 64)) + (i2_1_1 * 32)) + kk_1) + 384)]) * ((int)B_decode_shared[((((k_1 * 128) + ((((int)threadIdx.x) & 3) * 32)) + kk_1) + 3328)])));\n        }\n      }\n    }\n  }\n  for (int ax0 = 0; ax0 < 2; ++ax0) {\n    T_cast[((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3))] = ((half)T_perfect_quant_linear_local[ax0]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 64)] = ((half)T_perfect_quant_linear_local[(ax0 + 28)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 128)] = ((half)T_perfect_quant_linear_local[(ax0 + 56)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 192)] = ((half)T_perfect_quant_linear_local[(ax0 + 84)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 256)] = ((half)T_perfect_quant_linear_local[(ax0 + 2)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 320)] = ((half)T_perfect_quant_linear_local[(ax0 + 30)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 384)] = ((half)T_perfect_quant_linear_local[(ax0 + 58)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 448)] = ((half)T_perfect_quant_linear_local[(ax0 + 86)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 512)] = ((half)T_perfect_quant_linear_local[(ax0 + 4)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 576)] = ((half)T_perfect_quant_linear_local[(ax0 + 32)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 640)] = ((half)T_perfect_quant_linear_local[(ax0 + 60)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 704)] = ((half)T_perfect_quant_linear_local[(ax0 + 88)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 768)] = ((half)T_perfect_quant_linear_local[(ax0 + 6)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 832)] = ((half)T_perfect_quant_linear_local[(ax0 + 34)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 896)] = ((half)T_perfect_quant_linear_local[(ax0 + 62)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 960)] = ((half)T_perfect_quant_linear_local[(ax0 + 90)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1024)] = ((half)T_perfect_quant_linear_local[(ax0 + 8)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1088)] = ((half)T_perfect_quant_linear_local[(ax0 + 36)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1152)] = ((half)T_perfect_quant_linear_local[(ax0 + 64)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1216)] = ((half)T_perfect_quant_linear_local[(ax0 + 92)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1280)] = ((half)T_perfect_quant_linear_local[(ax0 + 10)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1344)] = ((half)T_perfect_quant_linear_local[(ax0 + 38)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1408)] = ((half)T_perfect_quant_linear_local[(ax0 + 66)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1472)] = ((half)T_perfect_quant_linear_local[(ax0 + 94)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1536)] = ((half)T_perfect_quant_linear_local[(ax0 + 12)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1600)] = ((half)T_perfect_quant_linear_local[(ax0 + 40)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1664)] = ((half)T_perfect_quant_linear_local[(ax0 + 68)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1728)] = ((half)T_perfect_quant_linear_local[(ax0 + 96)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1792)] = ((half)T_perfect_quant_linear_local[(ax0 + 14)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1856)] = ((half)T_perfect_quant_linear_local[(ax0 + 42)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1920)] = ((half)T_perfect_quant_linear_local[(ax0 + 70)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 1984)] = ((half)T_perfect_quant_linear_local[(ax0 + 98)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2048)] = ((half)T_perfect_quant_linear_local[(ax0 + 16)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2112)] = ((half)T_perfect_quant_linear_local[(ax0 + 44)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2176)] = ((half)T_perfect_quant_linear_local[(ax0 + 72)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2240)] = ((half)T_perfect_quant_linear_local[(ax0 + 100)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2304)] = ((half)T_perfect_quant_linear_local[(ax0 + 18)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2368)] = ((half)T_perfect_quant_linear_local[(ax0 + 46)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2432)] = ((half)T_perfect_quant_linear_local[(ax0 + 74)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2496)] = ((half)T_perfect_quant_linear_local[(ax0 + 102)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2560)] = ((half)T_perfect_quant_linear_local[(ax0 + 20)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2624)] = ((half)T_perfect_quant_linear_local[(ax0 + 48)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2688)] = ((half)T_perfect_quant_linear_local[(ax0 + 76)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2752)] = ((half)T_perfect_quant_linear_local[(ax0 + 104)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2816)] = ((half)T_perfect_quant_linear_local[(ax0 + 22)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2880)] = ((half)T_perfect_quant_linear_local[(ax0 + 50)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 2944)] = ((half)T_perfect_quant_linear_local[(ax0 + 78)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 3008)] = ((half)T_perfect_quant_linear_local[(ax0 + 106)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 3072)] = ((half)T_perfect_quant_linear_local[(ax0 + 24)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 3136)] = ((half)T_perfect_quant_linear_local[(ax0 + 52)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 3200)] = ((half)T_perfect_quant_linear_local[(ax0 + 80)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 3264)] = ((half)T_perfect_quant_linear_local[(ax0 + 108)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 3328)] = ((half)T_perfect_quant_linear_local[(ax0 + 26)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 3392)] = ((half)T_perfect_quant_linear_local[(ax0 + 54)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 3456)] = ((half)T_perfect_quant_linear_local[(ax0 + 82)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 9) * 7340032) + ((((int)threadIdx.x) >> 3) * 458752)) + (((((int)blockIdx.x) & 511) >> 2) * 3584)) + (((((int)threadIdx.x) & 7) >> 2) * 32)) + (ax0 * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 3520)] = ((half)T_perfect_quant_linear_local[(ax0 + 110)]);\n  }\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      8192,
      1,
      1
    ],
    "latency": 151.416015625,
    "name": "Group19",
    "gain": 0
  },
  {
    "nodes": [
      28
    ],
    "node_names": [
      "sigmoid_multiply_reshape_multiply_reshape_cast_cast_reshape_28"
    ],
    "group_id": 20,
    "input_desc": [
      [
        "sigmoid_multiply_reshape_multiply_reshape_cast_cast_reshape_28",
        28,
        0
      ],
      [
        "sigmoid_multiply_reshape_multiply_reshape_cast_cast_reshape_28",
        28,
        1
      ]
    ],
    "output_desc": [
      [
        "sigmoid_multiply_reshape_multiply_reshape_cast_cast_reshape_28",
        28,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group20(half* __restrict__ p0, half* __restrict__ p1, int8_t* __restrict__ T_reshape_9) {\n  \n  T_reshape_9[((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 4))] = ((signed char)((float)((p0[((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 4))] * (__float2half_rn(1.000000e+00f) / (__float2half_rn(1.000000e+00f) + hexp((__float2half_rn(0.000000e+00f) - p0[((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 4))]))))) * p1[((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 4))])));\n  T_reshape_9[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 4)) + 1)] = ((signed char)((float)((p0[(((((int)blockIdx.x) / 56) * 28672) + (((((((int)blockIdx.x) % 896) * 512) + (((int)threadIdx.x) * 4)) + 1) % 28672))] * (__float2half_rn(1.000000e+00f) / (__float2half_rn(1.000000e+00f) + hexp((__float2half_rn(0.000000e+00f) - p0[(((((int)blockIdx.x) / 56) * 28672) + (((((((int)blockIdx.x) % 896) * 512) + (((int)threadIdx.x) * 4)) + 1) % 28672))]))))) * p1[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 4)) + 1)])));\n  T_reshape_9[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 4)) + 2)] = ((signed char)((float)((p0[(((((int)blockIdx.x) / 56) * 28672) + (((((((int)blockIdx.x) % 896) * 512) + (((int)threadIdx.x) * 4)) + 2) % 28672))] * (__float2half_rn(1.000000e+00f) / (__float2half_rn(1.000000e+00f) + hexp((__float2half_rn(0.000000e+00f) - p0[(((((int)blockIdx.x) / 56) * 28672) + (((((((int)blockIdx.x) % 896) * 512) + (((int)threadIdx.x) * 4)) + 2) % 28672))]))))) * p1[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 4)) + 2)])));\n  T_reshape_9[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 4)) + 3)] = ((signed char)((float)((p0[(((((int)blockIdx.x) / 56) * 28672) + (((((((int)blockIdx.x) % 896) * 512) + (((int)threadIdx.x) * 4)) + 3) % 28672))] * (__float2half_rn(1.000000e+00f) / (__float2half_rn(1.000000e+00f) + hexp((__float2half_rn(0.000000e+00f) - p0[(((((int)blockIdx.x) / 56) * 28672) + (((((((int)blockIdx.x) % 896) * 512) + (((int)threadIdx.x) * 4)) + 3) % 28672))]))))) * p1[(((((int)blockIdx.x) * 512) + (((int)threadIdx.x) * 4)) + 3)])));\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      229376,
      1,
      1
    ],
    "latency": 0.7270346283912659,
    "name": "Group20",
    "gain": 0
  },
  {
    "nodes": [
      29
    ],
    "node_names": [
      "ladder_perfect_quant_linear_cast_29"
    ],
    "group_id": 21,
    "input_desc": [
      [
        "ladder_perfect_quant_linear_cast_29",
        29,
        0
      ],
      [
        "ladder_perfect_quant_linear_cast_29",
        29,
        1
      ]
    ],
    "output_desc": [
      [
        "ladder_perfect_quant_linear_cast_29",
        29,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group21(int8_t* __restrict__ p0, int8_t* __restrict__ p1, half* __restrict__ T_cast) {\n  \n  int T_perfect_quant_linear_local[128];\n  __shared__ signed char p0_shared[8192];\n  __shared__ signed char B_decode_shared[8192];\n  for (int i2_1_1_init = 0; i2_1_1_init < 2; ++i2_1_1_init) {\n    T_perfect_quant_linear_local[i2_1_1_init] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 32)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 64)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 96)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 2)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 34)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 66)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 98)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 4)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 36)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 68)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 100)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 6)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 38)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 70)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 102)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 8)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 40)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 72)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 104)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 10)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 42)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 74)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 106)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 12)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 44)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 76)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 108)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 14)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 46)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 78)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 110)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 16)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 48)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 80)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 112)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 18)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 50)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 82)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 114)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 20)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 52)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 84)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 116)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 22)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 54)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 86)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 118)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 24)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 56)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 88)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 120)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 26)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 58)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 90)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 122)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 28)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 60)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 92)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 124)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 30)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 62)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 94)] = 0;\n    T_perfect_quant_linear_local[(i2_1_1_init + 126)] = 0;\n  }\n  for (int k_0 = 0; k_0 < 448; ++k_0) {\n    __syncthreads();\n    *(int4*)(p0_shared + (((int)threadIdx.x) * 16)) = *(int4*)(p0 + (((((((((int)blockIdx.x) >> 7) * 7340032) + ((((int)threadIdx.x) >> 5) * 458752)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 31) >> 4) * 512)) + (((((int)blockIdx.x) & 3) >> 1) * 256)) + ((((int)threadIdx.x) & 15) * 16)));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 2048)) = *(int4*)(p0 + ((((((((((int)blockIdx.x) >> 7) * 7340032) + ((((int)threadIdx.x) >> 5) * 458752)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 31) >> 4) * 512)) + (((((int)blockIdx.x) & 3) >> 1) * 256)) + ((((int)threadIdx.x) & 15) * 16)) + 1835008));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 4096)) = *(int4*)(p0 + ((((((((((int)blockIdx.x) >> 7) * 7340032) + ((((int)threadIdx.x) >> 5) * 458752)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 31) >> 4) * 512)) + (((((int)blockIdx.x) & 3) >> 1) * 256)) + ((((int)threadIdx.x) & 15) * 16)) + 3670016));\n    *(int4*)(p0_shared + ((((int)threadIdx.x) * 16) + 6144)) = *(int4*)(p0 + ((((((((((int)blockIdx.x) >> 7) * 7340032) + ((((int)threadIdx.x) >> 5) * 458752)) + (k_0 * 1024)) + (((((int)threadIdx.x) & 31) >> 4) * 512)) + (((((int)blockIdx.x) & 3) >> 1) * 256)) + ((((int)threadIdx.x) & 15) * 16)) + 5505024));\n    for (int ax0_ax1_ax2_ax3_fused_1 = 0; ax0_ax1_ax2_ax3_fused_1 < 16; ++ax0_ax1_ax2_ax3_fused_1) {\n      B_decode_shared[((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1)] = ((p1[(((((((((((int)blockIdx.x) & 127) >> 2) * 917504) + ((((int)threadIdx.x) >> 5) * 57344)) + (k_0 * 128)) + (((((int)threadIdx.x) & 31) >> 4) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + (ax0_ax1_ax2_ax3_fused_1 >> 3))] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_1 = 0; ax0_ax1_ax2_ax3_fused_1_1 < 16; ++ax0_ax1_ax2_ax3_fused_1_1) {\n      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_1) + 2048)] = ((p1[((((((((((((int)blockIdx.x) & 127) >> 2) * 917504) + ((((int)threadIdx.x) >> 5) * 57344)) + (k_0 * 128)) + (((((int)threadIdx.x) & 31) >> 4) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + (ax0_ax1_ax2_ax3_fused_1_1 >> 3)) + 229376)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_1 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_2 = 0; ax0_ax1_ax2_ax3_fused_1_2 < 16; ++ax0_ax1_ax2_ax3_fused_1_2) {\n      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_2) + 4096)] = ((p1[((((((((((((int)blockIdx.x) & 127) >> 2) * 917504) + ((((int)threadIdx.x) >> 5) * 57344)) + (k_0 * 128)) + (((((int)threadIdx.x) & 31) >> 4) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + (ax0_ax1_ax2_ax3_fused_1_2 >> 3)) + 458752)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_2 & 7))) & (signed char)1);\n    }\n    for (int ax0_ax1_ax2_ax3_fused_1_3 = 0; ax0_ax1_ax2_ax3_fused_1_3 < 16; ++ax0_ax1_ax2_ax3_fused_1_3) {\n      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_ax2_ax3_fused_1_3) + 6144)] = ((p1[((((((((((((int)blockIdx.x) & 127) >> 2) * 917504) + ((((int)threadIdx.x) >> 5) * 57344)) + (k_0 * 128)) + (((((int)threadIdx.x) & 31) >> 4) * 64)) + ((((int)blockIdx.x) & 1) * 32)) + ((((int)threadIdx.x) & 15) * 2)) + (ax0_ax1_ax2_ax3_fused_1_3 >> 3)) + 688128)] >> ((signed char)(ax0_ax1_ax2_ax3_fused_1_3 & 7))) & (signed char)1);\n    }\n    __syncthreads();\n    for (int k_1 = 0; k_1 < 2; ++k_1) {\n      for (int kk_1 = 0; kk_1 < 32; ++kk_1) {\n        for (int i2_1_1 = 0; i2_1_1 < 2; ++i2_1_1) {\n          T_perfect_quant_linear_local[i2_1_1] = (T_perfect_quant_linear_local[i2_1_1] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 32)] = (T_perfect_quant_linear_local[(i2_1_1 + 32)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 64)] = (T_perfect_quant_linear_local[(i2_1_1 + 64)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 96)] = (T_perfect_quant_linear_local[(i2_1_1 + 96)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[(((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 2)] = (T_perfect_quant_linear_local[(i2_1_1 + 2)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 34)] = (T_perfect_quant_linear_local[(i2_1_1 + 34)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 66)] = (T_perfect_quant_linear_local[(i2_1_1 + 66)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 98)] = (T_perfect_quant_linear_local[(i2_1_1 + 98)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 512)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 4)] = (T_perfect_quant_linear_local[(i2_1_1 + 4)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 36)] = (T_perfect_quant_linear_local[(i2_1_1 + 36)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 68)] = (T_perfect_quant_linear_local[(i2_1_1 + 68)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 100)] = (T_perfect_quant_linear_local[(i2_1_1 + 100)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1024)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 6)] = (T_perfect_quant_linear_local[(i2_1_1 + 6)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 38)] = (T_perfect_quant_linear_local[(i2_1_1 + 38)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 70)] = (T_perfect_quant_linear_local[(i2_1_1 + 70)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 102)] = (T_perfect_quant_linear_local[(i2_1_1 + 102)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 1536)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 8)] = (T_perfect_quant_linear_local[(i2_1_1 + 8)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 40)] = (T_perfect_quant_linear_local[(i2_1_1 + 40)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 72)] = (T_perfect_quant_linear_local[(i2_1_1 + 72)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 104)] = (T_perfect_quant_linear_local[(i2_1_1 + 104)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2048)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 10)] = (T_perfect_quant_linear_local[(i2_1_1 + 10)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 42)] = (T_perfect_quant_linear_local[(i2_1_1 + 42)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 74)] = (T_perfect_quant_linear_local[(i2_1_1 + 74)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 106)] = (T_perfect_quant_linear_local[(i2_1_1 + 106)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 2560)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 12)] = (T_perfect_quant_linear_local[(i2_1_1 + 12)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 44)] = (T_perfect_quant_linear_local[(i2_1_1 + 44)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 76)] = (T_perfect_quant_linear_local[(i2_1_1 + 76)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 108)] = (T_perfect_quant_linear_local[(i2_1_1 + 108)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3072)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 14)] = (T_perfect_quant_linear_local[(i2_1_1 + 14)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 46)] = (T_perfect_quant_linear_local[(i2_1_1 + 46)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 78)] = (T_perfect_quant_linear_local[(i2_1_1 + 78)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 110)] = (T_perfect_quant_linear_local[(i2_1_1 + 110)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 3584)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 16)] = (T_perfect_quant_linear_local[(i2_1_1 + 16)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 48)] = (T_perfect_quant_linear_local[(i2_1_1 + 48)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 80)] = (T_perfect_quant_linear_local[(i2_1_1 + 80)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 112)] = (T_perfect_quant_linear_local[(i2_1_1 + 112)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4096)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 18)] = (T_perfect_quant_linear_local[(i2_1_1 + 18)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 50)] = (T_perfect_quant_linear_local[(i2_1_1 + 50)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 82)] = (T_perfect_quant_linear_local[(i2_1_1 + 82)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 114)] = (T_perfect_quant_linear_local[(i2_1_1 + 114)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 4608)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 20)] = (T_perfect_quant_linear_local[(i2_1_1 + 20)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 52)] = (T_perfect_quant_linear_local[(i2_1_1 + 52)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 84)] = (T_perfect_quant_linear_local[(i2_1_1 + 84)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 116)] = (T_perfect_quant_linear_local[(i2_1_1 + 116)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5120)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 22)] = (T_perfect_quant_linear_local[(i2_1_1 + 22)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 54)] = (T_perfect_quant_linear_local[(i2_1_1 + 54)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 86)] = (T_perfect_quant_linear_local[(i2_1_1 + 86)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 118)] = (T_perfect_quant_linear_local[(i2_1_1 + 118)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 5632)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 24)] = (T_perfect_quant_linear_local[(i2_1_1 + 24)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 56)] = (T_perfect_quant_linear_local[(i2_1_1 + 56)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 88)] = (T_perfect_quant_linear_local[(i2_1_1 + 88)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 120)] = (T_perfect_quant_linear_local[(i2_1_1 + 120)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6144)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 26)] = (T_perfect_quant_linear_local[(i2_1_1 + 26)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 58)] = (T_perfect_quant_linear_local[(i2_1_1 + 58)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 90)] = (T_perfect_quant_linear_local[(i2_1_1 + 90)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 122)] = (T_perfect_quant_linear_local[(i2_1_1 + 122)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 6656)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 28)] = (T_perfect_quant_linear_local[(i2_1_1 + 28)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 60)] = (T_perfect_quant_linear_local[(i2_1_1 + 60)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 92)] = (T_perfect_quant_linear_local[(i2_1_1 + 92)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 124)] = (T_perfect_quant_linear_local[(i2_1_1 + 124)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7168)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 30)] = (T_perfect_quant_linear_local[(i2_1_1 + 30)] + (((int)p0_shared[(((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7680)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 62)] = (T_perfect_quant_linear_local[(i2_1_1 + 62)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 64)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7680)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 94)] = (T_perfect_quant_linear_local[(i2_1_1 + 94)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 128)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7680)])));\n          T_perfect_quant_linear_local[(i2_1_1 + 126)] = (T_perfect_quant_linear_local[(i2_1_1 + 126)] + (((int)p0_shared[((((((((int)threadIdx.x) >> 3) * 512) + (k_1 * 256)) + (i2_1_1 * 32)) + kk_1) + 192)]) * ((int)B_decode_shared[((((k_1 * 256) + ((((int)threadIdx.x) & 7) * 32)) + kk_1) + 7680)])));\n        }\n      }\n    }\n  }\n  for (int ax0 = 0; ax0 < 2; ++ax0) {\n    T_cast[((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7))] = ((half)T_perfect_quant_linear_local[ax0]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 32)] = ((half)T_perfect_quant_linear_local[(ax0 + 32)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 64)] = ((half)T_perfect_quant_linear_local[(ax0 + 64)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 96)] = ((half)T_perfect_quant_linear_local[(ax0 + 96)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 256)] = ((half)T_perfect_quant_linear_local[(ax0 + 2)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 288)] = ((half)T_perfect_quant_linear_local[(ax0 + 34)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 320)] = ((half)T_perfect_quant_linear_local[(ax0 + 66)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 352)] = ((half)T_perfect_quant_linear_local[(ax0 + 98)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 512)] = ((half)T_perfect_quant_linear_local[(ax0 + 4)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 544)] = ((half)T_perfect_quant_linear_local[(ax0 + 36)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 576)] = ((half)T_perfect_quant_linear_local[(ax0 + 68)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 608)] = ((half)T_perfect_quant_linear_local[(ax0 + 100)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 768)] = ((half)T_perfect_quant_linear_local[(ax0 + 6)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 800)] = ((half)T_perfect_quant_linear_local[(ax0 + 38)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 832)] = ((half)T_perfect_quant_linear_local[(ax0 + 70)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 864)] = ((half)T_perfect_quant_linear_local[(ax0 + 102)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1024)] = ((half)T_perfect_quant_linear_local[(ax0 + 8)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1056)] = ((half)T_perfect_quant_linear_local[(ax0 + 40)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1088)] = ((half)T_perfect_quant_linear_local[(ax0 + 72)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1120)] = ((half)T_perfect_quant_linear_local[(ax0 + 104)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1280)] = ((half)T_perfect_quant_linear_local[(ax0 + 10)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1312)] = ((half)T_perfect_quant_linear_local[(ax0 + 42)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1344)] = ((half)T_perfect_quant_linear_local[(ax0 + 74)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1376)] = ((half)T_perfect_quant_linear_local[(ax0 + 106)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1536)] = ((half)T_perfect_quant_linear_local[(ax0 + 12)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1568)] = ((half)T_perfect_quant_linear_local[(ax0 + 44)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1600)] = ((half)T_perfect_quant_linear_local[(ax0 + 76)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1632)] = ((half)T_perfect_quant_linear_local[(ax0 + 108)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1792)] = ((half)T_perfect_quant_linear_local[(ax0 + 14)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1824)] = ((half)T_perfect_quant_linear_local[(ax0 + 46)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1856)] = ((half)T_perfect_quant_linear_local[(ax0 + 78)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 1888)] = ((half)T_perfect_quant_linear_local[(ax0 + 110)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2048)] = ((half)T_perfect_quant_linear_local[(ax0 + 16)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2080)] = ((half)T_perfect_quant_linear_local[(ax0 + 48)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2112)] = ((half)T_perfect_quant_linear_local[(ax0 + 80)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2144)] = ((half)T_perfect_quant_linear_local[(ax0 + 112)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2304)] = ((half)T_perfect_quant_linear_local[(ax0 + 18)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2336)] = ((half)T_perfect_quant_linear_local[(ax0 + 50)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2368)] = ((half)T_perfect_quant_linear_local[(ax0 + 82)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2400)] = ((half)T_perfect_quant_linear_local[(ax0 + 114)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2560)] = ((half)T_perfect_quant_linear_local[(ax0 + 20)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2592)] = ((half)T_perfect_quant_linear_local[(ax0 + 52)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2624)] = ((half)T_perfect_quant_linear_local[(ax0 + 84)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2656)] = ((half)T_perfect_quant_linear_local[(ax0 + 116)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2816)] = ((half)T_perfect_quant_linear_local[(ax0 + 22)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2848)] = ((half)T_perfect_quant_linear_local[(ax0 + 54)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2880)] = ((half)T_perfect_quant_linear_local[(ax0 + 86)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 2912)] = ((half)T_perfect_quant_linear_local[(ax0 + 118)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3072)] = ((half)T_perfect_quant_linear_local[(ax0 + 24)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3104)] = ((half)T_perfect_quant_linear_local[(ax0 + 56)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3136)] = ((half)T_perfect_quant_linear_local[(ax0 + 88)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3168)] = ((half)T_perfect_quant_linear_local[(ax0 + 120)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3328)] = ((half)T_perfect_quant_linear_local[(ax0 + 26)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3360)] = ((half)T_perfect_quant_linear_local[(ax0 + 58)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3392)] = ((half)T_perfect_quant_linear_local[(ax0 + 90)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3424)] = ((half)T_perfect_quant_linear_local[(ax0 + 122)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3584)] = ((half)T_perfect_quant_linear_local[(ax0 + 28)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3616)] = ((half)T_perfect_quant_linear_local[(ax0 + 60)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3648)] = ((half)T_perfect_quant_linear_local[(ax0 + 92)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3680)] = ((half)T_perfect_quant_linear_local[(ax0 + 124)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3840)] = ((half)T_perfect_quant_linear_local[(ax0 + 30)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3872)] = ((half)T_perfect_quant_linear_local[(ax0 + 62)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3904)] = ((half)T_perfect_quant_linear_local[(ax0 + 94)]);\n    T_cast[(((((((((((int)blockIdx.x) >> 7) * 2097152) + ((((int)threadIdx.x) >> 3) * 131072)) + (((((int)blockIdx.x) & 127) >> 2) * 4096)) + (((((int)blockIdx.x) & 3) >> 1) * 128)) + (ax0 * 16)) + ((((int)blockIdx.x) & 1) * 8)) + (((int)threadIdx.x) & 7)) + 3936)] = ((half)T_perfect_quant_linear_local[(ax0 + 126)]);\n  }\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      2048,
      1,
      1
    ],
    "latency": 169.30406188964844,
    "name": "Group21",
    "gain": 0
  },
  {
    "nodes": [
      30
    ],
    "node_names": [
      "reshape_add_30"
    ],
    "group_id": 22,
    "input_desc": [
      [
        "reshape_add_30",
        30,
        0
      ],
      [
        "reshape_add_30",
        30,
        1
      ]
    ],
    "output_desc": [
      [
        "reshape_add_30",
        30,
        0
      ]
    ],
    "code": "__global__ void __launch_bounds__(128) Group15(half* __restrict__ p0, half* __restrict__ p1, half* __restrict__ T_add) {\n  \n  T_add[(((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2))] = (p1[(((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2))] + p0[(((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2))]);\n  T_add[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32)] = (p1[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32)] + p0[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 32)]);\n  T_add[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] = (p1[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 1)] + p0[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 1)]);\n  T_add[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 33)] = (p1[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 33)] + p0[((((((((int)blockIdx.x) >> 7) * 65536) + ((((int)threadIdx.x) >> 4) * 8192)) + ((((int)blockIdx.x) & 127) * 64)) + ((((int)threadIdx.x) & 15) * 2)) + 33)]);\n}\n\n",
    "block_size": [
      128,
      1,
      1
    ],
    "grid_size": [
      65536,
      1,
      1
    ],
    "latency": 0.27654826641082764,
    "name": "Group15",
    "gain": 0
  }
]