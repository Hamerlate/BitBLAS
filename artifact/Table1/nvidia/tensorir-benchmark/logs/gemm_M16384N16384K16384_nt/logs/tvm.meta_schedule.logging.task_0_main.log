2023-10-25 06:30:38 [INFO] [task_scheduler.cc:160] Initializing Task #0: "main"
2023-10-25 06:30:38 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        for i, j, k in T.grid(16384, 16384, 16384):
            with T.block("B"):
                vi, vj, vk = T.axis.remap("SSR", [i, j, k])
                T.reads(A[vi, vk], B[vj, vk])
                T.writes(C[vi, vj])
                with T.init():
                    C[vi, vj] = T.float16(0)
                C[vi, vj] = C[vi, vj] + A[vi, vk] * B[vj, vk]
2023-10-25 06:30:38 [INFO] [multi_level_tiling_tensor_core.cc:216] Sketch 0: tensorizing with wmma_sync_16x16x16_f16f16f16_trans
2023-10-25 06:30:38 [INFO] [multi_level_tiling_tensor_core.cc:216] Sketch 1: tensorizing with wmma_sync_16x16x16_f16f16f16
2023-10-25 06:30:38 [INFO] [task_scheduler.cc:164] Total 2 design space(s) generated
2023-10-25 06:30:38 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            C_reindex_shared_dyn = T.alloc_buffer((64, 256, 16, 4, 16, 16), "float16", scope="shared.dyn")
            C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((64, 256, 16, 4, 16, 16), "float16", scope="wmma.accumulator")
            A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
            B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
            A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
            B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
            for ax0_0_0_ax1_0_0_fused in T.thread_binding(2, thread="blockIdx.y"):
                for ax0_0_1_ax1_0_1_fused in T.thread_binding(1, thread="blockIdx.x"):
                    for ax0_0_2_ax1_0_2_fused in T.thread_binding(8192, thread="threadIdx.y"):
                        for ax2_0_0 in range(8):
                            for ax0_ax1_fused in range(16777216):
                                with T.block("A_reindex_shared.dyn"):
                                    v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused * 8192 + ax0_ax1_fused // 2048)
                                    v1 = T.axis.spatial(16384, ax2_0_0 * 2048 + ax0_ax1_fused % 2048)
                                    T.reads(A[v0, v1])
                                    T.writes(A_reindex_shared_dyn[v0, v1])
                                    T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]], "meta_schedule.cooperative_fetch": 4})
                                    A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                            for ax0_ax1_fused in range(33554432):
                                with T.block("B_reindex_shared.dyn"):
                                    v0 = T.axis.spatial(16384, ax2_0_0 * 2048 + ax0_ax1_fused // 16384)
                                    v1 = T.axis.spatial(16384, ax0_ax1_fused % 16384)
                                    T.reads(B[v1, v0])
                                    T.writes(B_reindex_shared_dyn[v0, v1])
                                    T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]], "meta_schedule.cooperative_fetch": 4})
                                    B_reindex_shared_dyn[v0, v1] = B[v1, v0]
                            for ax2_0_1 in range(32):
                                for ax0_0, ax1_0 in T.grid(16, 4):
                                    with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                        v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 512 + ax0_0_2_ax1_0_2_fused // 256 * 16 + ax0_0)
                                        v1_o = T.axis.spatial(1024, ax2_0_0 * 128 + ax2_0_1 * 4 + ax1_0)
                                        T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                        T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                        T.block_attr({"meta_schedule.auto_tensorize": "wmma_load_16x16x16_f16_a_shared_dyn"})
                                        for ax0_1, ax1_1 in T.grid(16, 16):
                                            with T.block("A_reindex_shared.dyn_wmma.matrix_a"):
                                                v0_i, v1_i = T.axis.remap("SS", [ax0_1, ax1_1])
                                                T.reads(A_reindex_shared_dyn[v0_o * 16 + v0_i, v1_o * 16 + v1_i])
                                                T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16 + v0_i, v1_o * 16 + v1_i])
                                                A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16 + v0_i, v1_o * 16 + v1_i] = A_reindex_shared_dyn[v0_o * 16 + v0_i, v1_o * 16 + v1_i]
                                for ax0_0, ax1_0 in T.grid(4, 4):
                                    with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                        v0_o = T.axis.spatial(1024, ax2_0_0 * 128 + ax2_0_1 * 4 + ax0_0)
                                        v1_o = T.axis.spatial(1024, ax0_0_2_ax1_0_2_fused % 256 * 4 + ax1_0)
                                        T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                        T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                        T.block_attr({"meta_schedule.auto_tensorize": "wmma_load_16x16x16_f16_b_shared_dyn"})
                                        for ax0_1, ax1_1 in T.grid(16, 16):
                                            with T.block("B_reindex_shared.dyn_wmma.matrix_b"):
                                                v0_i, v1_i = T.axis.remap("SS", [ax0_1, ax1_1])
                                                T.reads(B_reindex_shared_dyn[v0_o * 16 + v0_i, v1_o * 16 + v1_i])
                                                T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16 + v0_i, v1_o * 16 + v1_i])
                                                B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16 + v0_i, v1_o * 16 + v1_i] = B_reindex_shared_dyn[v0_o * 16 + v0_i, v1_o * 16 + v1_i]
                                for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(4, 2, 4, 4, 2):
                                    with T.block("B_o"):
                                        v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 512 + ax0_0_2_ax1_0_2_fused // 256 * 16 + ax0_0_3 * 4 + ax0_0_4)
                                        v1_o = T.axis.spatial(1024, ax0_0_2_ax1_0_2_fused % 256 * 4 + ax1_0_3 * 2 + ax1_0_4)
                                        v2_o = T.axis.reduce(1024, ax2_0_0 * 128 + ax2_0_1 * 4 + ax2_0_2)
                                        T.reads(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                        T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 16, v1_o // 4, v0_o % 16, v1_o % 4, 0:16, 0:16])
                                        T.block_attr({"meta_schedule.auto_tensorize": "wmma_sync_16x16x16_f16f16f16", "meta_schedule.auto_tensorize_init": "wmma_fill_16x16x16_f16", "meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                        with T.init():
                                            for ax0_1, ax1_1 in T.grid(16, 16):
                                                with T.block("B_init"):
                                                    v0_i_init, v1_i_init = T.axis.remap("SS", [ax0_1, ax1_1])
                                                    T.reads()
                                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 16, v1_o // 4, v0_o % 16, v1_o % 4, v0_i_init, v1_i_init])
                                                    C_reindex_shared_dyn_wmma_accumulator[v0_o // 16, v1_o // 4, v0_o % 16, v1_o % 4, v0_i_init, v1_i_init] = T.float16(0)
                                        for ax0_1, ax1_1, ax2_1 in T.grid(16, 16, 16):
                                            with T.block("B"):
                                                v0_i, v1_i, v2_i = T.axis.remap("SSR", [ax0_1, ax1_1, ax2_1])
                                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o // 16, v1_o // 4, v0_o % 16, v1_o % 4, v0_i, v1_i], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16 + v0_i, v2_o * 16 + v2_i], B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16 + v2_i, v1_o * 16 + v1_i])
                                                T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 16, v1_o // 4, v0_o % 16, v1_o % 4, v0_i, v1_i])
                                                T.block_attr({"meta_schedule.tiling_structure": "SSSRRSRS"})
                                                C_reindex_shared_dyn_wmma_accumulator[v0_o // 16, v1_o // 4, v0_o % 16, v1_o % 4, v0_i, v1_i] = C_reindex_shared_dyn_wmma_accumulator[v0_o // 16, v1_o // 4, v0_o % 16, v1_o % 4, v0_i, v1_i] + A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16 + v0_i, v2_o * 16 + v2_i] * B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16 + v2_i, v1_o * 16 + v1_i]
                    for ax2 in range(16):
                        for ax0_ax1_fused in T.thread_binding(8192, thread="threadIdx.y"):
                            for ax2_1, ax3 in T.grid(1, 4):
                                with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                    v0_o = T.axis.spatial(64, ax0_0_0_ax1_0_0_fused * 32 + ax0_ax1_fused // 256)
                                    v1_o = T.axis.spatial(256, ax0_ax1_fused % 256)
                                    v2_o = T.axis.spatial(16, ax2 + ax2_1)
                                    v3_o = T.axis.spatial(4, ax3)
                                    v4_o = T.axis.spatial(1, 0)
                                    v5_o = T.axis.spatial(1, 0)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                    T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.auto_tensorize": "wmma_store_16x16x16_f16_shared_dyn"})
                                    for ax4, ax5 in T.grid(16, 16):
                                        with T.block("C_reindex_shared.dyn_wmma.accumulator"):
                                            v4_i, v5_i = T.axis.remap("SS", [ax4, ax5])
                                            T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, v4_i, v5_i])
                                            T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, v4_i, v5_i])
                                            C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, v4_i, v5_i] = C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, v4_i, v5_i]
                        for ax0_ax1_ax3_ax4_ax5_fused in range(8388608):
                            with T.block("C_reindex_shared.dyn"):
                                v0 = T.axis.spatial(64, ax0_0_0_ax1_0_0_fused * 32 + ax0_ax1_ax3_ax4_ax5_fused // 262144)
                                v1 = T.axis.spatial(256, ax0_ax1_ax3_ax4_ax5_fused % 262144 // 1024)
                                v2 = T.axis.spatial(16, ax2)
                                v3 = T.axis.spatial(4, ax0_ax1_ax3_ax4_ax5_fused % 1024 // 256)
                                v4 = T.axis.spatial(16, ax0_ax1_ax3_ax4_ax5_fused % 256 // 16)
                                v5 = T.axis.spatial(16, ax0_ax1_ax3_ax4_ax5_fused % 16)
                                T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                T.writes(C[v4 + v2 * 16 + v0 * 256, v5 + v3 * 16 + v1 * 64])
                                T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                C[v4 + v2 * 16 + v0 * 256, v5 + v3 * 16 + v1 * 64] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vk, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vk, vj,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[2, 1, 32, 4, 4])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[1, 1, 256, 2, 2])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[8, 32, 4])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
2023-10-25 06:30:38 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            C_reindex_shared_dyn = T.alloc_buffer((128, 128, 8, 8, 16, 16), "float16", scope="shared.dyn")
            C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((128, 128, 8, 8, 16, 16), "float16", scope="wmma.accumulator")
            A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
            B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
            A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
            B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
            for ax0_0_0_ax1_0_0_fused in T.thread_binding(4, thread="blockIdx.y"):
                for ax0_0_1_ax1_0_1_fused in T.thread_binding(32, thread="blockIdx.x"):
                    for ax0_0_2_ax1_0_2_fused in T.thread_binding(128, thread="threadIdx.y"):
                        for ax2_0_0 in range(128):
                            for ax0_ax1_fused in range(262144):
                                with T.block("A_reindex_shared.dyn"):
                                    v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused * 4096 + ax0_0_1_ax1_0_1_fused // 16 * 2048 + ax0_ax1_fused // 128)
                                    v1 = T.axis.spatial(16384, ax2_0_0 * 128 + ax0_ax1_fused % 128)
                                    T.reads(A[v0, v1])
                                    T.writes(A_reindex_shared_dyn[v0, v1])
                                    T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]], "meta_schedule.cooperative_fetch": 2})
                                    A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                            for ax0_ax1_fused in range(131072):
                                with T.block("B_reindex_shared.dyn"):
                                    v0 = T.axis.spatial(16384, ax0_0_1_ax1_0_1_fused % 16 * 1024 + ax0_ax1_fused // 128)
                                    v1 = T.axis.spatial(16384, ax2_0_0 * 128 + ax0_ax1_fused % 128)
                                    T.reads(B[v0, v1])
                                    T.writes(B_reindex_shared_dyn[v0, v1])
                                    T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]], "meta_schedule.cooperative_fetch": 2})
                                    B_reindex_shared_dyn[v0, v1] = B[v0, v1]
                            for ax2_0_1 in range(2):
                                for ax0_0, ax1_0 in T.grid(8, 4):
                                    with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                        v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 256 + ax0_0_1_ax1_0_1_fused // 16 * 128 + ax0_0_2_ax1_0_2_fused // 8 * 8 + ax0_0)
                                        v1_o = T.axis.spatial(1024, ax2_0_0 * 8 + ax2_0_1 * 4 + ax1_0)
                                        T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                        T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                        T.block_attr({"meta_schedule.auto_tensorize": "wmma_load_16x16x16_f16_a_shared_dyn"})
                                        for ax0_1, ax1_1 in T.grid(16, 16):
                                            with T.block("A_reindex_shared.dyn_wmma.matrix_a"):
                                                v0_i, v1_i = T.axis.remap("SS", [ax0_1, ax1_1])
                                                T.reads(A_reindex_shared_dyn[v0_o * 16 + v0_i, v1_o * 16 + v1_i])
                                                T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16 + v0_i, v1_o * 16 + v1_i])
                                                A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16 + v0_i, v1_o * 16 + v1_i] = A_reindex_shared_dyn[v0_o * 16 + v0_i, v1_o * 16 + v1_i]
                                for ax0_0, ax1_0 in T.grid(8, 4):
                                    with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                        v0_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused % 16 * 64 + ax0_0_2_ax1_0_2_fused % 8 * 8 + ax0_0)
                                        v1_o = T.axis.spatial(1024, ax2_0_0 * 8 + ax2_0_1 * 4 + ax1_0)
                                        T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                        T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                        T.block_attr({"meta_schedule.auto_tensorize": "wmma_load_16x16x16_f16_b_trans_shared_dyn"})
                                        for ax0_1, ax1_1 in T.grid(16, 16):
                                            with T.block("B_reindex_shared.dyn_wmma.matrix_b"):
                                                v0_i, v1_i = T.axis.remap("SS", [ax0_1, ax1_1])
                                                T.reads(B_reindex_shared_dyn[v0_o * 16 + v0_i, v1_o * 16 + v1_i])
                                                T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16 + v0_i, v1_o * 16 + v1_i])
                                                B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16 + v0_i, v1_o * 16 + v1_i] = B_reindex_shared_dyn[v0_o * 16 + v0_i, v1_o * 16 + v1_i]
                                for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(2, 8, 4, 4, 1):
                                    with T.block("B_o"):
                                        v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 256 + ax0_0_1_ax1_0_1_fused // 16 * 128 + ax0_0_2_ax1_0_2_fused // 8 * 8 + ax0_0_3 * 4 + ax0_0_4)
                                        v1_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused % 16 * 64 + ax0_0_2_ax1_0_2_fused % 8 * 8 + ax1_0_3 + ax1_0_4)
                                        v2_o = T.axis.reduce(1024, ax2_0_0 * 8 + ax2_0_1 * 4 + ax2_0_2)
                                        T.reads(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16:v1_o * 16 + 16, v2_o * 16:v2_o * 16 + 16])
                                        T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 8, v1_o // 8, v0_o % 8, v1_o % 8, 0:16, 0:16])
                                        T.block_attr({"meta_schedule.auto_tensorize": "wmma_sync_16x16x16_f16f16f16_trans", "meta_schedule.auto_tensorize_init": "wmma_fill_16x16x16_f16", "meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                        with T.init():
                                            for ax0_1, ax1_1 in T.grid(16, 16):
                                                with T.block("B_init"):
                                                    v0_i_init, v1_i_init = T.axis.remap("SS", [ax0_1, ax1_1])
                                                    T.reads()
                                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 8, v1_o // 8, v0_o % 8, v1_o % 8, v0_i_init, v1_i_init])
                                                    C_reindex_shared_dyn_wmma_accumulator[v0_o // 8, v1_o // 8, v0_o % 8, v1_o % 8, v0_i_init, v1_i_init] = T.float16(0)
                                        for ax0_1, ax1_1, ax2_1 in T.grid(16, 16, 16):
                                            with T.block("B"):
                                                v0_i, v1_i, v2_i = T.axis.remap("SSR", [ax0_1, ax1_1, ax2_1])
                                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o // 8, v1_o // 8, v0_o % 8, v1_o % 8, v0_i, v1_i], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16 + v0_i, v2_o * 16 + v2_i], B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16 + v1_i, v2_o * 16 + v2_i])
                                                T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 8, v1_o // 8, v0_o % 8, v1_o % 8, v0_i, v1_i])
                                                T.block_attr({"meta_schedule.tiling_structure": "SSSRRSRS"})
                                                C_reindex_shared_dyn_wmma_accumulator[v0_o // 8, v1_o // 8, v0_o % 8, v1_o % 8, v0_i, v1_i] = C_reindex_shared_dyn_wmma_accumulator[v0_o // 8, v1_o // 8, v0_o % 8, v1_o % 8, v0_i, v1_i] + A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16 + v0_i, v2_o * 16 + v2_i] * B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16 + v1_i, v2_o * 16 + v2_i]
                    for ax2 in range(8):
                        for ax0_ax1_fused in T.thread_binding(128, thread="threadIdx.y"):
                            for ax2_1, ax3 in T.grid(1, 8):
                                with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                    v0_o = T.axis.spatial(128, ax0_0_0_ax1_0_0_fused * 32 + ax0_0_1_ax1_0_1_fused // 16 * 16 + ax0_ax1_fused // 8)
                                    v1_o = T.axis.spatial(128, ax0_0_1_ax1_0_1_fused % 16 * 8 + ax0_ax1_fused % 8)
                                    v2_o = T.axis.spatial(8, ax2 + ax2_1)
                                    v3_o = T.axis.spatial(8, ax3)
                                    v4_o = T.axis.spatial(1, 0)
                                    v5_o = T.axis.spatial(1, 0)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                    T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.auto_tensorize": "wmma_store_16x16x16_f16_shared_dyn"})
                                    for ax4, ax5 in T.grid(16, 16):
                                        with T.block("C_reindex_shared.dyn_wmma.accumulator"):
                                            v4_i, v5_i = T.axis.remap("SS", [ax4, ax5])
                                            T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, v4_i, v5_i])
                                            T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, v4_i, v5_i])
                                            C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, v4_i, v5_i] = C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, v4_i, v5_i]
                        for ax0_ax1_ax3_ax4_ax5_fused in range(262144):
                            with T.block("C_reindex_shared.dyn"):
                                v0 = T.axis.spatial(128, ax0_0_0_ax1_0_0_fused * 32 + ax0_0_1_ax1_0_1_fused // 16 * 16 + ax0_ax1_ax3_ax4_ax5_fused // 16384)
                                v1 = T.axis.spatial(128, ax0_0_1_ax1_0_1_fused % 16 * 8 + ax0_ax1_ax3_ax4_ax5_fused % 16384 // 2048)
                                v2 = T.axis.spatial(8, ax2)
                                v3 = T.axis.spatial(8, ax0_ax1_ax3_ax4_ax5_fused % 2048 // 256)
                                v4 = T.axis.spatial(16, ax0_ax1_ax3_ax4_ax5_fused % 256 // 16)
                                v5 = T.axis.spatial(16, ax0_ax1_ax3_ax4_ax5_fused % 16)
                                T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                T.writes(C[v4 + v2 * 16 + v0 * 128, v5 + v3 * 16 + v1 * 128])
                                T.block_attr({"meta_schedule.cooperative_fetch": 8})
                                C[v4 + v2 * 16 + v0 * 128, v5 + v3 * 16 + v1 * 128] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vj, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vj, vk,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16_trans")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[4, 2, 16, 2, 4])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[1, 16, 8, 8, 1])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[128, 2, 4])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_trans_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
2023-10-25 06:30:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 06:30:38 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2023-10-25 06:30:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 503 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:30:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1004 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:30:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1501 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:30:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2001 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:31:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2503 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:31:00 [INFO] [evolutionary_search.cc:723] Sampled 57 candidate(s)
2023-10-25 06:31:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:31:12 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 70 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:31:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:31:24 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 69 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:31:24 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9999  0.9998  0.9997  0.9997  0.9995  0.9977  0.9973  0.9972  0.9971  0.9967  0.9961  0.9953  0.9951  0.9950  0.9939  0.9937
2023-10-25 06:31:24 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 06:31:24 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #1: GFLOPs: 108439.1438. Time: 81115.4783 us. Best GFLOPs: 108439.1438
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #2: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((1024, 64, 1, 16, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((1024, 64, 1, 16, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(1024, thread="blockIdx.y", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(64, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(1, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(1, 4, 1, 4):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 4 * 4 + ax0_0_1_ax1_0_1_fused // 16 + ax0_0_3_init + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 4 * 256 + ax0_0_1_ax1_0_1_fused % 16 * 16 + ax1_0_3_init * 4 + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 16, 0, v1_o % 16, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 16, 0, v1_o % 16, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(512):
                        for ax0_ax1_fused_0 in range(16):
                            for ax0_ax1_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    with T.block("A_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused // 4 * 64 + ax0_0_1_ax1_0_1_fused // 16 * 16 + (ax0_ax1_fused_0 * 32 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) // 32)
                                        v1 = T.axis.spatial(16384, ax2_0_0 * 32 + (ax0_ax1_fused_0 * 32 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) % 32)
                                        T.reads(A[v0, v1])
                                        T.writes(A_reindex_shared_dyn[v0, v1])
                                        T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                        A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(128):
                            for ax0_ax1_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(2):
                                        with T.block("B_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax2_0_0 * 32 + (ax0_ax1_fused_0 * 64 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) // 256)
                                            v1 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused % 4 * 4096 + ax0_0_1_ax1_0_1_fused % 16 * 256 + (ax0_ax1_fused_0 * 64 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) % 256)
                                            T.reads(B[v1, v0])
                                            T.writes(B_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            B_reindex_shared_dyn[v0, v1] = B[v1, v0]
                        for ax2_0_1 in range(1):
                            for ax0_0, ax1_0 in T.grid(1, 2):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 4 * 4 + ax0_0_1_ax1_0_1_fused // 16 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 * 2 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(2, 16):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax2_0_0 * 2 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 4 * 256 + ax0_0_1_ax1_0_1_fused % 16 * 16 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(1, 4, 2, 1, 4):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 4 * 4 + ax0_0_1_ax1_0_1_fused // 16 + ax0_0_3 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 4 * 256 + ax0_0_1_ax1_0_1_fused % 16 * 16 + ax1_0_3 * 4 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 * 2 + ax2_0_1 * 2 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 16, 0, v1_o % 16, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 16, 0, v1_o % 16, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 16, 0, v1_o % 16, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(1):
                    for ax0_ax1_fused in T.thread_binding(1, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 16):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 4 * 4 + ax0_0_1_ax1_0_1_fused // 16)
                                v1_o = T.axis.spatial(64, ax0_0_0_ax1_0_0_fused % 4 * 16 + ax0_0_1_ax1_0_1_fused % 16)
                                v2_o, v3_o = T.axis.remap("SS", [ax2_1, ax3])
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(32):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                for ax0_ax1_ax3_ax4_ax5_fused_3 in T.vectorized(4):
                                    with T.block("C_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 4 * 4 + ax0_0_1_ax1_0_1_fused // 16)
                                        v1 = T.axis.spatial(64, ax0_0_0_ax1_0_0_fused % 4 * 16 + ax0_0_1_ax1_0_1_fused % 16)
                                        v2 = T.axis.spatial(1, ax2)
                                        v3 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 128 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) // 256)
                                        v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 128 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 256 // 16)
                                        v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 128 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 16)
                                        T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                        T.writes(C[v4 + v0 * 16, v5 + v3 * 16 + v1 * 256])
                                        C[v4 + v0 * 16, v5 + v3 * 16 + v1 * 256] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vk, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vk, vj,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[256, 4, 1, 1, 1])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[4, 16, 1, 4, 4])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[512, 1, 2])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161, l162 = sch.split(loop=l158, factors=[None, 1, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l162)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l163, l164, l165, l166, l167 = sch.get_loops(block=b92)
l168, l169, l170 = sch.split(loop=l167, factors=[None, 1, 32], preserve_unit_iters=True)
sch.bind(loop=l170, thread_axis="threadIdx.x")
sch.bind(loop=l169, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l171, l172, l173, l174, l175 = sch.get_loops(block=b101)
l176, l177, l178, l179 = sch.split(loop=l175, factors=[None, 1, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l179)
sch.bind(loop=l178, thread_axis="threadIdx.x")
sch.bind(loop=l177, thread_axis="threadIdx.y")
b180 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b180, ann_key="meta_schedule.unroll_explicit")
b181, b182, b183, b184, b185, b186, b187 = sch.get_child_blocks(b180)
l188, l189, l190, l191, l192, l193, l194 = sch.get_loops(block=b181)
l195, l196, l197, l198, l199, l200, l201, l202 = sch.get_loops(block=b182)
l203, l204, l205, l206, l207, l208, l209 = sch.get_loops(block=b183)
l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b184)
l217, l218, l219, l220, l221, l222, l223, l224, l225, l226 = sch.get_loops(block=b185)
sch.annotate(block_or_loop=l217, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l217, ann_key="pragma_unroll_explicit", ann_val=1)
l227, l228, l229, l230, l231, l232 = sch.get_loops(block=b186)
l233, l234, l235, l236, l237, l238, l239 = sch.get_loops(block=b187)
b240 = sch.get_block(name="B_o", func_name="main")
l241, l242, l243, l244, l245, l246, l247, l248, l249, l250 = sch.get_loops(block=b240)
b251 = sch.decompose_reduction(block=b240, loop=l244)
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b240, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize_init")
b252 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b252, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b252, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b253 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b253, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b254 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_load_16x16x16_f16_b_shared_dyn", preserve_unit_iters=True)
b255 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b255, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b255, tensor_intrin="wmma_sync_16x16x16_f16f16f16", preserve_unit_iters=True)
b256 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b256, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b256, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #3: GFLOPs: 34975.4926. Time: 251493.0417 us. Best GFLOPs: 108439.1438
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #4: GFLOPs: 81576.0818. Time: 107826.8633 us. Best GFLOPs: 108439.1438
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #5: GFLOPs: 41426.3581. Time: 212330.8307 us. Best GFLOPs: 108439.1438
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #6: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/root/unity/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/root/unity/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/root/unity/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/root/unity/python/tvm/_ffi/_ctypes/packed_func.py", line 238, in __call__
    raise get_last_ffi_error()
ValueError: Traceback (most recent call last):
  1: TVMFuncCall
  0: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}> >::Call(tvm::runtime::PackedFuncObj const*, tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*) [clone .cold]
  File "/root/unity/python/tvm/_ffi/_ctypes/packed_func.py", line 82, in cfun
    rv = local_pyfunc(*pyargs)
  File "/root/unity/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/root/unity/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/root/unity/python/tvm/_ffi/_ctypes/packed_func.py", line 238, in __call__
    raise get_last_ffi_error()
  57: TVMFuncCall
  56: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#6}>(tvm::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#6}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::TVMRetValue)
  55: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  54: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  53: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)
  52: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  51: tvm::codegen::CodeGenC::AddFunction(tvm::tir::PrimFunc const&)
  50: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  49: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::AttrStmtNode const*)
  48: tvm::codegen::CodeGenC::VisitStmt_(tvm::tir::AttrStmtNode const*)
  47: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  46: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::AllocateNode const*)
  45: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  44: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::AttrStmtNode const*)
  43: tvm::codegen::CodeGenC::VisitStmt_(tvm::tir::AttrStmtNode const*)
  42: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  41: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::AttrStmtNode const*)
  40: tvm::codegen::CodeGenC::VisitStmt_(tvm::tir::AttrStmtNode const*)
  39: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  38: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::AllocateNode const*)
  37: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  36: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::AttrStmtNode const*)
  35: tvm::codegen::CodeGenC::VisitStmt_(tvm::tir::AttrStmtNode const*)
  34: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  33: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::AttrStmtNode const*)
  32: tvm::codegen::CodeGenC::VisitStmt_(tvm::tir::AttrStmtNode const*)
  31: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  30: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::AllocateNode const*)
  29: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  28: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::AttrStmtNode const*)
  27: tvm::codegen::CodeGenC::VisitStmt_(tvm::tir::AttrStmtNode const*)
  26: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  25: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::AttrStmtNode const*)
  24: tvm::codegen::CodeGenC::VisitStmt_(tvm::tir::AttrStmtNode const*)
  23: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  22: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::AllocateNode const*)
  21: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  20: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::AttrStmtNode const*)
  19: tvm::codegen::CodeGenC::VisitStmt_(tvm::tir::AttrStmtNode const*)
  18: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  17: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::AttrStmtNode const*)
  16: tvm::codegen::CodeGenC::VisitStmt_(tvm::tir::AttrStmtNode const*)
  15: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  14: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::AttrStmtNode const*)
  13: tvm::codegen::CodeGenC::VisitStmt_(tvm::tir::AttrStmtNode const*)
  12: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  11: tvm::codegen::CodeGenC::VisitStmt_(tvm::tir::SeqStmtNode const*)
  10: tvm::codegen::CodeGenCUDA::VisitStmt_(tvm::tir::ForNode const*)
  9: tvm::codegen::CodeGenC::VisitStmt_(tvm::tir::ForNode const*)
  8: tvm::tir::StmtFunctor<void (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  7: tvm::codegen::CodeGenC::VisitStmt_(tvm::tir::SeqStmtNode const*)
  6: tvm::codegen::CodeGenC::VisitStmt_(tvm::tir::BufferStoreNode const*)
  5: tvm::codegen::CodeGenC::PrintExpr[abi:cxx11](tvm::PrimExpr const&)
  4: tvm::codegen::CodeGenC::PrintExpr(tvm::PrimExpr const&, std::ostream&)
  3: tvm::codegen::CodeGenC::VisitExpr_(tvm::tir::BufferLoadNode const*, std::ostream&)
  2: tvm::codegen::CodeGenC::PrintExpr[abi:cxx11](tvm::PrimExpr const&)
  1: tvm::codegen::CodeGenC::PrintExpr(tvm::PrimExpr const&, std::ostream&)
  0: tvm::codegen::CodeGenCUDA::VisitExpr_(tvm::tir::RampNode const*, std::ostream&)
  File "/root/unity/src/target/source/codegen_cuda.cc", line 1086
ValueError: Check failed: op->lanes <= 4 (8 vs. 4) : Ramp of more than 4 lanes is not allowed.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((128, 128, 8, 8, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((128, 128, 8, 8, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(8, thread="blockIdx.y", annotations={"pragma_auto_unroll_max_step": 16, "pragma_unroll_explicit": 1}):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(256, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(8, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(8, 8, 1, 1):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 128 + ax0_0_1_ax1_0_1_fused // 16 * 8 + ax0_0_3_init + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused % 16 * 64 + ax0_0_2_ax1_0_2_fused * 8 + ax1_0_3_init + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 8, v1_o // 8, v0_o % 8, v1_o % 8, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 8, v1_o // 8, v0_o % 8, v1_o % 8, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(1024):
                        for ax0_ax1_fused_0 in range(4):
                            for ax0_ax1_fused_1 in T.thread_binding(8, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(2):
                                        with T.block("A_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused * 2048 + ax0_0_1_ax1_0_1_fused // 16 * 128 + (ax0_ax1_fused_0 * 512 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) // 16)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 16 + (ax0_ax1_fused_0 * 512 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) % 16)
                                            T.reads(A[v0, v1])
                                            T.writes(A_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(8):
                            for ax0_ax1_fused_1 in T.thread_binding(8, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(8):
                                        with T.block("B_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax2_0_0 * 16 + (ax0_ax1_fused_0 * 2048 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) // 1024)
                                            v1 = T.axis.spatial(16384, ax0_0_1_ax1_0_1_fused % 16 * 1024 + (ax0_ax1_fused_0 * 2048 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) % 1024)
                                            T.reads(B[v1, v0])
                                            T.writes(B_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            B_reindex_shared_dyn[v0, v1] = B[v1, v0]
                        for ax2_0_1 in range(1):
                            for ax0_0, ax1_0 in T.grid(8, 1):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 128 + ax0_0_1_ax1_0_1_fused // 16 * 8 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(1, 8):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax2_0_0 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused % 16 * 64 + ax0_0_2_ax1_0_2_fused * 8 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(8, 8, 1, 1, 1):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 128 + ax0_0_1_ax1_0_1_fused // 16 * 8 + ax0_0_3 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused % 16 * 64 + ax0_0_2_ax1_0_2_fused * 8 + ax1_0_3 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 + ax2_0_1 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o // 8, v1_o // 8, v0_o % 8, v1_o % 8, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 8, v1_o // 8, v0_o % 8, v1_o % 8, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 8, v1_o // 8, v0_o % 8, v1_o % 8, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(8):
                    for ax0_ax1_fused in T.thread_binding(8, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 8):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(128, ax0_0_0_ax1_0_0_fused * 16 + ax0_0_1_ax1_0_1_fused // 16)
                                v1_o = T.axis.spatial(128, ax0_0_1_ax1_0_1_fused % 16 * 8 + ax0_ax1_fused)
                                v2_o = T.axis.spatial(8, ax2 + ax2_1)
                                v3_o = T.axis.spatial(8, ax3)
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(16):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(8, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                for ax0_ax1_ax3_ax4_ax5_fused_3 in T.vectorized(4):
                                    with T.block("C_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(128, ax0_0_0_ax1_0_0_fused * 16 + ax0_0_1_ax1_0_1_fused // 16)
                                        v1 = T.axis.spatial(128, ax0_0_1_ax1_0_1_fused % 16 * 8 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) // 2048)
                                        v2 = T.axis.spatial(8, ax2)
                                        v3 = T.axis.spatial(8, (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 2048 // 256)
                                        v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 256 // 16)
                                        v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 16)
                                        T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                        T.writes(C[v4 + v2 * 16 + v0 * 128, v5 + v3 * 16 + v1 * 128])
                                        C[v4 + v2 * 16 + v0 * 128, v5 + v3 * 16 + v1 * 128] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vk, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vk, vj,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[8, 16, 1, 8, 1])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[1, 16, 8, 8, 1])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[1024, 1, 1])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161, l162 = sch.split(loop=l158, factors=[None, 8, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l162)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l163, l164, l165, l166, l167 = sch.get_loops(block=b92)
l168, l169, l170, l171 = sch.split(loop=l167, factors=[None, 8, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l171)
sch.bind(loop=l170, thread_axis="threadIdx.x")
sch.bind(loop=l169, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l172, l173, l174, l175, l176 = sch.get_loops(block=b101)
l177, l178, l179, l180 = sch.split(loop=l176, factors=[None, 8, 32, 8], preserve_unit_iters=True)
sch.vectorize(loop=l180)
sch.bind(loop=l179, thread_axis="threadIdx.x")
sch.bind(loop=l178, thread_axis="threadIdx.y")
b181 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b181, ann_key="meta_schedule.unroll_explicit")
b182, b183, b184, b185, b186, b187, b188 = sch.get_child_blocks(b181)
l189, l190, l191, l192, l193, l194, l195, l196 = sch.get_loops(block=b182)
l197, l198, l199, l200, l201, l202, l203, l204 = sch.get_loops(block=b183)
l205, l206, l207, l208, l209, l210, l211 = sch.get_loops(block=b184)
l212, l213, l214, l215, l216, l217, l218 = sch.get_loops(block=b185)
l219, l220, l221, l222, l223, l224, l225, l226, l227, l228 = sch.get_loops(block=b186)
sch.annotate(block_or_loop=l219, ann_key="pragma_auto_unroll_max_step", ann_val=16)
sch.annotate(block_or_loop=l219, ann_key="pragma_unroll_explicit", ann_val=1)
l229, l230, l231, l232, l233, l234 = sch.get_loops(block=b187)
l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b188)
b242 = sch.get_block(name="B_o", func_name="main")
l243, l244, l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b242)
b253 = sch.decompose_reduction(block=b242, loop=l246)
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b242, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize_init")
b254 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b255 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b255, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b255, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b256 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b256, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b256, tensor_intrin="wmma_load_16x16x16_f16_b_shared_dyn", preserve_unit_iters=True)
b257 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b257, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b257, tensor_intrin="wmma_sync_16x16x16_f16f16f16", preserve_unit_iters=True)
b258 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b258, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b258, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #7: GFLOPs: 45133.7721. Time: 194889.3837 us. Best GFLOPs: 108439.1438
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #8: GFLOPs: 18906.2902. Time: 465246.9073 us. Best GFLOPs: 108439.1438
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #9: GFLOPs: 162780.6482. Time: 54036.4787 us. Best GFLOPs: 162780.6482
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #10: GFLOPs: 17232.1054. Time: 510447.9573 us. Best GFLOPs: 162780.6482
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #11: GFLOPs: 35708.7691. Time: 246328.6537 us. Best GFLOPs: 162780.6482
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #12: GFLOPs: 49173.1987. Time: 178879.8217 us. Best GFLOPs: 162780.6482
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #13: GFLOPs: 47651.1773. Time: 184593.4040 us. Best GFLOPs: 162780.6482
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #14: GFLOPs: 48217.7876. Time: 182424.2350 us. Best GFLOPs: 162780.6482
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #15: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((1024, 256, 1, 4, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((1024, 256, 1, 4, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(512, thread="blockIdx.y", annotations={"pragma_auto_unroll_max_step": 64, "pragma_unroll_explicit": 1}):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(128, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(4, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(1, 1, 1, 4):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 16 * 32 + ax0_0_1_ax1_0_1_fused // 4 + ax0_0_3_init + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 16 * 64 + ax0_0_1_ax1_0_1_fused % 4 * 16 + ax0_0_2_ax1_0_2_fused * 4 + ax1_0_3_init * 4 + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 4, 0, v1_o % 4, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 4, 0, v1_o % 4, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(256):
                        for ax0_ax1_fused_0 in range(1):
                            for ax0_ax1_fused_1 in T.thread_binding(4, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(8):
                                        with T.block("A_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused // 16 * 512 + ax0_0_1_ax1_0_1_fused // 4 * 16 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) // 64)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 64 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) % 64)
                                            T.reads(A[v0, v1])
                                            T.writes(A_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(64):
                            for ax0_ax1_fused_1 in T.thread_binding(4, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(2):
                                        with T.block("B_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax2_0_0 * 64 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) // 256)
                                            v1 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused % 16 * 1024 + ax0_0_1_ax1_0_1_fused % 4 * 256 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) % 256)
                                            T.reads(B[v1, v0])
                                            T.writes(B_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            B_reindex_shared_dyn[v0, v1] = B[v1, v0]
                        for ax2_0_1 in range(2):
                            for ax0_0, ax1_0 in T.grid(1, 2):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 16 * 32 + ax0_0_1_ax1_0_1_fused // 4 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 * 4 + ax2_0_1 * 2 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(2, 4):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax2_0_0 * 4 + ax2_0_1 * 2 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 16 * 64 + ax0_0_1_ax1_0_1_fused % 4 * 16 + ax0_0_2_ax1_0_2_fused * 4 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(1, 1, 2, 1, 4):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 16 * 32 + ax0_0_1_ax1_0_1_fused // 4 + ax0_0_3 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 16 * 64 + ax0_0_1_ax1_0_1_fused % 4 * 16 + ax0_0_2_ax1_0_2_fused * 4 + ax1_0_3 * 4 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 * 4 + ax2_0_1 * 2 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 4, 0, v1_o % 4, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 4, 0, v1_o % 4, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 4, 0, v1_o % 4, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(1):
                    for ax0_ax1_fused in T.thread_binding(4, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 4):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 16 * 32 + ax0_0_1_ax1_0_1_fused // 4)
                                v1_o = T.axis.spatial(256, ax0_0_0_ax1_0_0_fused % 16 * 16 + ax0_0_1_ax1_0_1_fused % 4 * 4 + ax0_ax1_fused)
                                v2_o, v3_o = T.axis.remap("SS", [ax2_1, ax3])
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(4):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(4, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                for ax0_ax1_ax3_ax4_ax5_fused_3 in T.vectorized(8):
                                    with T.block("C_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 16 * 32 + ax0_0_1_ax1_0_1_fused // 4)
                                        v1 = T.axis.spatial(256, ax0_0_0_ax1_0_0_fused % 16 * 16 + ax0_0_1_ax1_0_1_fused % 4 * 4 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) // 1024)
                                        v2 = T.axis.spatial(1, ax2)
                                        v3 = T.axis.spatial(4, (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) % 1024 // 256)
                                        v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) % 256 // 16)
                                        v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) % 16)
                                        T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                        T.writes(C[v4 + v0 * 16, v5 + v3 * 16 + v1 * 64])
                                        C[v4 + v0 * 16, v5 + v3 * 16 + v1 * 64] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vk, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vk, vj,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[32, 32, 1, 1, 1])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[16, 4, 4, 1, 4])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[256, 2, 2])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161, l162 = sch.split(loop=l158, factors=[None, 4, 32, 8], preserve_unit_iters=True)
sch.vectorize(loop=l162)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l163, l164, l165, l166, l167 = sch.get_loops(block=b92)
l168, l169, l170, l171 = sch.split(loop=l167, factors=[None, 4, 32, 8], preserve_unit_iters=True)
sch.vectorize(loop=l171)
sch.bind(loop=l170, thread_axis="threadIdx.x")
sch.bind(loop=l169, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l172, l173, l174, l175, l176 = sch.get_loops(block=b101)
l177, l178, l179, l180 = sch.split(loop=l176, factors=[None, 4, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l180)
sch.bind(loop=l179, thread_axis="threadIdx.x")
sch.bind(loop=l178, thread_axis="threadIdx.y")
b181 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b181, ann_key="meta_schedule.unroll_explicit")
b182, b183, b184, b185, b186, b187, b188 = sch.get_child_blocks(b181)
l189, l190, l191, l192, l193, l194, l195, l196 = sch.get_loops(block=b182)
l197, l198, l199, l200, l201, l202, l203, l204 = sch.get_loops(block=b183)
l205, l206, l207, l208, l209, l210, l211 = sch.get_loops(block=b184)
l212, l213, l214, l215, l216, l217, l218 = sch.get_loops(block=b185)
l219, l220, l221, l222, l223, l224, l225, l226, l227, l228 = sch.get_loops(block=b186)
sch.annotate(block_or_loop=l219, ann_key="pragma_auto_unroll_max_step", ann_val=64)
sch.annotate(block_or_loop=l219, ann_key="pragma_unroll_explicit", ann_val=1)
l229, l230, l231, l232, l233, l234 = sch.get_loops(block=b187)
l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b188)
b242 = sch.get_block(name="B_o", func_name="main")
l243, l244, l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b242)
b253 = sch.decompose_reduction(block=b242, loop=l246)
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b242, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize_init")
b254 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b255 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b255, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b255, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b256 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b256, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b256, tensor_intrin="wmma_load_16x16x16_f16_b_shared_dyn", preserve_unit_iters=True)
b257 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b257, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b257, tensor_intrin="wmma_sync_16x16x16_f16f16f16", preserve_unit_iters=True)
b258 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b258, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b258, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 06:38:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #16: GFLOPs: 89889.8535. Time: 97854.1257 us. Best GFLOPs: 162780.6482
2023-10-25 06:38:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 06:38:39 [INFO] [evolutionary_search.cc:715] Picked top 13 candidate(s) from database
2023-10-25 06:38:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 489 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:38:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 976 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:38:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1460 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:38:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1942 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:38:56 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2023-10-25 06:39:01 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 63 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:39:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:39:13 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 73 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:39:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:39:19 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9993  0.9985  0.9984  0.9983  0.9981  0.9980  0.9969  0.9965  0.9965  0.9960  0.9948  0.9944  0.9943  0.9943  0.9942  0.9941
2023-10-25 06:39:20 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 06:39:20 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #17: GFLOPs: 63550.6884. Time: 138410.6647 us. Best GFLOPs: 162780.6482
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #18: GFLOPs: 61320.6150. Time: 143444.3053 us. Best GFLOPs: 162780.6482
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #19: GFLOPs: 49539.3106. Time: 177557.8407 us. Best GFLOPs: 162780.6482
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #20: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((512, 512, 2, 2, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((512, 512, 2, 2, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(256, thread="blockIdx.y", annotations={"pragma_auto_unroll_max_step": 16, "pragma_unroll_explicit": 1}):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(64, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(16, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(1, 1, 2, 2):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 4 + ax0_0_2_ax1_0_2_fused // 8 * 2 + ax0_0_3_init * 2 + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused * 16 + ax0_0_2_ax1_0_2_fused % 8 * 2 + ax1_0_3_init * 2 + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 2, v0_o % 2, v1_o % 2, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 2, v0_o % 2, v1_o % 2, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(1024):
                        for ax0_ax1_fused_0 in range(1):
                            for ax0_ax1_fused_1 in T.thread_binding(16, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(2):
                                        with T.block("A_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused * 64 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) // 16)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 16 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) % 16)
                                            T.reads(A[v0, v1])
                                            T.writes(A_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(4):
                            for ax0_ax1_fused_1 in T.thread_binding(16, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(2):
                                        with T.block("B_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax2_0_0 * 16 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) // 256)
                                            v1 = T.axis.spatial(16384, ax0_0_1_ax1_0_1_fused * 256 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) % 256)
                                            T.reads(B[v1, v0])
                                            T.writes(B_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            B_reindex_shared_dyn[v0, v1] = B[v1, v0]
                        for ax2_0_1 in range(1):
                            for ax0_0, ax1_0 in T.grid(2, 1):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 4 + ax0_0_2_ax1_0_2_fused // 8 * 2 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(1, 2):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax2_0_0 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused * 16 + ax0_0_2_ax1_0_2_fused % 8 * 2 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(1, 1, 1, 2, 2):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 4 + ax0_0_2_ax1_0_2_fused // 8 * 2 + ax0_0_3 * 2 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused * 16 + ax0_0_2_ax1_0_2_fused % 8 * 2 + ax1_0_3 * 2 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 + ax2_0_1 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 2, v0_o % 2, v1_o % 2, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 2, v0_o % 2, v1_o % 2, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 2, v0_o % 2, v1_o % 2, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(2):
                    for ax0_ax1_fused in T.thread_binding(16, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 2):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(512, ax0_0_0_ax1_0_0_fused * 2 + ax0_ax1_fused // 8)
                                v1_o = T.axis.spatial(512, ax0_0_1_ax1_0_1_fused * 8 + ax0_ax1_fused % 8)
                                v2_o = T.axis.spatial(2, ax2 + ax2_1)
                                v3_o = T.axis.spatial(2, ax3)
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(8):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(16, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                for ax0_ax1_ax3_ax4_ax5_fused_3 in T.vectorized(2):
                                    with T.block("C_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(512, ax0_0_0_ax1_0_0_fused * 2 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) // 4096)
                                        v1 = T.axis.spatial(512, ax0_0_1_ax1_0_1_fused * 8 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) % 4096 // 512)
                                        v2 = T.axis.spatial(2, ax2)
                                        v3 = T.axis.spatial(2, (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) % 512 // 256)
                                        v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) % 256 // 16)
                                        v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) % 16)
                                        T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                        T.writes(C[v4 + v2 * 16 + v0 * 32, v5 + v3 * 16 + v1 * 32])
                                        C[v4 + v2 * 16 + v0 * 32, v5 + v3 * 16 + v1 * 32] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vk, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vk, vj,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[256, 1, 2, 1, 2])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[1, 64, 8, 1, 2])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[1024, 1, 1])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161, l162 = sch.split(loop=l158, factors=[None, 16, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l162)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l163, l164, l165, l166, l167 = sch.get_loops(block=b92)
l168, l169, l170, l171 = sch.split(loop=l167, factors=[None, 16, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l171)
sch.bind(loop=l170, thread_axis="threadIdx.x")
sch.bind(loop=l169, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l172, l173, l174, l175, l176 = sch.get_loops(block=b101)
l177, l178, l179, l180 = sch.split(loop=l176, factors=[None, 16, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l180)
sch.bind(loop=l179, thread_axis="threadIdx.x")
sch.bind(loop=l178, thread_axis="threadIdx.y")
b181 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b181, ann_key="meta_schedule.unroll_explicit")
b182, b183, b184, b185, b186, b187, b188 = sch.get_child_blocks(b181)
l189, l190, l191, l192, l193, l194, l195, l196 = sch.get_loops(block=b182)
l197, l198, l199, l200, l201, l202, l203, l204 = sch.get_loops(block=b183)
l205, l206, l207, l208, l209, l210, l211 = sch.get_loops(block=b184)
l212, l213, l214, l215, l216, l217, l218 = sch.get_loops(block=b185)
l219, l220, l221, l222, l223, l224, l225, l226, l227, l228 = sch.get_loops(block=b186)
sch.annotate(block_or_loop=l219, ann_key="pragma_auto_unroll_max_step", ann_val=16)
sch.annotate(block_or_loop=l219, ann_key="pragma_unroll_explicit", ann_val=1)
l229, l230, l231, l232, l233, l234 = sch.get_loops(block=b187)
l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b188)
b242 = sch.get_block(name="B_o", func_name="main")
l243, l244, l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b242)
b253 = sch.decompose_reduction(block=b242, loop=l246)
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b242, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize_init")
b254 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b255 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b255, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b255, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b256 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b256, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b256, tensor_intrin="wmma_load_16x16x16_f16_b_shared_dyn", preserve_unit_iters=True)
b257 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b257, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b257, tensor_intrin="wmma_sync_16x16x16_f16f16f16", preserve_unit_iters=True)
b258 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b258, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b258, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #21: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((1024, 1024, 1, 1, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((1024, 1024, 1, 1, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(4096, thread="blockIdx.y", annotations={"pragma_auto_unroll_max_step": 64, "pragma_unroll_explicit": 1}):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(8, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(32, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(1, 1, 1, 1):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 16 * 4 + ax0_0_2_ax1_0_2_fused // 8 + ax0_0_3_init + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 16 * 64 + ax0_0_1_ax1_0_1_fused * 8 + ax0_0_2_ax1_0_2_fused % 8 + ax1_0_3_init + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, 0, 0, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, 0, 0, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(512):
                        for ax0_ax1_fused_0 in range(1):
                            for ax0_ax1_fused_1 in T.thread_binding(32, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(8):
                                        with T.block("A_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused // 16 * 64 + (ax0_ax1_fused_0 * 8192 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) // 32)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 32 + (ax0_ax1_fused_0 * 8192 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) % 32)
                                            T.where(((ax0_ax1_fused_0 * 32 + ax0_ax1_fused_1) * 32 + ax0_ax1_fused_2) * 8 + ax0_ax1_fused_3 < 2048)
                                            T.reads(A[v0, v1])
                                            T.writes(A_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(4):
                            for ax0_ax1_fused_1 in T.thread_binding(32, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    with T.block("B_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused % 16 * 1024 + ax0_0_1_ax1_0_1_fused * 128 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) // 32)
                                        v1 = T.axis.spatial(16384, ax2_0_0 * 32 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) % 32)
                                        T.reads(B[v0, v1])
                                        T.writes(B_reindex_shared_dyn[v0, v1])
                                        T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                        B_reindex_shared_dyn[v0, v1] = B[v0, v1]
                        for ax2_0_1 in range(2):
                            for ax0_0, ax1_0 in T.grid(1, 1):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 16 * 4 + ax0_0_2_ax1_0_2_fused // 8 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 * 2 + ax2_0_1 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(1, 1):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 16 * 64 + ax0_0_1_ax1_0_1_fused * 8 + ax0_0_2_ax1_0_2_fused % 8 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 * 2 + ax2_0_1 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "col_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(1, 1, 1, 1, 1):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 16 * 4 + ax0_0_2_ax1_0_2_fused // 8 + ax0_0_3 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 16 * 64 + ax0_0_1_ax1_0_1_fused * 8 + ax0_0_2_ax1_0_2_fused % 8 + ax1_0_3 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 * 2 + ax2_0_1 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, 0, 0, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16:v1_o * 16 + 16, v2_o * 16:v2_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, 0, 0, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16:v1_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, 0, 0, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(1):
                    for ax0_ax1_fused in T.thread_binding(32, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 1):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 16 * 4 + ax0_ax1_fused // 8)
                                v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 16 * 64 + ax0_0_1_ax1_0_1_fused * 8 + ax0_ax1_fused % 8)
                                v2_o, v3_o = T.axis.remap("SS", [ax2_1, ax3])
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(1):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(32, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                for ax0_ax1_ax3_ax4_ax5_fused_3 in T.vectorized(8):
                                    with T.block("C_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 16 * 4 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 8192 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) // 2048)
                                        v1 = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 16 * 64 + ax0_0_1_ax1_0_1_fused * 8 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 8192 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) % 2048 // 256)
                                        v2 = T.axis.spatial(1, ax2)
                                        v3 = T.axis.spatial(1, 0)
                                        v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 8192 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) % 256 // 16)
                                        v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 8192 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) % 16)
                                        T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                        T.writes(C[v4 + v0 * 16, v5 + v1 * 16])
                                        C[v4 + v0 * 16, v5 + v1 * 16] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vj, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vj, vk,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16_trans")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[256, 1, 4, 1, 1])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[16, 8, 8, 1, 1])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[512, 2, 1])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_trans_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161, l162 = sch.split(loop=l158, factors=[None, 32, 32, 8], preserve_unit_iters=True)
sch.vectorize(loop=l162)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l163, l164, l165, l166, l167 = sch.get_loops(block=b92)
l168, l169, l170, l171 = sch.split(loop=l167, factors=[None, 32, 32, 8], preserve_unit_iters=True)
sch.vectorize(loop=l171)
sch.bind(loop=l170, thread_axis="threadIdx.x")
sch.bind(loop=l169, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l172, l173, l174, l175, l176 = sch.get_loops(block=b101)
l177, l178, l179 = sch.split(loop=l176, factors=[None, 32, 32], preserve_unit_iters=True)
sch.bind(loop=l179, thread_axis="threadIdx.x")
sch.bind(loop=l178, thread_axis="threadIdx.y")
b180 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b180, ann_key="meta_schedule.unroll_explicit")
b181, b182, b183, b184, b185, b186, b187 = sch.get_child_blocks(b180)
l188, l189, l190, l191, l192, l193, l194, l195 = sch.get_loops(block=b181)
l196, l197, l198, l199, l200, l201, l202 = sch.get_loops(block=b182)
l203, l204, l205, l206, l207, l208, l209 = sch.get_loops(block=b183)
l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b184)
l217, l218, l219, l220, l221, l222, l223, l224, l225, l226 = sch.get_loops(block=b185)
sch.annotate(block_or_loop=l217, ann_key="pragma_auto_unroll_max_step", ann_val=64)
sch.annotate(block_or_loop=l217, ann_key="pragma_unroll_explicit", ann_val=1)
l227, l228, l229, l230, l231, l232 = sch.get_loops(block=b186)
l233, l234, l235, l236, l237, l238, l239 = sch.get_loops(block=b187)
b240 = sch.get_block(name="B_o", func_name="main")
l241, l242, l243, l244, l245, l246, l247, l248, l249, l250 = sch.get_loops(block=b240)
b251 = sch.decompose_reduction(block=b240, loop=l244)
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b240, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize_init")
b252 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b252, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b252, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b253 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b253, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b254 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_load_16x16x16_f16_b_trans_shared_dyn", preserve_unit_iters=True)
b255 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b255, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b255, tensor_intrin="wmma_sync_16x16x16_f16f16f16_trans", preserve_unit_iters=True)
b256 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b256, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b256, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #22: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((512, 256, 2, 4, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((512, 256, 2, 4, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(256, thread="blockIdx.y", annotations={"pragma_auto_unroll_max_step": 16, "pragma_unroll_explicit": 1}):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(32, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(16, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(1, 1, 2, 4):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 4 + ax0_0_2_ax1_0_2_fused // 8 * 2 + ax0_0_3_init * 2 + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused * 32 + ax0_0_2_ax1_0_2_fused % 8 * 4 + ax1_0_3_init * 4 + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 4, v0_o % 2, v1_o % 4, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 4, v0_o % 2, v1_o % 4, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(1024):
                        for ax0_ax1_fused_0 in range(1):
                            for ax0_ax1_fused_1 in T.thread_binding(16, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(2):
                                        with T.block("A_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused * 64 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) // 16)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 16 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) % 16)
                                            T.reads(A[v0, v1])
                                            T.writes(A_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(8):
                            for ax0_ax1_fused_1 in T.thread_binding(16, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(2):
                                        with T.block("B_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax2_0_0 * 16 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) // 512)
                                            v1 = T.axis.spatial(16384, ax0_0_1_ax1_0_1_fused * 512 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) % 512)
                                            T.reads(B[v1, v0])
                                            T.writes(B_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            B_reindex_shared_dyn[v0, v1] = B[v1, v0]
                        for ax2_0_1 in range(1):
                            for ax0_0, ax1_0 in T.grid(2, 1):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 4 + ax0_0_2_ax1_0_2_fused // 8 * 2 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(1, 4):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax2_0_0 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused * 32 + ax0_0_2_ax1_0_2_fused % 8 * 4 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(1, 1, 1, 2, 4):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 4 + ax0_0_2_ax1_0_2_fused // 8 * 2 + ax0_0_3 * 2 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused * 32 + ax0_0_2_ax1_0_2_fused % 8 * 4 + ax1_0_3 * 4 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 + ax2_0_1 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 4, v0_o % 2, v1_o % 4, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 4, v0_o % 2, v1_o % 4, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 4, v0_o % 2, v1_o % 4, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(2):
                    for ax0_ax1_fused in T.thread_binding(16, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 4):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(512, ax0_0_0_ax1_0_0_fused * 2 + ax0_ax1_fused // 8)
                                v1_o = T.axis.spatial(256, ax0_0_1_ax1_0_1_fused * 8 + ax0_ax1_fused % 8)
                                v2_o = T.axis.spatial(2, ax2 + ax2_1)
                                v3_o = T.axis.spatial(4, ax3)
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(4):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(16, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                for ax0_ax1_ax3_ax4_ax5_fused_3 in T.vectorized(8):
                                    with T.block("C_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(512, ax0_0_0_ax1_0_0_fused * 2 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 4096 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) // 8192)
                                        v1 = T.axis.spatial(256, ax0_0_1_ax1_0_1_fused * 8 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 4096 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) % 8192 // 1024)
                                        v2 = T.axis.spatial(2, ax2)
                                        v3 = T.axis.spatial(4, (ax0_ax1_ax3_ax4_ax5_fused_0 * 4096 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) % 1024 // 256)
                                        v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 4096 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) % 256 // 16)
                                        v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 4096 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) % 16)
                                        T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                        T.writes(C[v4 + v2 * 16 + v0 * 32, v5 + v3 * 16 + v1 * 64])
                                        C[v4 + v2 * 16 + v0 * 32, v5 + v3 * 16 + v1 * 64] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vk, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vk, vj,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[256, 1, 2, 1, 2])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[1, 32, 8, 1, 4])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[1024, 1, 1])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161, l162 = sch.split(loop=l158, factors=[None, 16, 32, 8], preserve_unit_iters=True)
sch.vectorize(loop=l162)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l163, l164, l165, l166, l167 = sch.get_loops(block=b92)
l168, l169, l170, l171 = sch.split(loop=l167, factors=[None, 16, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l171)
sch.bind(loop=l170, thread_axis="threadIdx.x")
sch.bind(loop=l169, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l172, l173, l174, l175, l176 = sch.get_loops(block=b101)
l177, l178, l179, l180 = sch.split(loop=l176, factors=[None, 16, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l180)
sch.bind(loop=l179, thread_axis="threadIdx.x")
sch.bind(loop=l178, thread_axis="threadIdx.y")
b181 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b181, ann_key="meta_schedule.unroll_explicit")
b182, b183, b184, b185, b186, b187, b188 = sch.get_child_blocks(b181)
l189, l190, l191, l192, l193, l194, l195, l196 = sch.get_loops(block=b182)
l197, l198, l199, l200, l201, l202, l203, l204 = sch.get_loops(block=b183)
l205, l206, l207, l208, l209, l210, l211 = sch.get_loops(block=b184)
l212, l213, l214, l215, l216, l217, l218 = sch.get_loops(block=b185)
l219, l220, l221, l222, l223, l224, l225, l226, l227, l228 = sch.get_loops(block=b186)
sch.annotate(block_or_loop=l219, ann_key="pragma_auto_unroll_max_step", ann_val=16)
sch.annotate(block_or_loop=l219, ann_key="pragma_unroll_explicit", ann_val=1)
l229, l230, l231, l232, l233, l234 = sch.get_loops(block=b187)
l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b188)
b242 = sch.get_block(name="B_o", func_name="main")
l243, l244, l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b242)
b253 = sch.decompose_reduction(block=b242, loop=l246)
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b242, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize_init")
b254 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b255 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b255, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b255, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b256 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b256, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b256, tensor_intrin="wmma_load_16x16x16_f16_b_shared_dyn", preserve_unit_iters=True)
b257 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b257, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b257, tensor_intrin="wmma_sync_16x16x16_f16f16f16", preserve_unit_iters=True)
b258 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b258, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b258, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #23: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((1024, 512, 1, 2, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((1024, 512, 1, 2, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(4, thread="blockIdx.y", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(65536, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(2, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(1, 2, 1, 1):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 256 + ax0_0_1_ax1_0_1_fused // 512 * 2 + ax0_0_2_ax1_0_2_fused + ax0_0_3_init + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused % 512 * 2 + ax1_0_3_init + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 2, 0, v1_o % 2, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 2, 0, v1_o % 2, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(1024):
                        for ax0_ax1_fused_0 in range(8):
                            for ax0_ax1_fused_1 in T.thread_binding(2, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    with T.block("A_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused * 4096 + ax0_0_1_ax1_0_1_fused // 512 * 32 + (ax0_ax1_fused_0 * 64 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) // 16)
                                        v1 = T.axis.spatial(16384, ax2_0_0 * 16 + (ax0_ax1_fused_0 * 64 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) % 16)
                                        T.reads(A[v0, v1])
                                        T.writes(A_reindex_shared_dyn[v0, v1])
                                        T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                        A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(1):
                            for ax0_ax1_fused_1 in T.thread_binding(2, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(8):
                                        with T.block("B_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_1_ax1_0_1_fused % 512 * 32 + (ax0_ax1_fused_0 * 512 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) // 16)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 16 + (ax0_ax1_fused_0 * 512 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) % 16)
                                            T.reads(B[v0, v1])
                                            T.writes(B_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            B_reindex_shared_dyn[v0, v1] = B[v0, v1]
                        for ax2_0_1 in range(1):
                            for ax0_0, ax1_0 in T.grid(1, 1):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 256 + ax0_0_1_ax1_0_1_fused // 512 * 2 + ax0_0_2_ax1_0_2_fused + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(2, 1):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused % 512 * 2 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "col_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(1, 2, 1, 1, 1):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 256 + ax0_0_1_ax1_0_1_fused // 512 * 2 + ax0_0_2_ax1_0_2_fused + ax0_0_3 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused % 512 * 2 + ax1_0_3 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 + ax2_0_1 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 2, 0, v1_o % 2, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16:v1_o * 16 + 16, v2_o * 16:v2_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 2, 0, v1_o % 2, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16:v1_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 2, 0, v1_o % 2, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(1):
                    for ax0_ax1_fused in T.thread_binding(2, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 2):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 256 + ax0_0_1_ax1_0_1_fused // 512 * 2 + ax0_ax1_fused)
                                v1_o = T.axis.spatial(512, ax0_0_1_ax1_0_1_fused % 512)
                                v2_o, v3_o = T.axis.remap("SS", [ax2_1, ax3])
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(8):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(2, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                for ax0_ax1_ax3_ax4_ax5_fused_3 in T.vectorized(2):
                                    with T.block("C_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 256 + ax0_0_1_ax1_0_1_fused // 512 * 2 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 128 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) // 512)
                                        v1 = T.axis.spatial(512, ax0_0_1_ax1_0_1_fused % 512)
                                        v2 = T.axis.spatial(1, ax2)
                                        v3 = T.axis.spatial(2, (ax0_ax1_ax3_ax4_ax5_fused_0 * 128 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) % 512 // 256)
                                        v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 128 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) % 256 // 16)
                                        v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 128 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) % 16)
                                        T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                        T.writes(C[v4 + v0 * 16, v5 + v3 * 16 + v1 * 32])
                                        C[v4 + v0 * 16, v5 + v3 * 16 + v1 * 32] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vj, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vj, vk,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16_trans")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[4, 128, 2, 1, 1])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[1, 512, 1, 2, 1])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[1024, 1, 1])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_trans_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161, l162 = sch.split(loop=l158, factors=[None, 2, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l162)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l163, l164, l165, l166, l167 = sch.get_loops(block=b92)
l168, l169, l170 = sch.split(loop=l167, factors=[None, 2, 32], preserve_unit_iters=True)
sch.bind(loop=l170, thread_axis="threadIdx.x")
sch.bind(loop=l169, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l171, l172, l173, l174, l175 = sch.get_loops(block=b101)
l176, l177, l178, l179 = sch.split(loop=l175, factors=[None, 2, 32, 8], preserve_unit_iters=True)
sch.vectorize(loop=l179)
sch.bind(loop=l178, thread_axis="threadIdx.x")
sch.bind(loop=l177, thread_axis="threadIdx.y")
b180 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b180, ann_key="meta_schedule.unroll_explicit")
b181, b182, b183, b184, b185, b186, b187 = sch.get_child_blocks(b180)
l188, l189, l190, l191, l192, l193, l194 = sch.get_loops(block=b181)
l195, l196, l197, l198, l199, l200, l201, l202 = sch.get_loops(block=b182)
l203, l204, l205, l206, l207, l208, l209 = sch.get_loops(block=b183)
l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b184)
l217, l218, l219, l220, l221, l222, l223, l224, l225, l226 = sch.get_loops(block=b185)
sch.annotate(block_or_loop=l217, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l217, ann_key="pragma_unroll_explicit", ann_val=1)
l227, l228, l229, l230, l231, l232 = sch.get_loops(block=b186)
l233, l234, l235, l236, l237, l238, l239 = sch.get_loops(block=b187)
b240 = sch.get_block(name="B_o", func_name="main")
l241, l242, l243, l244, l245, l246, l247, l248, l249, l250 = sch.get_loops(block=b240)
b251 = sch.decompose_reduction(block=b240, loop=l244)
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b240, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize_init")
b252 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b252, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b252, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b253 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b253, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b254 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_load_16x16x16_f16_b_trans_shared_dyn", preserve_unit_iters=True)
b255 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b255, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b255, tensor_intrin="wmma_sync_16x16x16_f16f16f16_trans", preserve_unit_iters=True)
b256 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b256, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b256, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #24: GFLOPs: 46623.8693. Time: 188660.7257 us. Best GFLOPs: 162780.6482
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #25: GFLOPs: 68087.8028. Time: 129187.5000 us. Best GFLOPs: 162780.6482
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #26: GFLOPs: 81864.5203. Time: 107446.9500 us. Best GFLOPs: 162780.6482
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #27: GFLOPs: 110359.4020. Time: 79704.0657 us. Best GFLOPs: 162780.6482
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #28: GFLOPs: 59840.4320. Time: 146992.4720 us. Best GFLOPs: 162780.6482
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #29: GFLOPs: 90042.5037. Time: 97688.2323 us. Best GFLOPs: 162780.6482
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #30: GFLOPs: 25989.7557. Time: 338444.6207 us. Best GFLOPs: 162780.6482
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #31: GFLOPs: 46363.7429. Time: 189719.2177 us. Best GFLOPs: 162780.6482
2023-10-25 06:47:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #32: GFLOPs: 132999.2648. Time: 66136.4033 us. Best GFLOPs: 162780.6482
2023-10-25 06:47:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 06:47:31 [INFO] [evolutionary_search.cc:715] Picked top 25 candidate(s) from database
2023-10-25 06:47:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 472 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:47:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 943 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:47:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1409 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:47:44 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2023-10-25 06:47:50 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 106 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:47:56 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:48:02 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 78 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:48:08 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 69 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:48:08 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9999  0.9997  0.9990  0.9964  0.9962  0.9958  0.9953  0.9952  0.9939  0.9934  0.9933  0.9922  0.9921  0.9916  0.9910  0.9906
2023-10-25 06:48:08 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 06:48:08 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #33: GFLOPs: 50146.0513. Time: 175409.4847 us. Best GFLOPs: 162780.6482
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #34: GFLOPs: 17245.0439. Time: 510064.9820 us. Best GFLOPs: 162780.6482
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #35: GFLOPs: 144849.0419. Time: 60725.9317 us. Best GFLOPs: 162780.6482
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #36: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((512, 128, 2, 8, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((512, 128, 2, 8, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(256, thread="blockIdx.y"):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(64, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(4, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(1, 8, 2, 1):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 16 * 64 + ax0_0_1_ax1_0_1_fused // 2 * 2 + ax0_0_3_init * 2 + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 16 * 64 + ax0_0_1_ax1_0_1_fused % 2 * 32 + ax0_0_2_ax1_0_2_fused * 8 + ax1_0_3_init + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 8, v0_o % 2, v1_o % 8, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 8, v0_o % 2, v1_o % 8, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(1024):
                        for ax0_ax1_fused_0 in range(4):
                            for ax0_ax1_fused_1 in T.thread_binding(4, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    with T.block("A_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused // 16 * 1024 + ax0_0_1_ax1_0_1_fused // 2 * 32 + (ax0_ax1_fused_0 * 128 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) // 16)
                                        v1 = T.axis.spatial(16384, ax2_0_0 * 16 + (ax0_ax1_fused_0 * 128 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) % 16)
                                        T.reads(A[v0, v1])
                                        T.writes(A_reindex_shared_dyn[v0, v1])
                                        T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                        A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(64):
                            for ax0_ax1_fused_1 in T.thread_binding(4, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    with T.block("B_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(16384, ax2_0_0 * 16 + (ax0_ax1_fused_0 * 128 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) // 512)
                                        v1 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused % 16 * 1024 + ax0_0_1_ax1_0_1_fused % 2 * 512 + (ax0_ax1_fused_0 * 128 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) % 512)
                                        T.reads(B[v1, v0])
                                        T.writes(B_reindex_shared_dyn[v0, v1])
                                        T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                        B_reindex_shared_dyn[v0, v1] = B[v1, v0]
                        for ax2_0_1 in range(1):
                            for ax0_0, ax1_0 in T.grid(2, 1):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 16 * 64 + ax0_0_1_ax1_0_1_fused // 2 * 2 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(1, 8):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax2_0_0 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 16 * 64 + ax0_0_1_ax1_0_1_fused % 2 * 32 + ax0_0_2_ax1_0_2_fused * 8 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(1, 8, 1, 2, 1):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 16 * 64 + ax0_0_1_ax1_0_1_fused // 2 * 2 + ax0_0_3 * 2 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 16 * 64 + ax0_0_1_ax1_0_1_fused % 2 * 32 + ax0_0_2_ax1_0_2_fused * 8 + ax1_0_3 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 + ax2_0_1 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 8, v0_o % 2, v1_o % 8, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 8, v0_o % 2, v1_o % 8, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o // 8, v0_o % 2, v1_o % 8, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(2):
                    for ax0_ax1_fused in T.thread_binding(4, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 8):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(512, ax0_0_0_ax1_0_0_fused // 16 * 32 + ax0_0_1_ax1_0_1_fused // 2)
                                v1_o = T.axis.spatial(128, ax0_0_0_ax1_0_0_fused % 16 * 8 + ax0_0_1_ax1_0_1_fused % 2 * 4 + ax0_ax1_fused)
                                v2_o = T.axis.spatial(2, ax2 + ax2_1)
                                v3_o = T.axis.spatial(8, ax3)
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(16):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(4, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                for ax0_ax1_ax3_ax4_ax5_fused_3 in T.vectorized(4):
                                    with T.block("C_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(512, ax0_0_0_ax1_0_0_fused // 16 * 32 + ax0_0_1_ax1_0_1_fused // 2)
                                        v1 = T.axis.spatial(128, ax0_0_0_ax1_0_0_fused % 16 * 8 + ax0_0_1_ax1_0_1_fused % 2 * 4 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 512 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) // 2048)
                                        v2 = T.axis.spatial(2, ax2)
                                        v3 = T.axis.spatial(8, (ax0_ax1_ax3_ax4_ax5_fused_0 * 512 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 2048 // 256)
                                        v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 512 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 256 // 16)
                                        v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 512 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 16)
                                        T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                        T.writes(C[v4 + v2 * 16 + v0 * 32, v5 + v3 * 16 + v1 * 128])
                                        C[v4 + v2 * 16 + v0 * 32, v5 + v3 * 16 + v1 * 128] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vk, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vk, vj,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[16, 32, 1, 1, 2])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[16, 2, 4, 8, 1])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[1024, 1, 1])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161, l162 = sch.split(loop=l158, factors=[None, 4, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l162)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l163, l164, l165, l166, l167 = sch.get_loops(block=b92)
l168, l169, l170 = sch.split(loop=l167, factors=[None, 4, 32], preserve_unit_iters=True)
sch.bind(loop=l170, thread_axis="threadIdx.x")
sch.bind(loop=l169, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l171, l172, l173, l174, l175 = sch.get_loops(block=b101)
l176, l177, l178 = sch.split(loop=l175, factors=[None, 4, 32], preserve_unit_iters=True)
sch.bind(loop=l178, thread_axis="threadIdx.x")
sch.bind(loop=l177, thread_axis="threadIdx.y")
b179 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b179, ann_key="meta_schedule.unroll_explicit")
b180, b181, b182, b183, b184, b185, b186 = sch.get_child_blocks(b179)
l187, l188, l189, l190, l191, l192, l193 = sch.get_loops(block=b180)
l194, l195, l196, l197, l198, l199, l200 = sch.get_loops(block=b181)
l201, l202, l203, l204, l205, l206, l207 = sch.get_loops(block=b182)
l208, l209, l210, l211, l212, l213, l214 = sch.get_loops(block=b183)
l215, l216, l217, l218, l219, l220, l221, l222, l223, l224 = sch.get_loops(block=b184)
l225, l226, l227, l228, l229, l230 = sch.get_loops(block=b185)
l231, l232, l233, l234, l235, l236, l237 = sch.get_loops(block=b186)
b238 = sch.get_block(name="B_o", func_name="main")
l239, l240, l241, l242, l243, l244, l245, l246, l247, l248 = sch.get_loops(block=b238)
b249 = sch.decompose_reduction(block=b238, loop=l242)
sch.unannotate(block_or_loop=b249, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b249, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b238, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b249, ann_key="meta_schedule.auto_tensorize_init")
b250 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b250, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b250, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b251 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b251, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b252 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b252, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b252, tensor_intrin="wmma_load_16x16x16_f16_b_shared_dyn", preserve_unit_iters=True)
b253 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b253, tensor_intrin="wmma_sync_16x16x16_f16f16f16", preserve_unit_iters=True)
b254 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #37: GFLOPs: 61008.4933. Time: 144178.1717 us. Best GFLOPs: 162780.6482
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #38: GFLOPs: 60577.5353. Time: 145203.8777 us. Best GFLOPs: 162780.6482
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #39: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((256, 512, 4, 2, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((256, 512, 4, 2, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(512, thread="blockIdx.y", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(32, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(8, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(1, 1, 4, 2):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 64 * 128 + ax0_0_1_ax1_0_1_fused * 4 + ax0_0_3_init * 4 + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 64 * 16 + ax0_0_2_ax1_0_2_fused * 2 + ax1_0_3_init * 2 + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 2, v0_o % 4, v1_o % 2, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 2, v0_o % 4, v1_o % 2, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(1024):
                        for ax0_ax1_fused_0 in range(4):
                            for ax0_ax1_fused_1 in T.thread_binding(8, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    with T.block("A_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused // 64 * 2048 + ax0_0_1_ax1_0_1_fused * 64 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) // 16)
                                        v1 = T.axis.spatial(16384, ax2_0_0 * 16 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) % 16)
                                        T.reads(A[v0, v1])
                                        T.writes(A_reindex_shared_dyn[v0, v1])
                                        T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                        A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(16):
                            for ax0_ax1_fused_1 in T.thread_binding(8, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    with T.block("B_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(16384, ax2_0_0 * 16 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) // 256)
                                        v1 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused % 64 * 256 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) % 256)
                                        T.reads(B[v1, v0])
                                        T.writes(B_reindex_shared_dyn[v0, v1])
                                        T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                        B_reindex_shared_dyn[v0, v1] = B[v1, v0]
                        for ax2_0_1 in range(1):
                            for ax0_0, ax1_0 in T.grid(4, 1):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 64 * 128 + ax0_0_1_ax1_0_1_fused * 4 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(1, 2):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax2_0_0 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 64 * 16 + ax0_0_2_ax1_0_2_fused * 2 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(1, 1, 1, 4, 2):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 64 * 128 + ax0_0_1_ax1_0_1_fused * 4 + ax0_0_3 * 4 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 64 * 16 + ax0_0_2_ax1_0_2_fused * 2 + ax1_0_3 * 2 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 + ax2_0_1 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 2, v0_o % 4, v1_o % 2, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 2, v0_o % 4, v1_o % 2, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 2, v0_o % 4, v1_o % 2, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(4):
                    for ax0_ax1_fused in T.thread_binding(8, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 2):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(256, ax0_0_0_ax1_0_0_fused // 64 * 32 + ax0_0_1_ax1_0_1_fused)
                                v1_o = T.axis.spatial(512, ax0_0_0_ax1_0_0_fused % 64 * 8 + ax0_ax1_fused)
                                v2_o = T.axis.spatial(4, ax2 + ax2_1)
                                v3_o = T.axis.spatial(2, ax3)
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(4):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(8, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                for ax0_ax1_ax3_ax4_ax5_fused_3 in T.vectorized(4):
                                    with T.block("C_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(256, ax0_0_0_ax1_0_0_fused // 64 * 32 + ax0_0_1_ax1_0_1_fused)
                                        v1 = T.axis.spatial(512, ax0_0_0_ax1_0_0_fused % 64 * 8 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) // 512)
                                        v2 = T.axis.spatial(4, ax2)
                                        v3 = T.axis.spatial(2, (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 512 // 256)
                                        v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 256 // 16)
                                        v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 16)
                                        T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                        T.writes(C[v4 + v2 * 16 + v0 * 64, v5 + v3 * 16 + v1 * 32])
                                        C[v4 + v2 * 16 + v0 * 64, v5 + v3 * 16 + v1 * 32] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vk, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vk, vj,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[8, 32, 1, 1, 4])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[64, 1, 8, 1, 2])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[1024, 1, 1])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161, l162 = sch.split(loop=l158, factors=[None, 8, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l162)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l163, l164, l165, l166, l167 = sch.get_loops(block=b92)
l168, l169, l170 = sch.split(loop=l167, factors=[None, 8, 32], preserve_unit_iters=True)
sch.bind(loop=l170, thread_axis="threadIdx.x")
sch.bind(loop=l169, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l171, l172, l173, l174, l175 = sch.get_loops(block=b101)
l176, l177, l178 = sch.split(loop=l175, factors=[None, 8, 32], preserve_unit_iters=True)
sch.bind(loop=l178, thread_axis="threadIdx.x")
sch.bind(loop=l177, thread_axis="threadIdx.y")
b179 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b179, ann_key="meta_schedule.unroll_explicit")
b180, b181, b182, b183, b184, b185, b186 = sch.get_child_blocks(b179)
l187, l188, l189, l190, l191, l192, l193 = sch.get_loops(block=b180)
l194, l195, l196, l197, l198, l199, l200 = sch.get_loops(block=b181)
l201, l202, l203, l204, l205, l206, l207 = sch.get_loops(block=b182)
l208, l209, l210, l211, l212, l213, l214 = sch.get_loops(block=b183)
l215, l216, l217, l218, l219, l220, l221, l222, l223, l224 = sch.get_loops(block=b184)
sch.annotate(block_or_loop=l215, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l215, ann_key="pragma_unroll_explicit", ann_val=1)
l225, l226, l227, l228, l229, l230 = sch.get_loops(block=b185)
l231, l232, l233, l234, l235, l236, l237 = sch.get_loops(block=b186)
b238 = sch.get_block(name="B_o", func_name="main")
l239, l240, l241, l242, l243, l244, l245, l246, l247, l248 = sch.get_loops(block=b238)
b249 = sch.decompose_reduction(block=b238, loop=l242)
sch.unannotate(block_or_loop=b249, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b249, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b238, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b249, ann_key="meta_schedule.auto_tensorize_init")
b250 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b250, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b250, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b251 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b251, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b252 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b252, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b252, tensor_intrin="wmma_load_16x16x16_f16_b_shared_dyn", preserve_unit_iters=True)
b253 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b253, tensor_intrin="wmma_sync_16x16x16_f16f16f16", preserve_unit_iters=True)
b254 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #40: GFLOPs: 108295.5979. Time: 81222.9970 us. Best GFLOPs: 162780.6482
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #41: GFLOPs: 158421.5817. Time: 55523.3253 us. Best GFLOPs: 162780.6482
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #42: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((256, 128, 4, 8, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((256, 128, 4, 8, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(64, thread="blockIdx.y", annotations={"pragma_auto_unroll_max_step": 64, "pragma_unroll_explicit": 1}):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(128, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(4, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(2, 2, 2, 4):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 2 * 32 + ax0_0_1_ax1_0_1_fused // 16 * 4 + ax0_0_3_init * 2 + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 2 * 512 + ax0_0_1_ax1_0_1_fused % 16 * 32 + ax0_0_2_ax1_0_2_fused * 8 + ax1_0_3_init * 4 + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 8, v0_o % 4, v1_o % 8, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 8, v0_o % 4, v1_o % 8, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(512):
                        for ax0_ax1_fused_0 in range(8):
                            for ax0_ax1_fused_1 in T.thread_binding(4, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(2):
                                        with T.block("A_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused // 2 * 512 + ax0_0_1_ax1_0_1_fused // 16 * 64 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) // 32)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 32 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) % 32)
                                            T.reads(A[v0, v1])
                                            T.writes(A_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(32):
                            for ax0_ax1_fused_1 in T.thread_binding(4, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(4):
                                        with T.block("B_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax2_0_0 * 32 + (ax0_ax1_fused_0 * 512 + ax0_ax1_fused_1 * 128 + ax0_ax1_fused_2 * 4 + ax0_ax1_fused_3) // 512)
                                            v1 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused % 2 * 8192 + ax0_0_1_ax1_0_1_fused % 16 * 512 + (ax0_ax1_fused_0 * 512 + ax0_ax1_fused_1 * 128 + ax0_ax1_fused_2 * 4 + ax0_ax1_fused_3) % 512)
                                            T.reads(B[v1, v0])
                                            T.writes(B_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            B_reindex_shared_dyn[v0, v1] = B[v1, v0]
                        for ax2_0_1 in range(1):
                            for ax0_0, ax1_0 in T.grid(4, 2):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 2 * 32 + ax0_0_1_ax1_0_1_fused // 16 * 4 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 * 2 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(2, 8):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax2_0_0 * 2 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 2 * 512 + ax0_0_1_ax1_0_1_fused % 16 * 32 + ax0_0_2_ax1_0_2_fused * 8 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(2, 2, 2, 2, 4):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 2 * 32 + ax0_0_1_ax1_0_1_fused // 16 * 4 + ax0_0_3 * 2 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 2 * 512 + ax0_0_1_ax1_0_1_fused % 16 * 32 + ax0_0_2_ax1_0_2_fused * 8 + ax1_0_3 * 4 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 * 2 + ax2_0_1 * 2 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 8, v0_o % 4, v1_o % 8, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 8, v0_o % 4, v1_o % 8, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 8, v0_o % 4, v1_o % 8, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(4):
                    for ax0_ax1_fused in T.thread_binding(4, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 8):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(256, ax0_0_0_ax1_0_0_fused // 2 * 8 + ax0_0_1_ax1_0_1_fused // 16)
                                v1_o = T.axis.spatial(128, ax0_0_0_ax1_0_0_fused % 2 * 64 + ax0_0_1_ax1_0_1_fused % 16 * 4 + ax0_ax1_fused)
                                v2_o = T.axis.spatial(4, ax2 + ax2_1)
                                v3_o = T.axis.spatial(8, ax3)
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(16):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(4, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                for ax0_ax1_ax3_ax4_ax5_fused_3 in T.vectorized(4):
                                    with T.block("C_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(256, ax0_0_0_ax1_0_0_fused // 2 * 8 + ax0_0_1_ax1_0_1_fused // 16)
                                        v1 = T.axis.spatial(128, ax0_0_0_ax1_0_0_fused % 2 * 64 + ax0_0_1_ax1_0_1_fused % 16 * 4 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 512 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) // 2048)
                                        v2 = T.axis.spatial(4, ax2)
                                        v3 = T.axis.spatial(8, (ax0_ax1_ax3_ax4_ax5_fused_0 * 512 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 2048 // 256)
                                        v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 512 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 256 // 16)
                                        v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 512 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 16)
                                        T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                        T.writes(C[v4 + v2 * 16 + v0 * 64, v5 + v3 * 16 + v1 * 128])
                                        C[v4 + v2 * 16 + v0 * 64, v5 + v3 * 16 + v1 * 128] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vk, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vk, vj,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[32, 8, 1, 2, 2])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[2, 16, 4, 2, 4])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[512, 1, 2])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161, l162 = sch.split(loop=l158, factors=[None, 4, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l162)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l163, l164, l165, l166, l167 = sch.get_loops(block=b92)
l168, l169, l170, l171 = sch.split(loop=l167, factors=[None, 4, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l171)
sch.bind(loop=l170, thread_axis="threadIdx.x")
sch.bind(loop=l169, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l172, l173, l174, l175, l176 = sch.get_loops(block=b101)
l177, l178, l179, l180 = sch.split(loop=l176, factors=[None, 4, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l180)
sch.bind(loop=l179, thread_axis="threadIdx.x")
sch.bind(loop=l178, thread_axis="threadIdx.y")
b181 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b181, ann_key="meta_schedule.unroll_explicit")
b182, b183, b184, b185, b186, b187, b188 = sch.get_child_blocks(b181)
l189, l190, l191, l192, l193, l194, l195, l196 = sch.get_loops(block=b182)
l197, l198, l199, l200, l201, l202, l203, l204 = sch.get_loops(block=b183)
l205, l206, l207, l208, l209, l210, l211 = sch.get_loops(block=b184)
l212, l213, l214, l215, l216, l217, l218 = sch.get_loops(block=b185)
l219, l220, l221, l222, l223, l224, l225, l226, l227, l228 = sch.get_loops(block=b186)
sch.annotate(block_or_loop=l219, ann_key="pragma_auto_unroll_max_step", ann_val=64)
sch.annotate(block_or_loop=l219, ann_key="pragma_unroll_explicit", ann_val=1)
l229, l230, l231, l232, l233, l234 = sch.get_loops(block=b187)
l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b188)
b242 = sch.get_block(name="B_o", func_name="main")
l243, l244, l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b242)
b253 = sch.decompose_reduction(block=b242, loop=l246)
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b242, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize_init")
b254 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b255 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b255, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b255, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b256 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b256, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b256, tensor_intrin="wmma_load_16x16x16_f16_b_shared_dyn", preserve_unit_iters=True)
b257 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b257, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b257, tensor_intrin="wmma_sync_16x16x16_f16f16f16", preserve_unit_iters=True)
b258 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b258, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b258, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #43: GFLOPs: 32119.8298. Time: 273852.4167 us. Best GFLOPs: 162780.6482
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #44: GFLOPs: 30099.2498. Time: 292236.2873 us. Best GFLOPs: 162780.6482
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #45: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((1024, 64, 1, 16, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((1024, 64, 1, 16, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(16, thread="blockIdx.y", annotations={"pragma_auto_unroll_max_step": 16, "pragma_unroll_explicit": 1}):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(4096, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(1, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(1, 8, 1, 2):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 2 * 128 + ax0_0_1_ax1_0_1_fused // 32 + ax0_0_3_init + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 2 * 512 + ax0_0_1_ax1_0_1_fused % 32 * 16 + ax1_0_3_init * 2 + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 16, 0, v1_o % 16, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 16, 0, v1_o % 16, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(256):
                        for ax0_ax1_fused_0 in range(4):
                            for ax0_ax1_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(8):
                                        with T.block("A_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused // 2 * 2048 + ax0_0_1_ax1_0_1_fused // 32 * 16 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) // 64)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 64 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) % 64)
                                            T.reads(A[v0, v1])
                                            T.writes(A_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(256):
                            for ax0_ax1_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(2):
                                        with T.block("B_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax2_0_0 * 64 + (ax0_ax1_fused_0 * 64 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) // 256)
                                            v1 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused % 2 * 8192 + ax0_0_1_ax1_0_1_fused % 32 * 256 + (ax0_ax1_fused_0 * 64 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) % 256)
                                            T.reads(B[v1, v0])
                                            T.writes(B_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            B_reindex_shared_dyn[v0, v1] = B[v1, v0]
                        for ax2_0_1 in range(2):
                            for ax0_0, ax1_0 in T.grid(1, 2):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 2 * 128 + ax0_0_1_ax1_0_1_fused // 32 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 * 4 + ax2_0_1 * 2 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(2, 16):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax2_0_0 * 4 + ax2_0_1 * 2 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 2 * 512 + ax0_0_1_ax1_0_1_fused % 32 * 16 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(1, 8, 2, 1, 2):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 2 * 128 + ax0_0_1_ax1_0_1_fused // 32 + ax0_0_3 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 2 * 512 + ax0_0_1_ax1_0_1_fused % 32 * 16 + ax1_0_3 * 2 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 * 4 + ax2_0_1 * 2 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 16, 0, v1_o % 16, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 16, 0, v1_o % 16, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 16, 0, v1_o % 16, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(1):
                    for ax0_ax1_fused in T.thread_binding(1, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 16):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 2 * 128 + ax0_0_1_ax1_0_1_fused // 32)
                                v1_o = T.axis.spatial(64, ax0_0_0_ax1_0_0_fused % 2 * 32 + ax0_0_1_ax1_0_1_fused % 32)
                                v2_o, v3_o = T.axis.remap("SS", [ax2_1, ax3])
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(128):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                with T.block("C_reindex_shared.dyn"):
                                    v0 = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 2 * 128 + ax0_0_1_ax1_0_1_fused // 32)
                                    v1 = T.axis.spatial(64, ax0_0_0_ax1_0_0_fused % 2 * 32 + ax0_0_1_ax1_0_1_fused % 32)
                                    v2 = T.axis.spatial(1, ax2)
                                    v3 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 32 + ax0_ax1_ax3_ax4_ax5_fused_1 * 32 + ax0_ax1_ax3_ax4_ax5_fused_2) // 256)
                                    v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 32 + ax0_ax1_ax3_ax4_ax5_fused_1 * 32 + ax0_ax1_ax3_ax4_ax5_fused_2) % 256 // 16)
                                    v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 32 + ax0_ax1_ax3_ax4_ax5_fused_1 * 32 + ax0_ax1_ax3_ax4_ax5_fused_2) % 16)
                                    T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                    T.writes(C[v4 + v0 * 16, v5 + v3 * 16 + v1 * 256])
                                    C[v4 + v0 * 16, v5 + v3 * 16 + v1 * 256] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vk, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vk, vj,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[8, 128, 1, 1, 1])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[2, 32, 1, 8, 2])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[256, 2, 2])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161 = sch.split(loop=l158, factors=[None, 1, 32], preserve_unit_iters=True)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l162, l163, l164, l165, l166 = sch.get_loops(block=b92)
l167, l168, l169, l170 = sch.split(loop=l166, factors=[None, 1, 32, 8], preserve_unit_iters=True)
sch.vectorize(loop=l170)
sch.bind(loop=l169, thread_axis="threadIdx.x")
sch.bind(loop=l168, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l171, l172, l173, l174, l175 = sch.get_loops(block=b101)
l176, l177, l178, l179 = sch.split(loop=l175, factors=[None, 1, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l179)
sch.bind(loop=l178, thread_axis="threadIdx.x")
sch.bind(loop=l177, thread_axis="threadIdx.y")
b180 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b180, ann_key="meta_schedule.unroll_explicit")
b181, b182, b183, b184, b185, b186, b187 = sch.get_child_blocks(b180)
l188, l189, l190, l191, l192, l193, l194, l195 = sch.get_loops(block=b181)
l196, l197, l198, l199, l200, l201, l202, l203 = sch.get_loops(block=b182)
l204, l205, l206, l207, l208, l209, l210 = sch.get_loops(block=b183)
l211, l212, l213, l214, l215, l216, l217 = sch.get_loops(block=b184)
l218, l219, l220, l221, l222, l223, l224, l225, l226, l227 = sch.get_loops(block=b185)
sch.annotate(block_or_loop=l218, ann_key="pragma_auto_unroll_max_step", ann_val=16)
sch.annotate(block_or_loop=l218, ann_key="pragma_unroll_explicit", ann_val=1)
l228, l229, l230, l231, l232, l233 = sch.get_loops(block=b186)
l234, l235, l236, l237, l238, l239 = sch.get_loops(block=b187)
b240 = sch.get_block(name="B_o", func_name="main")
l241, l242, l243, l244, l245, l246, l247, l248, l249, l250 = sch.get_loops(block=b240)
b251 = sch.decompose_reduction(block=b240, loop=l244)
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b240, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize_init")
b252 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b252, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b252, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b253 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b253, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b254 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_load_16x16x16_f16_b_shared_dyn", preserve_unit_iters=True)
b255 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b255, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b255, tensor_intrin="wmma_sync_16x16x16_f16f16f16", preserve_unit_iters=True)
b256 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b256, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b256, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #46: GFLOPs: 64036.6086. Time: 137360.3820 us. Best GFLOPs: 162780.6482
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #47: GFLOPs: 26206.1365. Time: 335650.1260 us. Best GFLOPs: 162780.6482
2023-10-25 06:55:58 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #48: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((1024, 128, 1, 8, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((1024, 128, 1, 8, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(32, thread="blockIdx.y", annotations={"pragma_auto_unroll_max_step": 16, "pragma_unroll_explicit": 1}):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(4096, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(1, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(1, 8, 1, 1):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 4 * 128 + ax0_0_1_ax1_0_1_fused // 32 + ax0_0_3_init + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 4 * 256 + ax0_0_1_ax1_0_1_fused % 32 * 8 + ax1_0_3_init + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 8, 0, v1_o % 8, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 8, 0, v1_o % 8, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(256):
                        for ax0_ax1_fused_0 in range(4):
                            for ax0_ax1_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(8):
                                        with T.block("A_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused // 4 * 2048 + ax0_0_1_ax1_0_1_fused // 32 * 16 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) // 64)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 64 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) % 64)
                                            T.reads(A[v0, v1])
                                            T.writes(A_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(128):
                            for ax0_ax1_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(2):
                                        with T.block("B_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax2_0_0 * 64 + (ax0_ax1_fused_0 * 64 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) // 128)
                                            v1 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused % 4 * 4096 + ax0_0_1_ax1_0_1_fused % 32 * 128 + (ax0_ax1_fused_0 * 64 + ax0_ax1_fused_1 * 64 + ax0_ax1_fused_2 * 2 + ax0_ax1_fused_3) % 128)
                                            T.reads(B[v1, v0])
                                            T.writes(B_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            B_reindex_shared_dyn[v0, v1] = B[v1, v0]
                        for ax2_0_1 in range(2):
                            for ax0_0, ax1_0 in T.grid(1, 2):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 4 * 128 + ax0_0_1_ax1_0_1_fused // 32 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 * 4 + ax2_0_1 * 2 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(2, 8):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax2_0_0 * 4 + ax2_0_1 * 2 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 4 * 256 + ax0_0_1_ax1_0_1_fused % 32 * 8 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(1, 8, 2, 1, 1):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 4 * 128 + ax0_0_1_ax1_0_1_fused // 32 + ax0_0_3 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 4 * 256 + ax0_0_1_ax1_0_1_fused % 32 * 8 + ax1_0_3 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 * 4 + ax2_0_1 * 2 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 8, 0, v1_o % 8, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 8, 0, v1_o % 8, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 8, 0, v1_o % 8, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(1):
                    for ax0_ax1_fused in T.thread_binding(1, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 8):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 4 * 128 + ax0_0_1_ax1_0_1_fused // 32)
                                v1_o = T.axis.spatial(128, ax0_0_0_ax1_0_0_fused % 4 * 32 + ax0_0_1_ax1_0_1_fused % 32)
                                v2_o, v3_o = T.axis.remap("SS", [ax2_1, ax3])
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(64):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                with T.block("C_reindex_shared.dyn"):
                                    v0 = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 4 * 128 + ax0_0_1_ax1_0_1_fused // 32)
                                    v1 = T.axis.spatial(128, ax0_0_0_ax1_0_0_fused % 4 * 32 + ax0_0_1_ax1_0_1_fused % 32)
                                    v2 = T.axis.spatial(1, ax2)
                                    v3 = T.axis.spatial(8, (ax0_ax1_ax3_ax4_ax5_fused_0 * 32 + ax0_ax1_ax3_ax4_ax5_fused_1 * 32 + ax0_ax1_ax3_ax4_ax5_fused_2) // 256)
                                    v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 32 + ax0_ax1_ax3_ax4_ax5_fused_1 * 32 + ax0_ax1_ax3_ax4_ax5_fused_2) % 256 // 16)
                                    v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 32 + ax0_ax1_ax3_ax4_ax5_fused_1 * 32 + ax0_ax1_ax3_ax4_ax5_fused_2) % 16)
                                    T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                    T.writes(C[v4 + v0 * 16, v5 + v3 * 16 + v1 * 128])
                                    C[v4 + v0 * 16, v5 + v3 * 16 + v1 * 128] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vk, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vk, vj,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[8, 128, 1, 1, 1])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[4, 32, 1, 8, 1])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[256, 2, 2])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161 = sch.split(loop=l158, factors=[None, 1, 32], preserve_unit_iters=True)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l162, l163, l164, l165, l166 = sch.get_loops(block=b92)
l167, l168, l169, l170 = sch.split(loop=l166, factors=[None, 1, 32, 8], preserve_unit_iters=True)
sch.vectorize(loop=l170)
sch.bind(loop=l169, thread_axis="threadIdx.x")
sch.bind(loop=l168, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l171, l172, l173, l174, l175 = sch.get_loops(block=b101)
l176, l177, l178, l179 = sch.split(loop=l175, factors=[None, 1, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l179)
sch.bind(loop=l178, thread_axis="threadIdx.x")
sch.bind(loop=l177, thread_axis="threadIdx.y")
b180 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b180, ann_key="meta_schedule.unroll_explicit")
b181, b182, b183, b184, b185, b186, b187 = sch.get_child_blocks(b180)
l188, l189, l190, l191, l192, l193, l194, l195 = sch.get_loops(block=b181)
l196, l197, l198, l199, l200, l201, l202, l203 = sch.get_loops(block=b182)
l204, l205, l206, l207, l208, l209, l210 = sch.get_loops(block=b183)
l211, l212, l213, l214, l215, l216, l217 = sch.get_loops(block=b184)
l218, l219, l220, l221, l222, l223, l224, l225, l226, l227 = sch.get_loops(block=b185)
sch.annotate(block_or_loop=l218, ann_key="pragma_auto_unroll_max_step", ann_val=16)
sch.annotate(block_or_loop=l218, ann_key="pragma_unroll_explicit", ann_val=1)
l228, l229, l230, l231, l232, l233 = sch.get_loops(block=b186)
l234, l235, l236, l237, l238, l239 = sch.get_loops(block=b187)
b240 = sch.get_block(name="B_o", func_name="main")
l241, l242, l243, l244, l245, l246, l247, l248, l249, l250 = sch.get_loops(block=b240)
b251 = sch.decompose_reduction(block=b240, loop=l244)
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b240, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize_init")
b252 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b252, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b252, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b253 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b253, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b254 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_load_16x16x16_f16_b_shared_dyn", preserve_unit_iters=True)
b255 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b255, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b255, tensor_intrin="wmma_sync_16x16x16_f16f16f16", preserve_unit_iters=True)
b256 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b256, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b256, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 06:55:58 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 06:55:58 [INFO] [evolutionary_search.cc:715] Picked top 36 candidate(s) from database
2023-10-25 06:56:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 468 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:56:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 931 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:56:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1396 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:56:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1860 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:56:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2318 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:56:19 [INFO] [evolutionary_search.cc:723] Sampled 62 candidate(s)
2023-10-25 06:56:25 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 92 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:56:31 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:56:37 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:56:43 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 69 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 06:56:43 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9997  0.9978  0.9977  0.9976  0.9963  0.9958  0.9952  0.9948  0.9945  0.9941  0.9938  0.9934  0.9932  0.9931  0.9930  0.9926
2023-10-25 06:56:43 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 06:56:43 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #49: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((256, 256, 4, 4, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((256, 256, 4, 4, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(128, thread="blockIdx.y", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(64, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(8, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(2, 2, 2, 2):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 32 * 256 + ax0_0_1_ax1_0_1_fused // 2 * 8 + ax0_0_2_ax1_0_2_fused // 4 * 4 + ax0_0_3_init * 2 + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 32 * 32 + ax0_0_1_ax1_0_1_fused % 2 * 16 + ax0_0_2_ax1_0_2_fused % 4 * 4 + ax1_0_3_init * 2 + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 4, v0_o % 4, v1_o % 4, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 4, v0_o % 4, v1_o % 4, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(512):
                        for ax0_ax1_fused_0 in range(4):
                            for ax0_ax1_fused_1 in T.thread_binding(8, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(4):
                                        with T.block("A_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused // 32 * 4096 + ax0_0_1_ax1_0_1_fused // 2 * 128 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 128 + ax0_ax1_fused_2 * 4 + ax0_ax1_fused_3) // 32)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 32 + (ax0_ax1_fused_0 * 1024 + ax0_ax1_fused_1 * 128 + ax0_ax1_fused_2 * 4 + ax0_ax1_fused_3) % 32)
                                            T.reads(A[v0, v1])
                                            T.writes(A_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(32):
                            for ax0_ax1_fused_1 in T.thread_binding(8, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    with T.block("B_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(16384, ax2_0_0 * 32 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) // 256)
                                        v1 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused % 32 * 512 + ax0_0_1_ax1_0_1_fused % 2 * 256 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) % 256)
                                        T.reads(B[v1, v0])
                                        T.writes(B_reindex_shared_dyn[v0, v1])
                                        T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                        B_reindex_shared_dyn[v0, v1] = B[v1, v0]
                        for ax2_0_1 in range(1):
                            for ax0_0, ax1_0 in T.grid(4, 2):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 32 * 256 + ax0_0_1_ax1_0_1_fused // 2 * 8 + ax0_0_2_ax1_0_2_fused // 4 * 4 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 * 2 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(2, 4):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax2_0_0 * 2 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 32 * 32 + ax0_0_1_ax1_0_1_fused % 2 * 16 + ax0_0_2_ax1_0_2_fused % 4 * 4 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(2, 2, 2, 2, 2):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 32 * 256 + ax0_0_1_ax1_0_1_fused // 2 * 8 + ax0_0_2_ax1_0_2_fused // 4 * 4 + ax0_0_3 * 2 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 32 * 32 + ax0_0_1_ax1_0_1_fused % 2 * 16 + ax0_0_2_ax1_0_2_fused % 4 * 4 + ax1_0_3 * 2 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 * 2 + ax2_0_1 * 2 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 4, v0_o % 4, v1_o % 4, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 4, v0_o % 4, v1_o % 4, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v2_o * 16:v2_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 4, v1_o // 4, v0_o % 4, v1_o % 4, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(4):
                    for ax0_ax1_fused in T.thread_binding(8, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 4):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(256, ax0_0_0_ax1_0_0_fused // 32 * 64 + ax0_0_1_ax1_0_1_fused // 2 * 2 + ax0_ax1_fused // 4)
                                v1_o = T.axis.spatial(256, ax0_0_0_ax1_0_0_fused % 32 * 8 + ax0_0_1_ax1_0_1_fused % 2 * 4 + ax0_ax1_fused % 4)
                                v2_o = T.axis.spatial(4, ax2 + ax2_1)
                                v3_o = T.axis.spatial(4, ax3)
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(32):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(8, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                with T.block("C_reindex_shared.dyn"):
                                    v0 = T.axis.spatial(256, ax0_0_0_ax1_0_0_fused // 32 * 64 + ax0_0_1_ax1_0_1_fused // 2 * 2 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 256 + ax0_ax1_ax3_ax4_ax5_fused_1 * 32 + ax0_ax1_ax3_ax4_ax5_fused_2) // 4096)
                                    v1 = T.axis.spatial(256, ax0_0_0_ax1_0_0_fused % 32 * 8 + ax0_0_1_ax1_0_1_fused % 2 * 4 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 256 + ax0_ax1_ax3_ax4_ax5_fused_1 * 32 + ax0_ax1_ax3_ax4_ax5_fused_2) % 4096 // 1024)
                                    v2 = T.axis.spatial(4, ax2)
                                    v3 = T.axis.spatial(4, (ax0_ax1_ax3_ax4_ax5_fused_0 * 256 + ax0_ax1_ax3_ax4_ax5_fused_1 * 32 + ax0_ax1_ax3_ax4_ax5_fused_2) % 1024 // 256)
                                    v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 256 + ax0_ax1_ax3_ax4_ax5_fused_1 * 32 + ax0_ax1_ax3_ax4_ax5_fused_2) % 256 // 16)
                                    v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 256 + ax0_ax1_ax3_ax4_ax5_fused_1 * 32 + ax0_ax1_ax3_ax4_ax5_fused_2) % 16)
                                    T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                    T.writes(C[v4 + v2 * 16 + v0 * 64, v5 + v3 * 16 + v1 * 64])
                                    C[v4 + v2 * 16 + v0 * 64, v5 + v3 * 16 + v1 * 64] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vk, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vk, vj,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[4, 32, 2, 2, 2])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[32, 2, 4, 2, 2])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[512, 1, 2])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161 = sch.split(loop=l158, factors=[None, 8, 32], preserve_unit_iters=True)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l162, l163, l164, l165, l166 = sch.get_loops(block=b92)
l167, l168, l169, l170 = sch.split(loop=l166, factors=[None, 8, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l170)
sch.bind(loop=l169, thread_axis="threadIdx.x")
sch.bind(loop=l168, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l171, l172, l173, l174, l175 = sch.get_loops(block=b101)
l176, l177, l178 = sch.split(loop=l175, factors=[None, 8, 32], preserve_unit_iters=True)
sch.bind(loop=l178, thread_axis="threadIdx.x")
sch.bind(loop=l177, thread_axis="threadIdx.y")
b179 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b179, ann_key="meta_schedule.unroll_explicit")
b180, b181, b182, b183, b184, b185, b186 = sch.get_child_blocks(b179)
l187, l188, l189, l190, l191, l192, l193, l194 = sch.get_loops(block=b180)
l195, l196, l197, l198, l199, l200, l201 = sch.get_loops(block=b181)
l202, l203, l204, l205, l206, l207, l208 = sch.get_loops(block=b182)
l209, l210, l211, l212, l213, l214, l215 = sch.get_loops(block=b183)
l216, l217, l218, l219, l220, l221, l222, l223, l224, l225 = sch.get_loops(block=b184)
sch.annotate(block_or_loop=l216, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l216, ann_key="pragma_unroll_explicit", ann_val=1)
l226, l227, l228, l229, l230, l231 = sch.get_loops(block=b185)
l232, l233, l234, l235, l236, l237 = sch.get_loops(block=b186)
b238 = sch.get_block(name="B_o", func_name="main")
l239, l240, l241, l242, l243, l244, l245, l246, l247, l248 = sch.get_loops(block=b238)
b249 = sch.decompose_reduction(block=b238, loop=l242)
sch.unannotate(block_or_loop=b249, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b249, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b238, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b249, ann_key="meta_schedule.auto_tensorize_init")
b250 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b250, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b250, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b251 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b251, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b252 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b252, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b252, tensor_intrin="wmma_load_16x16x16_f16_b_shared_dyn", preserve_unit_iters=True)
b253 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b253, tensor_intrin="wmma_sync_16x16x16_f16f16f16", preserve_unit_iters=True)
b254 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #50: GFLOPs: 71098.3296. Time: 123717.2950 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #51: GFLOPs: 47935.4361. Time: 183498.7587 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #52: GFLOPs: 23886.8278. Time: 368240.3157 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #53: GFLOPs: 64015.7680. Time: 137405.1003 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #54: GFLOPs: 106623.8190. Time: 82496.5107 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #55: GFLOPs: 73196.9845. Time: 120170.1557 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #56: GFLOPs: 29005.0248. Time: 303261.0067 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #57: GFLOPs: 49624.7846. Time: 177252.0140 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #58: GFLOPs: 50207.4062. Time: 175195.1293 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #59: GFLOPs: 29563.1390. Time: 297535.8273 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #60: GFLOPs: 29265.4116. Time: 300562.7643 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #61: GFLOPs: 34003.3827. Time: 258682.8817 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #62: GFLOPs: 81955.3796. Time: 107327.8297 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #63: GFLOPs: 109253.3398. Time: 80510.9760 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #64: GFLOPs: 86864.1190. Time: 101262.6747 us. Best GFLOPs: 162780.6482
2023-10-25 07:04:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 07:04:39 [INFO] [evolutionary_search.cc:715] Picked top 51 candidate(s) from database
2023-10-25 07:04:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 447 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:04:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 897 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:04:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1346 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:04:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1794 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:04:55 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2023-10-25 07:05:01 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 69 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:05:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 65 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:05:12 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 53 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:05:17 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:05:18 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9999  0.9996  0.9991  0.9989  0.9989  0.9988  0.9988  0.9984  0.9966  0.9952  0.9933  0.9924  0.9916  0.9903  0.9896  0.9896
2023-10-25 07:05:18 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 07:05:18 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #65: GFLOPs: 59511.5358. Time: 147804.8400 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #66: GFLOPs: 30892.9343. Time: 284728.3120 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #67: GFLOPs: 47154.9532. Time: 186535.9293 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #68: GFLOPs: 33901.9258. Time: 259457.0310 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #69: GFLOPs: 42397.4444. Time: 207467.5290 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #70: GFLOPs: 49011.6810. Time: 179469.3193 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #71: GFLOPs: 98737.1550. Time: 89085.9477 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #72: GFLOPs: 88932.5354. Time: 98907.4807 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #73: GFLOPs: 62678.9029. Time: 140335.7847 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #74: GFLOPs: 38958.2110. Time: 225782.7757 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #75: GFLOPs: 45377.5237. Time: 193842.5087 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #76: GFLOPs: 96150.2404. Time: 91482.7980 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #77: GFLOPs: 98439.1908. Time: 89355.6007 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #78: GFLOPs: 50590.7263. Time: 173867.6960 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #79: GFLOPs: 45333.2169. Time: 194031.9620 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #80: GFLOPs: 109280.6721. Time: 80490.8393 us. Best GFLOPs: 162780.6482
2023-10-25 07:12:51 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 07:12:51 [INFO] [evolutionary_search.cc:715] Picked top 67 candidate(s) from database
2023-10-25 07:12:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 435 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:12:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 864 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:13:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1293 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:13:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1726 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:13:07 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2023-10-25 07:13:12 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 74 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:13:18 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:13:24 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 64 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:13:30 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 54 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:13:30 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9969  0.9966  0.9964  0.9964  0.9963  0.9960  0.9958  0.9922  0.9918  0.9917  0.9916  0.9888  0.9885  0.9878  0.9869  0.9862
2023-10-25 07:13:30 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 07:13:30 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #81: GFLOPs: 39718.9343. Time: 221458.4350 us. Best GFLOPs: 162780.6482
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #82: GFLOPs: 48648.7049. Time: 180808.3697 us. Best GFLOPs: 162780.6482
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #83: GFLOPs: 152163.5096. Time: 57806.8490 us. Best GFLOPs: 162780.6482
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #84: GFLOPs: 57875.2072. Time: 151983.7847 us. Best GFLOPs: 162780.6482
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #85: GFLOPs: 43375.4008. Time: 202789.8963 us. Best GFLOPs: 162780.6482
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #86: GFLOPs: 37551.6282. Time: 234239.9900 us. Best GFLOPs: 162780.6482
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #87: GFLOPs: 30897.2305. Time: 284688.7207 us. Best GFLOPs: 162780.6482
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #88: GFLOPs: 61834.7179. Time: 142251.6883 us. Best GFLOPs: 162780.6482
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #89: GFLOPs: 70937.6482. Time: 123997.5280 us. Best GFLOPs: 162780.6482
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #90: GFLOPs: 46161.7614. Time: 190549.3367 us. Best GFLOPs: 162780.6482
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #91: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((1024, 128, 1, 8, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((1024, 128, 1, 8, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(256, thread="blockIdx.y", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(256, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(2, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(1, 2, 1, 4):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 2 * 8 + ax0_0_1_ax1_0_1_fused // 64 * 2 + ax0_0_2_ax1_0_2_fused + ax0_0_3_init + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 2 * 512 + ax0_0_1_ax1_0_1_fused % 64 * 8 + ax1_0_3_init * 4 + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 8, 0, v1_o % 8, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 8, 0, v1_o % 8, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(1024):
                        for ax0_ax1_fused_0 in range(1):
                            for ax0_ax1_fused_1 in T.thread_binding(2, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(8):
                                        with T.block("A_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused // 2 * 128 + ax0_0_1_ax1_0_1_fused // 64 * 32 + (ax0_ax1_fused_0 * 512 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) // 16)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 16 + (ax0_ax1_fused_0 * 512 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) % 16)
                                            T.reads(A[v0, v1])
                                            T.writes(A_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(4):
                            for ax0_ax1_fused_1 in T.thread_binding(2, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(8):
                                        with T.block("B_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused % 2 * 8192 + ax0_0_1_ax1_0_1_fused % 64 * 128 + (ax0_ax1_fused_0 * 512 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) // 16)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 16 + (ax0_ax1_fused_0 * 512 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) % 16)
                                            T.reads(B[v0, v1])
                                            T.writes(B_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            B_reindex_shared_dyn[v0, v1] = B[v0, v1]
                        for ax2_0_1 in range(1):
                            for ax0_0, ax1_0 in T.grid(1, 1):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 2 * 8 + ax0_0_1_ax1_0_1_fused // 64 * 2 + ax0_0_2_ax1_0_2_fused + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(8, 1):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 2 * 512 + ax0_0_1_ax1_0_1_fused % 64 * 8 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "col_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(1, 2, 1, 1, 4):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 2 * 8 + ax0_0_1_ax1_0_1_fused // 64 * 2 + ax0_0_2_ax1_0_2_fused + ax0_0_3 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 2 * 512 + ax0_0_1_ax1_0_1_fused % 64 * 8 + ax1_0_3 * 4 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 + ax2_0_1 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 8, 0, v1_o % 8, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16:v1_o * 16 + 16, v2_o * 16:v2_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 8, 0, v1_o % 8, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16:v1_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o // 8, 0, v1_o % 8, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(1):
                    for ax0_ax1_fused in T.thread_binding(2, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 8):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 2 * 8 + ax0_0_1_ax1_0_1_fused // 64 * 2 + ax0_ax1_fused)
                                v1_o = T.axis.spatial(128, ax0_0_0_ax1_0_0_fused % 2 * 64 + ax0_0_1_ax1_0_1_fused % 64)
                                v2_o, v3_o = T.axis.remap("SS", [ax2_1, ax3])
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(32):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(2, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                for ax0_ax1_ax3_ax4_ax5_fused_3 in T.vectorized(2):
                                    with T.block("C_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 2 * 8 + ax0_0_1_ax1_0_1_fused // 64 * 2 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 128 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) // 2048)
                                        v1 = T.axis.spatial(128, ax0_0_0_ax1_0_0_fused % 2 * 64 + ax0_0_1_ax1_0_1_fused % 64)
                                        v2 = T.axis.spatial(1, ax2)
                                        v3 = T.axis.spatial(8, (ax0_ax1_ax3_ax4_ax5_fused_0 * 128 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) % 2048 // 256)
                                        v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 128 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) % 256 // 16)
                                        v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 128 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) % 16)
                                        T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                        T.writes(C[v4 + v0 * 16, v5 + v3 * 16 + v1 * 128])
                                        C[v4 + v0 * 16, v5 + v3 * 16 + v1 * 128] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vj, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vj, vk,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16_trans")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[128, 4, 2, 1, 1])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[2, 64, 1, 2, 4])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[1024, 1, 1])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_trans_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161, l162 = sch.split(loop=l158, factors=[None, 2, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l162)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l163, l164, l165, l166, l167 = sch.get_loops(block=b92)
l168, l169, l170, l171 = sch.split(loop=l167, factors=[None, 2, 32, 8], preserve_unit_iters=True)
sch.vectorize(loop=l171)
sch.bind(loop=l170, thread_axis="threadIdx.x")
sch.bind(loop=l169, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l172, l173, l174, l175, l176 = sch.get_loops(block=b101)
l177, l178, l179, l180 = sch.split(loop=l176, factors=[None, 2, 32, 8], preserve_unit_iters=True)
sch.vectorize(loop=l180)
sch.bind(loop=l179, thread_axis="threadIdx.x")
sch.bind(loop=l178, thread_axis="threadIdx.y")
b181 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b181, ann_key="meta_schedule.unroll_explicit")
b182, b183, b184, b185, b186, b187, b188 = sch.get_child_blocks(b181)
l189, l190, l191, l192, l193, l194, l195, l196 = sch.get_loops(block=b182)
l197, l198, l199, l200, l201, l202, l203, l204 = sch.get_loops(block=b183)
l205, l206, l207, l208, l209, l210, l211 = sch.get_loops(block=b184)
l212, l213, l214, l215, l216, l217, l218 = sch.get_loops(block=b185)
l219, l220, l221, l222, l223, l224, l225, l226, l227, l228 = sch.get_loops(block=b186)
sch.annotate(block_or_loop=l219, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l219, ann_key="pragma_unroll_explicit", ann_val=1)
l229, l230, l231, l232, l233, l234 = sch.get_loops(block=b187)
l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b188)
b242 = sch.get_block(name="B_o", func_name="main")
l243, l244, l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b242)
b253 = sch.decompose_reduction(block=b242, loop=l246)
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b242, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize_init")
b254 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b255 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b255, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b255, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b256 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b256, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b256, tensor_intrin="wmma_load_16x16x16_f16_b_trans_shared_dyn", preserve_unit_iters=True)
b257 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b257, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b257, tensor_intrin="wmma_sync_16x16x16_f16f16f16_trans", preserve_unit_iters=True)
b258 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b258, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b258, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #92: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((64, 512, 16, 2, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((64, 512, 16, 2, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(16, thread="blockIdx.y", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(2048, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(1, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(8, 2, 2, 1):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 64 + ax0_0_1_ax1_0_1_fused // 512 * 16 + ax0_0_3_init * 2 + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused % 512 * 2 + ax1_0_3_init + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 16, v1_o // 2, v0_o % 16, v1_o % 2, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 16, v1_o // 2, v0_o % 16, v1_o % 2, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(512):
                        for ax0_ax1_fused_0 in range(256):
                            for ax0_ax1_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    with T.block("A_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused * 1024 + ax0_0_1_ax1_0_1_fused // 512 * 256 + (ax0_ax1_fused_0 * 32 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) // 32)
                                        v1 = T.axis.spatial(16384, ax2_0_0 * 32 + (ax0_ax1_fused_0 * 32 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) % 32)
                                        T.reads(A[v0, v1])
                                        T.writes(A_reindex_shared_dyn[v0, v1])
                                        T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                        A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(8):
                            for ax0_ax1_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(4):
                                        with T.block("B_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_1_ax1_0_1_fused % 512 * 32 + (ax0_ax1_fused_0 * 128 + ax0_ax1_fused_1 * 128 + ax0_ax1_fused_2 * 4 + ax0_ax1_fused_3) // 32)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 32 + (ax0_ax1_fused_0 * 128 + ax0_ax1_fused_1 * 128 + ax0_ax1_fused_2 * 4 + ax0_ax1_fused_3) % 32)
                                            T.reads(B[v0, v1])
                                            T.writes(B_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            B_reindex_shared_dyn[v0, v1] = B[v0, v1]
                        for ax2_0_1 in range(1):
                            for ax0_0, ax1_0 in T.grid(16, 2):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 64 + ax0_0_1_ax1_0_1_fused // 512 * 16 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 * 2 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(2, 2):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused % 512 * 2 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 * 2 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "col_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(8, 2, 2, 2, 1):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused * 64 + ax0_0_1_ax1_0_1_fused // 512 * 16 + ax0_0_3 * 2 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_1_ax1_0_1_fused % 512 * 2 + ax1_0_3 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 * 2 + ax2_0_1 * 2 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o // 16, v1_o // 2, v0_o % 16, v1_o % 2, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16:v1_o * 16 + 16, v2_o * 16:v2_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 16, v1_o // 2, v0_o % 16, v1_o % 2, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16:v1_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 16, v1_o // 2, v0_o % 16, v1_o % 2, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(16):
                    for ax0_ax1_fused in T.thread_binding(1, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 2):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(64, ax0_0_0_ax1_0_0_fused * 4 + ax0_0_1_ax1_0_1_fused // 512)
                                v1_o = T.axis.spatial(512, ax0_0_1_ax1_0_1_fused % 512)
                                v2_o = T.axis.spatial(16, ax2 + ax2_1)
                                v3_o = T.axis.spatial(2, ax3)
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(4):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                for ax0_ax1_ax3_ax4_ax5_fused_3 in T.vectorized(4):
                                    with T.block("C_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(64, ax0_0_0_ax1_0_0_fused * 4 + ax0_0_1_ax1_0_1_fused // 512)
                                        v1 = T.axis.spatial(512, ax0_0_1_ax1_0_1_fused % 512)
                                        v2 = T.axis.spatial(16, ax2)
                                        v3 = T.axis.spatial(2, (ax0_ax1_ax3_ax4_ax5_fused_0 * 128 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) // 256)
                                        v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 128 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 256 // 16)
                                        v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 128 + ax0_ax1_ax3_ax4_ax5_fused_1 * 128 + ax0_ax1_ax3_ax4_ax5_fused_2 * 4 + ax0_ax1_ax3_ax4_ax5_fused_3) % 16)
                                        T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                        T.writes(C[v4 + v2 * 16 + v0 * 256, v5 + v3 * 16 + v1 * 32])
                                        C[v4 + v2 * 16 + v0 * 256, v5 + v3 * 16 + v1 * 32] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vj, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vj, vk,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16_trans")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[16, 4, 1, 8, 2])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[1, 512, 1, 2, 1])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[512, 1, 2])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_trans_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161, l162 = sch.split(loop=l158, factors=[None, 1, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l162)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l163, l164, l165, l166, l167 = sch.get_loops(block=b92)
l168, l169, l170 = sch.split(loop=l167, factors=[None, 1, 32], preserve_unit_iters=True)
sch.bind(loop=l170, thread_axis="threadIdx.x")
sch.bind(loop=l169, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l171, l172, l173, l174, l175 = sch.get_loops(block=b101)
l176, l177, l178, l179 = sch.split(loop=l175, factors=[None, 1, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l179)
sch.bind(loop=l178, thread_axis="threadIdx.x")
sch.bind(loop=l177, thread_axis="threadIdx.y")
b180 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b180, ann_key="meta_schedule.unroll_explicit")
b181, b182, b183, b184, b185, b186, b187 = sch.get_child_blocks(b180)
l188, l189, l190, l191, l192, l193, l194 = sch.get_loops(block=b181)
l195, l196, l197, l198, l199, l200, l201, l202 = sch.get_loops(block=b182)
l203, l204, l205, l206, l207, l208, l209 = sch.get_loops(block=b183)
l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b184)
l217, l218, l219, l220, l221, l222, l223, l224, l225, l226 = sch.get_loops(block=b185)
sch.annotate(block_or_loop=l217, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l217, ann_key="pragma_unroll_explicit", ann_val=1)
l227, l228, l229, l230, l231, l232 = sch.get_loops(block=b186)
l233, l234, l235, l236, l237, l238, l239 = sch.get_loops(block=b187)
b240 = sch.get_block(name="B_o", func_name="main")
l241, l242, l243, l244, l245, l246, l247, l248, l249, l250 = sch.get_loops(block=b240)
b251 = sch.decompose_reduction(block=b240, loop=l244)
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b240, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize_init")
b252 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b252, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b252, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b253 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b253, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b254 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_load_16x16x16_f16_b_trans_shared_dyn", preserve_unit_iters=True)
b255 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b255, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b255, tensor_intrin="wmma_sync_16x16x16_f16f16f16_trans", preserve_unit_iters=True)
b256 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b256, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b256, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #93: Error in running:
LocalRunner: Timeout, killed after 30 seconds

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((1024, 1024, 1, 1, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((1024, 1024, 1, 1, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(4096, thread="blockIdx.y"):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(256, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(1, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(1, 1, 1, 1):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 1024 * 256 + ax0_0_1_ax1_0_1_fused + ax0_0_3_init + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 1024 + ax1_0_3_init + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, 0, 0, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, 0, 0, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(32):
                        for ax0_ax1_fused_0 in range(256):
                            for ax0_ax1_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    with T.block("A_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused // 1024 * 4096 + ax0_0_1_ax1_0_1_fused * 16 + (ax0_ax1_fused_0 * 32 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) // 512)
                                        v1 = T.axis.spatial(16384, ax2_0_0 * 512 + (ax0_ax1_fused_0 * 32 + ax0_ax1_fused_1 * 32 + ax0_ax1_fused_2) % 512)
                                        T.reads(A[v0, v1])
                                        T.writes(A_reindex_shared_dyn[v0, v1])
                                        T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                        A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(32):
                            for ax0_ax1_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(8):
                                        with T.block("B_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused % 1024 * 16 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) // 512)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 512 + (ax0_ax1_fused_0 * 256 + ax0_ax1_fused_1 * 256 + ax0_ax1_fused_2 * 8 + ax0_ax1_fused_3) % 512)
                                            T.reads(B[v0, v1])
                                            T.writes(B_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            B_reindex_shared_dyn[v0, v1] = B[v0, v1]
                        for ax2_0_1 in range(16):
                            for ax0_0, ax1_0 in T.grid(1, 2):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 1024 * 256 + ax0_0_1_ax1_0_1_fused + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 * 32 + ax2_0_1 * 2 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(1, 2):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 1024 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 * 32 + ax2_0_1 * 2 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "col_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(1, 1, 2, 1, 1):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 1024 * 256 + ax0_0_1_ax1_0_1_fused + ax0_0_3 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 1024 + ax1_0_3 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 * 32 + ax2_0_1 * 2 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, 0, 0, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16:v1_o * 16 + 16, v2_o * 16:v2_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, 0, 0, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16:v1_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, 0, 0, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(1):
                    for ax0_ax1_fused in T.thread_binding(1, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 1):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 1024 * 256 + ax0_0_1_ax1_0_1_fused)
                                v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 1024)
                                v2_o, v3_o = T.axis.remap("SS", [ax2_1, ax3])
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(4):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(1, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                for ax0_ax1_ax3_ax4_ax5_fused_3 in T.vectorized(2):
                                    with T.block("C_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 1024 * 256 + ax0_0_1_ax1_0_1_fused)
                                        v1 = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 1024)
                                        v2 = T.axis.spatial(1, ax2)
                                        v3 = T.axis.spatial(1, 0)
                                        v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 64 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) // 16)
                                        v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 64 + ax0_ax1_ax3_ax4_ax5_fused_1 * 64 + ax0_ax1_ax3_ax4_ax5_fused_2 * 2 + ax0_ax1_ax3_ax4_ax5_fused_3) % 16)
                                        T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                        T.writes(C[v4 + v0 * 16, v5 + v1 * 16])
                                        C[v4 + v0 * 16, v5 + v1 * 16] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vj, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vj, vk,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16_trans")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[4, 256, 1, 1, 1])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[1024, 1, 1, 1, 1])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[32, 16, 2])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_trans_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161, l162 = sch.split(loop=l158, factors=[None, 1, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l162)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l163, l164, l165, l166, l167 = sch.get_loops(block=b92)
l168, l169, l170 = sch.split(loop=l167, factors=[None, 1, 32], preserve_unit_iters=True)
sch.bind(loop=l170, thread_axis="threadIdx.x")
sch.bind(loop=l169, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l171, l172, l173, l174, l175 = sch.get_loops(block=b101)
l176, l177, l178, l179 = sch.split(loop=l175, factors=[None, 1, 32, 8], preserve_unit_iters=True)
sch.vectorize(loop=l179)
sch.bind(loop=l178, thread_axis="threadIdx.x")
sch.bind(loop=l177, thread_axis="threadIdx.y")
b180 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b180, ann_key="meta_schedule.unroll_explicit")
b181, b182, b183, b184, b185, b186, b187 = sch.get_child_blocks(b180)
l188, l189, l190, l191, l192, l193, l194 = sch.get_loops(block=b181)
l195, l196, l197, l198, l199, l200, l201, l202 = sch.get_loops(block=b182)
l203, l204, l205, l206, l207, l208, l209 = sch.get_loops(block=b183)
l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b184)
l217, l218, l219, l220, l221, l222, l223, l224, l225, l226 = sch.get_loops(block=b185)
l227, l228, l229, l230, l231, l232 = sch.get_loops(block=b186)
l233, l234, l235, l236, l237, l238, l239 = sch.get_loops(block=b187)
b240 = sch.get_block(name="B_o", func_name="main")
l241, l242, l243, l244, l245, l246, l247, l248, l249, l250 = sch.get_loops(block=b240)
b251 = sch.decompose_reduction(block=b240, loop=l244)
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b240, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b251, ann_key="meta_schedule.auto_tensorize_init")
b252 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b252, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b252, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b253 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b253, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b254 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_load_16x16x16_f16_b_trans_shared_dyn", preserve_unit_iters=True)
b255 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b255, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b255, tensor_intrin="wmma_sync_16x16x16_f16f16f16_trans", preserve_unit_iters=True)
b256 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b256, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b256, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #94: GFLOPs: 53870.0236. Time: 163283.6303 us. Best GFLOPs: 162780.6482
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #95: GFLOPs: 54822.0213. Time: 160448.1707 us. Best GFLOPs: 162780.6482
2023-10-25 07:21:27 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #96: GFLOPs: 44429.6245. Time: 197978.1087 us. Best GFLOPs: 162780.6482
2023-10-25 07:21:27 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 07:21:28 [INFO] [evolutionary_search.cc:715] Picked top 80 candidate(s) from database
2023-10-25 07:21:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 417 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:21:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 837 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:21:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1257 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:21:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1674 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:21:43 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2023-10-25 07:21:49 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:21:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:22:01 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 53 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:22:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 71 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:22:07 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9997  0.9994  0.9984  0.9972  0.9970  0.9968  0.9956  0.9954  0.9948  0.9947  0.9943  0.9932  0.9924  0.9898  0.9886  0.9884
2023-10-25 07:22:07 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 07:22:07 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #97: GFLOPs: 84982.6643. Time: 103504.5570 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #98: GFLOPs: 134046.6748. Time: 65619.6287 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:121] [Task #0: main] Trial #99: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/root/unity/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/root/unity/python/tvm/meta_schedule/runner/local_runner.py", line 158, in _worker_func
    costs: List[float] = f_run_evaluator(
  File "/root/unity/python/tvm/meta_schedule/runner/local_runner.py", line 382, in default_run_evaluator
    return run_evaluator_common(rt_mod, device, evaluator_config, repeated_args)
  File "/root/unity/python/tvm/meta_schedule/runner/utils.py", line 117, in run_evaluator_common
    profile_result = evaluator(*args)
  File "/root/unity/python/tvm/runtime/module.py", line 397, in evaluator
    blob = feval(*args)
  File "/root/unity/python/tvm/_ffi/_ctypes/packed_func.py", line 238, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  2: TVMFuncCall
  1: tvm::runtime::profiling::WrapTimeEvaluator(tvm::runtime::PackedFunc, DLDevice, int, int, int, int, int, int, tvm::runtime::PackedFunc)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*) [clone .isra.0]
  0: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::WrapPackedFunc(int (*)(TVMValue*, int*, int, TVMValue*, int*, void*), tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)
  2: TVMFuncCall
  1: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::detail::PackFuncVoidAddr_<4, tvm::runtime::CUDAWrappedFunc>(tvm::runtime::CUDAWrappedFunc, std::vector<tvm::runtime::detail::ArgConvertCode, std::allocator<tvm::runtime::detail::ArgConvertCode> > const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)
  0: tvm::runtime::CUDAWrappedFunc::operator()(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*, void**) const
  File "/root/unity/src/runtime/cuda/cuda_module.cc", line 206
  File "/root/unity/src/runtime/library_module.cc", line 87
TVMError: CUDALaunch Error: CUDA_ERROR_INVALID_VALUE
 grid=(1,131072,1),  block=(32,4,1)


# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16384, 16384), "float16"), B: T.Buffer((16384, 16384), "float16"), C: T.Buffer((16384, 16384), "float16")):
        T.func_attr({"global_symbol": "main", "tir.noalias": T.bool(True)})
        # with T.block("root"):
        C_reindex_shared_dyn = T.alloc_buffer((512, 1024, 2, 1, 16, 16), "float16", scope="shared.dyn")
        C_reindex_shared_dyn_wmma_accumulator = T.alloc_buffer((512, 1024, 2, 1, 16, 16), "float16", scope="wmma.accumulator")
        A_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        B_reindex_shared_dyn = T.alloc_buffer((16384, 16384), "float16", scope="shared.dyn")
        A_reindex_shared_dyn_wmma_matrix_a = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_a")
        B_reindex_shared_dyn_wmma_matrix_b = T.alloc_buffer((16384, 16384), "float16", scope="wmma.matrix_b")
        for ax0_0_0_ax1_0_0_fused in T.thread_binding(131072, thread="blockIdx.y"):
            for ax0_0_1_ax1_0_1_fused in T.thread_binding(1, thread="blockIdx.x"):
                for ax0_0_2_ax1_0_2_fused in T.thread_binding(4, thread="threadIdx.y"):
                    for ax0_0_3_init, ax1_0_3_init, ax0_0_4_init, ax1_0_4_init in T.grid(1, 1, 2, 1):
                        with T.block("B_o_init"):
                            v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 256 * 2 + ax0_0_3_init * 2 + ax0_0_4_init)
                            v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 256 * 4 + ax0_0_2_ax1_0_2_fused + ax1_0_3_init + ax1_0_4_init)
                            T.reads()
                            T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o, v0_o % 2, 0, 0:16, 0:16])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                            C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o, v0_o % 2, 0, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                            T.tvm_fill_fragment(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.float32(0))
                    for ax2_0_0 in range(256):
                        for ax0_ax1_fused_0 in range(4):
                            for ax0_ax1_fused_1 in T.thread_binding(4, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(4):
                                        with T.block("A_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused // 256 * 32 + (ax0_ax1_fused_0 * 512 + ax0_ax1_fused_1 * 128 + ax0_ax1_fused_2 * 4 + ax0_ax1_fused_3) // 64)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 64 + (ax0_ax1_fused_0 * 512 + ax0_ax1_fused_1 * 128 + ax0_ax1_fused_2 * 4 + ax0_ax1_fused_3) % 64)
                                            T.reads(A[v0, v1])
                                            T.writes(A_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            A_reindex_shared_dyn[v0, v1] = A[v0, v1]
                        for ax0_ax1_fused_0 in range(8):
                            for ax0_ax1_fused_1 in T.thread_binding(4, thread="threadIdx.y"):
                                for ax0_ax1_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                    for ax0_ax1_fused_3 in T.vectorized(4):
                                        with T.block("B_reindex_shared.dyn"):
                                            v0 = T.axis.spatial(16384, ax0_0_0_ax1_0_0_fused % 256 * 64 + (ax0_ax1_fused_0 * 512 + ax0_ax1_fused_1 * 128 + ax0_ax1_fused_2 * 4 + ax0_ax1_fused_3) // 64)
                                            v1 = T.axis.spatial(16384, ax2_0_0 * 64 + (ax0_ax1_fused_0 * 512 + ax0_ax1_fused_1 * 128 + ax0_ax1_fused_2 * 4 + ax0_ax1_fused_3) % 64)
                                            T.reads(B[v0, v1])
                                            T.writes(B_reindex_shared_dyn[v0, v1])
                                            T.block_attr({"buffer_dim_align": [[0, 0, 32, 8]]})
                                            B_reindex_shared_dyn[v0, v1] = B[v0, v1]
                        for ax2_0_1 in range(2):
                            for ax0_0, ax1_0 in T.grid(2, 2):
                                with T.block("A_reindex_shared.dyn_wmma.matrix_a_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 256 * 2 + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 * 4 + ax2_0_1 * 2 + ax1_0)
                                    T.reads(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(A_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "row_major")
                            for ax0_0, ax1_0 in T.grid(1, 2):
                                with T.block("B_reindex_shared.dyn_wmma.matrix_b_o"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 256 * 4 + ax0_0_2_ax1_0_2_fused + ax0_0)
                                    v1_o = T.axis.spatial(1024, ax2_0_0 * 4 + ax2_0_1 * 2 + ax1_0)
                                    T.reads(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    T.writes(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16])
                                    A_1 = T.match_buffer(B_reindex_shared_dyn[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="shared.dyn", offset_factor=16)
                                    C_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v0_o * 16:v0_o * 16 + 16, v1_o * 16:v1_o * 16 + 16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    T.tvm_load_matrix_sync(C_1.data, 16, 16, 16, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), A_1.data, A_1.elem_offset, A_1.strides[0] * 16, 1), A_1.strides[0], "col_major")
                            for ax0_0_3, ax1_0_3, ax2_0_2, ax0_0_4, ax1_0_4 in T.grid(1, 1, 2, 2, 1):
                                with T.block("B_o_update"):
                                    v0_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused // 256 * 2 + ax0_0_3 * 2 + ax0_0_4)
                                    v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 256 * 4 + ax0_0_2_ax1_0_2_fused + ax1_0_3 + ax1_0_4)
                                    v2_o = T.axis.reduce(1024, ax2_0_0 * 4 + ax2_0_1 * 2 + ax2_0_2)
                                    T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o, v0_o % 2, 0, 0:16, 0:16], A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16:v1_o * 16 + 16, v2_o * 16:v2_o * 16 + 16])
                                    T.writes(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o, v0_o % 2, 0, 0:16, 0:16])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "warp_execution": 1})
                                    A_1 = T.match_buffer(A_reindex_shared_dyn_wmma_matrix_a[v0_o * 16:v0_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.matrix_a", offset_factor=16)
                                    B_1 = T.match_buffer(B_reindex_shared_dyn_wmma_matrix_b[v1_o * 16:v1_o * 16 + 16, v2_o * 16:v2_o * 16 + 16], (16, 16), "float16", strides=("B_s0", "B_s1"), scope="wmma.matrix_b", offset_factor=16)
                                    C_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o // 2, v1_o, v0_o % 2, 0, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="wmma.accumulator", offset_factor=16)
                                    T.tvm_mma_sync(C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16, A_1.data, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, B_1.data, B_1.elem_offset // B_1.strides[0] // 16 * (B_1.strides[0] // 16) + B_1.elem_offset % B_1.strides[0] // 16, C_1.data, C_1.elem_offset // C_1.strides[0] // 16 * (C_1.strides[0] // 16) + C_1.elem_offset % C_1.strides[0] // 16)
                for ax2 in range(2):
                    for ax0_ax1_fused in T.thread_binding(4, thread="threadIdx.y"):
                        for ax2_1, ax3 in T.grid(1, 1):
                            with T.block("C_reindex_shared.dyn_wmma.accumulator_o"):
                                v0_o = T.axis.spatial(512, ax0_0_0_ax1_0_0_fused // 256)
                                v1_o = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 256 * 4 + ax0_ax1_fused)
                                v2_o = T.axis.spatial(2, ax2 + ax2_1)
                                v3_o = T.axis.spatial(1, ax3)
                                v4_o = T.axis.spatial(1, 0)
                                v5_o = T.axis.spatial(1, 0)
                                T.reads(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                T.writes(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16])
                                A_1 = T.match_buffer(C_reindex_shared_dyn_wmma_accumulator[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("A_s0", "A_s1"), scope="wmma.accumulator", offset_factor=16)
                                C_1 = T.match_buffer(C_reindex_shared_dyn[v0_o, v1_o, v2_o, v3_o, 0:16, 0:16], (16, 16), "float16", strides=("C_s0", "C_s1"), scope="shared.dyn", offset_factor=16)
                                T.tvm_store_matrix_sync(A_1.data, 16, 16, 16, A_1.elem_offset // A_1.strides[0] // 16 * (A_1.strides[0] // 16) + A_1.elem_offset % A_1.strides[0] // 16, T.tvm_access_ptr(T.type_annotation("float16"), C_1.data, C_1.elem_offset, C_1.strides[0] * 16, 2), C_1.strides[0], "row_major")
                    for ax0_ax1_ax3_ax4_ax5_fused_0 in range(1):
                        for ax0_ax1_ax3_ax4_ax5_fused_1 in T.thread_binding(4, thread="threadIdx.y"):
                            for ax0_ax1_ax3_ax4_ax5_fused_2 in T.thread_binding(32, thread="threadIdx.x"):
                                for ax0_ax1_ax3_ax4_ax5_fused_3 in T.vectorized(8):
                                    with T.block("C_reindex_shared.dyn"):
                                        v0 = T.axis.spatial(512, ax0_0_0_ax1_0_0_fused // 256)
                                        v1 = T.axis.spatial(1024, ax0_0_0_ax1_0_0_fused % 256 * 4 + (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) // 256)
                                        v2 = T.axis.spatial(2, ax2)
                                        v3 = T.axis.spatial(1, 0)
                                        v4 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) % 256 // 16)
                                        v5 = T.axis.spatial(16, (ax0_ax1_ax3_ax4_ax5_fused_0 * 1024 + ax0_ax1_ax3_ax4_ax5_fused_1 * 256 + ax0_ax1_ax3_ax4_ax5_fused_2 * 8 + ax0_ax1_ax3_ax4_ax5_fused_3) % 16)
                                        T.reads(C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5])
                                        T.writes(C[v4 + v2 * 16 + v0 * 32, v5 + v1 * 16])
                                        C[v4 + v2 * 16 + v0 * 32, v5 + v1 * 16] = C_reindex_shared_dyn[v0, v1, v2, v3, v4, v5]
b0 = sch.get_block(name="B", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
b2 = sch.reindex(block=b0, buffer=("write", 0))
b3 = sch.reindex(block=b0, buffer=("read", 0))
b4 = sch.reindex(block=b0, buffer=("read", 1))
sch.transform_layout(block=b0, buffer=("read", 0), index_map=lambda vi, vk: (vi, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("read", 1), index_map=lambda vj, vk: (vj, vk,), pad_value=None, assume_injective_transform=True)
sch.transform_layout(block=b0, buffer=("write", 0), index_map=lambda vi, vj: (vi, vj,), pad_value=None, assume_injective_transform=True)
sch.transform_block_layout(block=b2, index_map=lambda vi, vj: (vi, vj,))
sch.transform_block_layout(block=b3, index_map=lambda vi, vk: (vi, vk,))
sch.transform_block_layout(block=b4, index_map=lambda vj, vk: (vj, vk,))
sch.transform_block_layout(block=b0, index_map=lambda vi, vj, vk: (vi, vj, vk,))
l5, l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, 16], preserve_unit_iters=True)
l10, l11 = sch.split(loop=l6, factors=[None, 16], preserve_unit_iters=True)
l12, l13 = sch.split(loop=l5, factors=[None, 16], preserve_unit_iters=True)
l14, l15, l16, l17, l18, l19 = sch.get_loops(block=b0)
sch.reorder(l16, l18, l13, l11, l9)
b20 = sch.blockize(target=l13, preserve_unit_iters=True)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_sync_16x16x16_f16f16f16_trans")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.auto_tensorize_init", ann_val="wmma_fill_16x16x16_f16")
sch.annotate(block_or_loop=b20, ann_key="warp_execution", ann_val=1)
l21, l22, l23 = sch.get_loops(block=b20)
v24, v25, v26, v27, v28 = sch.sample_perfect_tile(loop=l21, n=5, max_innermost_factor=4, decision=[512, 1, 1, 1, 2])
l29, l30, l31, l32, l33 = sch.split(loop=l21, factors=[v24, v25, v26, v27, v28], preserve_unit_iters=True)
v34, v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l22, n=5, max_innermost_factor=4, decision=[256, 1, 4, 1, 1])
l39, l40, l41, l42, l43 = sch.split(loop=l22, factors=[v34, v35, v36, v37, v38], preserve_unit_iters=True)
v44, v45, v46 = sch.sample_perfect_tile(loop=l23, n=3, max_innermost_factor=4, decision=[256, 2, 2])
l47, l48, l49 = sch.split(loop=l23, factors=[v44, v45, v46], preserve_unit_iters=True)
sch.reorder(l29, l39, l30, l40, l31, l41, l47, l48, l32, l42, l49, l33, l43)
l50 = sch.fuse(l29, l39, preserve_unit_iters=True)
sch.bind(loop=l50, thread_axis="blockIdx.y")
l51 = sch.fuse(l30, l40, preserve_unit_iters=True)
sch.bind(loop=l51, thread_axis="blockIdx.x")
l52 = sch.fuse(l31, l41, preserve_unit_iters=True)
sch.bind(loop=l52, thread_axis="threadIdx.y")
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b20, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
sch.transform_layout(block=b20, buffer=("write", 0), index_map=lambda i0, i1: (i0 // 16 // (v27 * v28), i1 // 16 // (v37 * v38), i0 // 16 % (v27 * v28), i1 // 16 % (v37 * v38), i0 % 16, i1 % 16,), pad_value=None, assume_injective_transform=True)
b53 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="shared.dyn")
sch.reverse_compute_at(block=b53, loop=l51, preserve_unit_loops=True, index=-1)
b54 = sch.cache_write(block=b20, write_buffer_index=0, storage_scope="wmma.accumulator")
l55, l56, l57, l58, l59, l60, l61, l62 = sch.get_loops(block=b53)
sch.reorder(l59, l57, l58, l60)
sch.compute_at(block=b54, loop=l59, preserve_unit_loops=True, index=-1)
l63, l64, l65, l66, l67, l68, l69, l70, l71 = sch.get_loops(block=b54)
l72 = sch.fuse(l66, l67, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.y")
sch.reverse_compute_inline(block=b2)
l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b54)
b81 = sch.blockize(target=l79, preserve_unit_iters=True)
sch.annotate(block_or_loop=b81, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_store_16x16x16_f16_shared_dyn")
l82, l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b53)
l90 = sch.fuse(l85, l86, l87, l88, l89, preserve_unit_iters=True)
v91 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch", ann_val=v91)
b92 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b92, loop=l47, preserve_unit_loops=True, index=-1)
l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b92)
l99 = sch.fuse(l97, l98, preserve_unit_iters=True)
v100 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch", ann_val=v100)
b101 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="shared.dyn", consumer_blocks=[b20])
sch.compute_at(block=b101, loop=l47, preserve_unit_loops=True, index=-1)
l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b101)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
v109 = sch.sample_categorical(candidates=[1, 2, 4, 8], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch", ann_val=v109)
b110 = sch.cache_read(block=b20, read_buffer_index=0, storage_scope="wmma.matrix_a")
sch.compute_at(block=b110, loop=l48, preserve_unit_loops=True, index=-1)
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b110)
l118, l119 = sch.split(loop=l117, factors=[None, 16], preserve_unit_iters=True)
l120, l121 = sch.split(loop=l116, factors=[None, 16], preserve_unit_iters=True)
l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b110)
sch.reorder(l129, l121, l119)
b131 = sch.blockize(target=l121, preserve_unit_iters=True)
sch.annotate(block_or_loop=b131, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_a_shared_dyn")
b132 = sch.cache_read(block=b20, read_buffer_index=1, storage_scope="wmma.matrix_b")
sch.compute_at(block=b132, loop=l48, preserve_unit_loops=True, index=-1)
l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b132)
l140, l141 = sch.split(loop=l139, factors=[None, 16], preserve_unit_iters=True)
l142, l143 = sch.split(loop=l138, factors=[None, 16], preserve_unit_iters=True)
l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b132)
sch.reorder(l151, l143, l141)
b153 = sch.blockize(target=l143, preserve_unit_iters=True)
sch.annotate(block_or_loop=b153, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_load_16x16x16_f16_b_trans_shared_dyn")
sch.compute_inline(block=b3)
sch.compute_inline(block=b4)
sch.storage_align(block=b92, buffer_index=0, axis=-2, factor=32, offset=8)
sch.storage_align(block=b101, buffer_index=0, axis=-2, factor=32, offset=8)
v154 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v154)
sch.enter_postproc()
sch.unannotate(block_or_loop=b53, ann_key="meta_schedule.cooperative_fetch")
l155, l156, l157, l158 = sch.get_loops(block=b53)
l159, l160, l161, l162 = sch.split(loop=l158, factors=[None, 4, 32, 8], preserve_unit_iters=True)
sch.vectorize(loop=l162)
sch.bind(loop=l161, thread_axis="threadIdx.x")
sch.bind(loop=l160, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b92, ann_key="meta_schedule.cooperative_fetch")
l163, l164, l165, l166, l167 = sch.get_loops(block=b92)
l168, l169, l170, l171 = sch.split(loop=l167, factors=[None, 4, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l171)
sch.bind(loop=l170, thread_axis="threadIdx.x")
sch.bind(loop=l169, thread_axis="threadIdx.y")
sch.unannotate(block_or_loop=b101, ann_key="meta_schedule.cooperative_fetch")
l172, l173, l174, l175, l176 = sch.get_loops(block=b101)
l177, l178, l179, l180 = sch.split(loop=l176, factors=[None, 4, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l180)
sch.bind(loop=l179, thread_axis="threadIdx.x")
sch.bind(loop=l178, thread_axis="threadIdx.y")
b181 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b181, ann_key="meta_schedule.unroll_explicit")
b182, b183, b184, b185, b186, b187, b188 = sch.get_child_blocks(b181)
l189, l190, l191, l192, l193, l194, l195, l196 = sch.get_loops(block=b182)
l197, l198, l199, l200, l201, l202, l203, l204 = sch.get_loops(block=b183)
l205, l206, l207, l208, l209, l210, l211 = sch.get_loops(block=b184)
l212, l213, l214, l215, l216, l217, l218 = sch.get_loops(block=b185)
l219, l220, l221, l222, l223, l224, l225, l226, l227, l228 = sch.get_loops(block=b186)
l229, l230, l231, l232, l233, l234 = sch.get_loops(block=b187)
l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b188)
b242 = sch.get_block(name="B_o", func_name="main")
l243, l244, l245, l246, l247, l248, l249, l250, l251, l252 = sch.get_loops(block=b242)
b253 = sch.decompose_reduction(block=b242, loop=l246)
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize")
sch.annotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize", ann_val="wmma_fill_16x16x16_f16")
sch.unannotate(block_or_loop=b242, ann_key="meta_schedule.auto_tensorize_init")
sch.unannotate(block_or_loop=b253, ann_key="meta_schedule.auto_tensorize_init")
b254 = sch.get_block(name="B_o_init", func_name="main")
sch.unannotate(block_or_loop=b254, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b254, tensor_intrin="wmma_fill_16x16x16_f16", preserve_unit_iters=True)
b255 = sch.get_block(name="A_reindex_shared.dyn_wmma.matrix_a_o", func_name="main")
sch.unannotate(block_or_loop=b255, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b255, tensor_intrin="wmma_load_16x16x16_f16_a_shared_dyn", preserve_unit_iters=True)
b256 = sch.get_block(name="B_reindex_shared.dyn_wmma.matrix_b_o", func_name="main")
sch.unannotate(block_or_loop=b256, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b256, tensor_intrin="wmma_load_16x16x16_f16_b_trans_shared_dyn", preserve_unit_iters=True)
b257 = sch.get_block(name="B_o_update", func_name="main")
sch.unannotate(block_or_loop=b257, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b257, tensor_intrin="wmma_sync_16x16x16_f16f16f16_trans", preserve_unit_iters=True)
b258 = sch.get_block(name="C_reindex_shared.dyn_wmma.accumulator_o", func_name="main")
sch.unannotate(block_or_loop=b258, ann_key="meta_schedule.auto_tensorize")
sch.tensorize(block_or_loop=b258, tensor_intrin="wmma_store_16x16x16_f16_shared_dyn", preserve_unit_iters=True)
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #100: GFLOPs: 54412.1337. Time: 161656.8297 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #101: GFLOPs: 132623.4852. Time: 66323.7963 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #102: GFLOPs: 31550.2911. Time: 278795.9390 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #103: GFLOPs: 56702.4817. Time: 155127.1260 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #104: GFLOPs: 62982.8333. Time: 139658.5793 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #105: GFLOPs: 70077.4848. Time: 125519.5310 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #106: GFLOPs: 36458.1218. Time: 241265.6657 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #107: GFLOPs: 38483.3004. Time: 228569.0917 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #108: GFLOPs: 107939.9708. Time: 81490.6003 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #109: GFLOPs: 45754.9059. Time: 192243.7133 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #110: GFLOPs: 70480.1658. Time: 124802.3883 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #111: GFLOPs: 24545.8957. Time: 358352.9050 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #112: GFLOPs: 49059.7380. Time: 179293.5180 us. Best GFLOPs: 162780.6482
2023-10-25 07:29:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 07:29:49 [INFO] [evolutionary_search.cc:715] Picked top 95 candidate(s) from database
2023-10-25 07:29:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:29:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 813 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:30:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1220 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:30:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1630 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:30:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2037 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:30:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2438 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:30:11 [INFO] [evolutionary_search.cc:723] Sampled 64 candidate(s)
2023-10-25 07:30:17 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 69 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:30:24 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 61 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:30:31 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 57 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:30:38 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:30:39 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9925  0.9895  0.9895  0.9895  0.9845  0.9815  0.9775  0.9775  0.9745  0.9698  0.9698  0.9694  0.9668  0.9668  0.9668  0.9548
2023-10-25 07:30:40 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 07:30:40 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #113: GFLOPs: 161733.4764. Time: 54386.3473 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #114: GFLOPs: 149746.9595. Time: 58739.7103 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #115: GFLOPs: 160743.7997. Time: 54721.1963 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #116: GFLOPs: 160258.9839. Time: 54886.7390 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #117: GFLOPs: 162323.3356. Time: 54188.7153 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #118: GFLOPs: 160379.6649. Time: 54845.4383 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #119: GFLOPs: 134413.0422. Time: 65440.7703 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #120: GFLOPs: 141408.9630. Time: 62203.2213 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #121: GFLOPs: 123671.5140. Time: 71124.6490 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #122: GFLOPs: 161040.1302. Time: 54620.5037 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #123: GFLOPs: 160924.4888. Time: 54659.7543 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #124: GFLOPs: 133755.8530. Time: 65762.3037 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #125: GFLOPs: 162030.4190. Time: 54286.6770 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #126: GFLOPs: 149827.0581. Time: 58708.3077 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #127: GFLOPs: 155853.8119. Time: 56438.1000 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #128: GFLOPs: 128866.4146. Time: 68257.4513 us. Best GFLOPs: 162780.6482
2023-10-25 07:38:34 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 07:38:35 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 07:38:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:38:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:38:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1198 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:38:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1599 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:38:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2002 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:38:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2396 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:38:56 [INFO] [evolutionary_search.cc:723] Sampled 64 candidate(s)
2023-10-25 07:39:02 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 78 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:39:10 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 61 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:39:17 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 69 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:39:24 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 72 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:39:25 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	1.0775  1.0531  1.0494  1.0458  1.0287  1.0250  1.0139  1.0134  1.0134  1.0134  1.0075  1.0063  1.0057  1.0057  1.0046  1.0032
2023-10-25 07:39:26 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 07:39:26 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #129: GFLOPs: 166024.3582. Time: 52980.7380 us. Best GFLOPs: 166024.3582
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #130: GFLOPs: 162312.0922. Time: 54192.4690 us. Best GFLOPs: 166024.3582
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #131: GFLOPs: 167000.2168. Time: 52671.1473 us. Best GFLOPs: 167000.2168
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #132: GFLOPs: 60769.6686. Time: 144744.7917 us. Best GFLOPs: 167000.2168
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #133: GFLOPs: 163613.6394. Time: 53761.3677 us. Best GFLOPs: 167000.2168
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #134: GFLOPs: 158697.6654. Time: 55426.7323 us. Best GFLOPs: 167000.2168
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #135: GFLOPs: 160081.7713. Time: 54947.4993 us. Best GFLOPs: 167000.2168
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #136: GFLOPs: 161687.8109. Time: 54401.7077 us. Best GFLOPs: 167000.2168
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #137: GFLOPs: 161393.1452. Time: 54501.0323 us. Best GFLOPs: 167000.2168
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #138: GFLOPs: 162431.7968. Time: 54152.5317 us. Best GFLOPs: 167000.2168
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #139: GFLOPs: 155209.8609. Time: 56672.2563 us. Best GFLOPs: 167000.2168
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #140: GFLOPs: 163366.7945. Time: 53842.6003 us. Best GFLOPs: 167000.2168
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #141: GFLOPs: 155132.3106. Time: 56700.5867 us. Best GFLOPs: 167000.2168
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #142: GFLOPs: 154857.3038. Time: 56801.2797 us. Best GFLOPs: 167000.2168
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #143: GFLOPs: 159182.9123. Time: 55257.7717 us. Best GFLOPs: 167000.2168
2023-10-25 07:47:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #144: GFLOPs: 161312.3188. Time: 54528.3403 us. Best GFLOPs: 167000.2168
2023-10-25 07:47:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 07:47:09 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 07:47:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:47:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 798 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:47:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1195 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:47:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1600 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:47:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1990 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:47:27 [INFO] [evolutionary_search.cc:723] Sampled 60 candidate(s)
2023-10-25 07:47:33 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:47:40 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 65 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:47:48 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:47:55 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 81 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:47:56 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	1.0775  1.0531  1.0531  1.0494  1.0494  1.0494  1.0494  1.0376  1.0311  1.0311  1.0250  1.0250  1.0250  1.0246  1.0246  1.0246
2023-10-25 07:47:56 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 07:47:56 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #145: GFLOPs: 167224.5485. Time: 52600.4890 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #146: GFLOPs: 161530.7173. Time: 54454.6150 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #147: GFLOPs: 163147.5155. Time: 53914.9677 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #148: GFLOPs: 166410.3318. Time: 52857.8540 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #149: GFLOPs: 157957.4039. Time: 55686.4877 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #150: GFLOPs: 158529.7573. Time: 55485.4380 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #151: GFLOPs: 151528.2533. Time: 58049.1943 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #152: GFLOPs: 163968.6487. Time: 53644.9687 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #153: GFLOPs: 159806.7903. Time: 55042.0480 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #154: GFLOPs: 159819.6687. Time: 55037.6127 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #155: GFLOPs: 162096.6661. Time: 54264.4907 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #156: GFLOPs: 157599.9811. Time: 55812.7797 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #157: GFLOPs: 162746.7173. Time: 54047.7447 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #158: GFLOPs: 161981.5361. Time: 54303.0597 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #159: GFLOPs: 155620.3992. Time: 56522.7507 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #160: GFLOPs: 162162.9673. Time: 54242.3043 us. Best GFLOPs: 167224.5485
2023-10-25 07:55:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 07:55:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 07:55:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:55:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 796 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:55:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1192 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:55:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1594 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:55:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1995 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:55:49 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2023-10-25 07:55:56 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 96 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:56:03 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:56:10 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:56:18 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 07:56:19 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9774  0.9774  0.9774  0.9774  0.9752  0.9752  0.9752  0.9752  0.9731  0.9731  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729
2023-10-25 07:56:19 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 07:56:19 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #161: GFLOPs: 166265.3810. Time: 52903.9357 us. Best GFLOPs: 167224.5485
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #162: GFLOPs: 166106.7698. Time: 52954.4523 us. Best GFLOPs: 167224.5485
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #163: GFLOPs: 168368.4704. Time: 52243.1130 us. Best GFLOPs: 168368.4704
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #164: GFLOPs: 167305.9710. Time: 52574.8900 us. Best GFLOPs: 168368.4704
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #165: GFLOPs: 168520.4135. Time: 52196.0090 us. Best GFLOPs: 168520.4135
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #166: GFLOPs: 165202.6925. Time: 53244.2473 us. Best GFLOPs: 168520.4135
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #167: GFLOPs: 174253.3337. Time: 50478.7647 us. Best GFLOPs: 174253.3337
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #168: GFLOPs: 170266.2886. Time: 51660.8020 us. Best GFLOPs: 174253.3337
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #169: GFLOPs: 169136.4782. Time: 52005.8897 us. Best GFLOPs: 174253.3337
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #170: GFLOPs: 168922.4993. Time: 52071.7670 us. Best GFLOPs: 174253.3337
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #171: GFLOPs: 160965.6943. Time: 54645.7620 us. Best GFLOPs: 174253.3337
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #172: GFLOPs: 163264.3256. Time: 53876.3933 us. Best GFLOPs: 174253.3337
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #173: GFLOPs: 163201.2480. Time: 53897.2167 us. Best GFLOPs: 174253.3337
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #174: GFLOPs: 157921.5883. Time: 55699.1170 us. Best GFLOPs: 174253.3337
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #175: GFLOPs: 161242.6667. Time: 54551.8950 us. Best GFLOPs: 174253.3337
2023-10-25 08:04:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #176: GFLOPs: 163527.4662. Time: 53789.6980 us. Best GFLOPs: 174253.3337
2023-10-25 08:04:06 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 08:04:07 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 08:04:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:04:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 797 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:04:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1199 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:04:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1595 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:04:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1994 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:04:25 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2023-10-25 08:04:31 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 64 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:04:38 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:04:45 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:04:53 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 71 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:04:54 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9774  0.9773  0.9773  0.9773  0.9773  0.9752  0.9752  0.9731  0.9731  0.9729  0.9729  0.9729  0.9716  0.9716  0.9705  0.9705
2023-10-25 08:04:54 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 08:04:54 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #177: GFLOPs: 168327.7785. Time: 52255.7423 us. Best GFLOPs: 174253.3337
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #178: GFLOPs: 171561.9397. Time: 51270.6550 us. Best GFLOPs: 174253.3337
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #179: GFLOPs: 173619.3873. Time: 50663.0807 us. Best GFLOPs: 174253.3337
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #180: GFLOPs: 173905.2608. Time: 50579.7983 us. Best GFLOPs: 174253.3337
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #181: GFLOPs: 172220.0513. Time: 51074.7323 us. Best GFLOPs: 174253.3337
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #182: GFLOPs: 174268.6631. Time: 50474.3243 us. Best GFLOPs: 174268.6631
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #183: GFLOPs: 171175.6137. Time: 51386.3677 us. Best GFLOPs: 174268.6631
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #184: GFLOPs: 169310.9420. Time: 51952.3010 us. Best GFLOPs: 174268.6631
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #185: GFLOPs: 169786.1632. Time: 51806.8897 us. Best GFLOPs: 174268.6631
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #186: GFLOPs: 163191.9465. Time: 53900.2887 us. Best GFLOPs: 174268.6631
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #187: GFLOPs: 160747.8193. Time: 54719.8280 us. Best GFLOPs: 174268.6631
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #188: GFLOPs: 163006.1477. Time: 53961.7257 us. Best GFLOPs: 174268.6631
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #189: GFLOPs: 161471.0073. Time: 54474.7517 us. Best GFLOPs: 174268.6631
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #190: GFLOPs: 162336.6377. Time: 54184.2750 us. Best GFLOPs: 174268.6631
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #191: GFLOPs: 167703.3818. Time: 52450.3020 us. Best GFLOPs: 174268.6631
2023-10-25 08:12:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #192: GFLOPs: 170683.5648. Time: 51534.5050 us. Best GFLOPs: 174268.6631
2023-10-25 08:12:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 08:12:28 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 08:12:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 396 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:12:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 792 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:12:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1191 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:12:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1594 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:12:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1995 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:12:45 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2023-10-25 08:12:52 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:12:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 96 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:13:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:13:14 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 73 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:13:15 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9938  0.9938  0.9938  0.9887  0.9887  0.9887  0.9812  0.9812  0.9812  0.9812  0.9801  0.9801  0.9801  0.9752  0.9752  0.9750
2023-10-25 08:13:15 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 08:13:15 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #193: GFLOPs: 175289.2940. Time: 50180.4350 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #194: GFLOPs: 173586.6422. Time: 50672.6377 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #195: GFLOPs: 170882.7625. Time: 51474.4313 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #196: GFLOPs: 173367.0849. Time: 50736.8110 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #197: GFLOPs: 173520.0046. Time: 50692.0977 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #198: GFLOPs: 173528.1872. Time: 50689.7073 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #199: GFLOPs: 167013.2152. Time: 52667.0480 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #200: GFLOPs: 168928.0435. Time: 52070.0580 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #201: GFLOPs: 170094.3509. Time: 51713.0227 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #202: GFLOPs: 173936.9545. Time: 50570.5820 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #203: GFLOPs: 174273.3691. Time: 50472.9613 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #204: GFLOPs: 172657.3813. Time: 50945.3633 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #205: GFLOPs: 172435.5595. Time: 51010.8997 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #206: GFLOPs: 157642.4040. Time: 55797.7600 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #207: GFLOPs: 171920.1832. Time: 51163.8183 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #208: GFLOPs: 170336.0706. Time: 51639.6380 us. Best GFLOPs: 175289.2940
2023-10-25 08:20:53 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 08:20:54 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 08:20:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:21:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 793 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:21:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1191 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:21:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1594 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:21:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1988 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:21:12 [INFO] [evolutionary_search.cc:723] Sampled 62 candidate(s)
2023-10-25 08:21:18 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:21:26 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:21:33 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 66 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:21:40 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 99 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:21:42 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9938  0.9938  0.9938  0.9887  0.9887  0.9887  0.9855  0.9812  0.9812  0.9812  0.9812  0.9812  0.9801  0.9801  0.9801  0.9801
2023-10-25 08:21:42 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 08:21:42 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #209: GFLOPs: 171123.3262. Time: 51402.0690 us. Best GFLOPs: 175289.2940
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #210: GFLOPs: 174172.0790. Time: 50502.3140 us. Best GFLOPs: 175289.2940
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #211: GFLOPs: 174708.1594. Time: 50347.3510 us. Best GFLOPs: 175289.2940
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #212: GFLOPs: 172756.9180. Time: 50916.0103 us. Best GFLOPs: 175289.2940
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #213: GFLOPs: 173780.9601. Time: 50615.9767 us. Best GFLOPs: 175289.2940
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #214: GFLOPs: 172775.4547. Time: 50910.5477 us. Best GFLOPs: 175289.2940
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #215: GFLOPs: 168318.9807. Time: 52258.4737 us. Best GFLOPs: 175289.2940
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #216: GFLOPs: 169096.5228. Time: 52018.1780 us. Best GFLOPs: 175289.2940
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #217: GFLOPs: 168642.8257. Time: 52158.1217 us. Best GFLOPs: 175289.2940
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #218: GFLOPs: 173634.5882. Time: 50658.6453 us. Best GFLOPs: 175289.2940
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #219: GFLOPs: 168701.3429. Time: 52140.0297 us. Best GFLOPs: 175289.2940
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #220: GFLOPs: 173283.1463. Time: 50761.3880 us. Best GFLOPs: 175289.2940
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #221: GFLOPs: 175642.9348. Time: 50079.4013 us. Best GFLOPs: 175642.9348
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #222: GFLOPs: 169305.3900. Time: 51954.0047 us. Best GFLOPs: 175642.9348
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #223: GFLOPs: 175209.4309. Time: 50203.3080 us. Best GFLOPs: 175642.9348
2023-10-25 08:29:18 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #224: GFLOPs: 172732.6051. Time: 50923.1770 us. Best GFLOPs: 175642.9348
2023-10-25 08:29:18 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 08:29:19 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 08:29:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:29:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 793 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:29:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1191 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:29:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1592 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:29:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1993 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:29:37 [INFO] [evolutionary_search.cc:723] Sampled 57 candidate(s)
2023-10-25 08:29:43 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:29:51 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 92 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:29:58 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:30:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:30:07 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9938  0.9938  0.9938  0.9938  0.9938  0.9887  0.9887  0.9887  0.9887  0.9887  0.9887  0.9812  0.9812  0.9812  0.9812  0.9812
2023-10-25 08:30:07 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 08:30:07 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #225: GFLOPs: 175130.8469. Time: 50225.8350 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #226: GFLOPs: 174653.6918. Time: 50363.0523 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #227: GFLOPs: 168523.7143. Time: 52194.9867 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #228: GFLOPs: 170233.6725. Time: 51670.7000 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #229: GFLOPs: 174306.3739. Time: 50463.4043 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #230: GFLOPs: 172969.1185. Time: 50853.5460 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #231: GFLOPs: 171139.2276. Time: 51397.2930 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #232: GFLOPs: 173308.7948. Time: 50753.8757 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #233: GFLOPs: 171764.3367. Time: 51210.2407 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #234: GFLOPs: 173426.5951. Time: 50719.4010 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #235: GFLOPs: 172884.4070. Time: 50878.4637 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #236: GFLOPs: 169093.1995. Time: 52019.2003 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #237: GFLOPs: 174821.9507. Time: 50314.5800 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #238: GFLOPs: 168797.4728. Time: 52110.3360 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #239: GFLOPs: 168765.4169. Time: 52120.2340 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #240: GFLOPs: 168201.4219. Time: 52294.9980 us. Best GFLOPs: 175642.9348
2023-10-25 08:37:47 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 08:37:48 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 08:37:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 400 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:37:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 800 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:37:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1196 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:38:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1598 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:38:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1992 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:38:06 [INFO] [evolutionary_search.cc:723] Sampled 58 candidate(s)
2023-10-25 08:38:12 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 96 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:38:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:38:27 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:38:34 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:38:36 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	1.0418  1.0418  1.0248  1.0159  1.0109  0.9874  0.9874  0.9874  0.9850  0.9843  0.9843  0.9843  0.9843  0.9843  0.9831  0.9801
2023-10-25 08:38:36 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 08:38:36 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #241: GFLOPs: 168079.6484. Time: 52332.8857 us. Best GFLOPs: 175642.9348
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #242: GFLOPs: 169385.5172. Time: 51929.4280 us. Best GFLOPs: 175642.9348
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #243: GFLOPs: 163275.7013. Time: 53872.6397 us. Best GFLOPs: 175642.9348
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #244: GFLOPs: 154004.0448. Time: 57115.9870 us. Best GFLOPs: 175642.9348
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #245: GFLOPs: 168356.3739. Time: 52246.8667 us. Best GFLOPs: 175642.9348
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #246: GFLOPs: 171659.0747. Time: 51241.6430 us. Best GFLOPs: 175642.9348
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #247: GFLOPs: 175838.2915. Time: 50023.7630 us. Best GFLOPs: 175838.2915
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #248: GFLOPs: 172855.4112. Time: 50886.9983 us. Best GFLOPs: 175838.2915
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #249: GFLOPs: 153711.0081. Time: 57224.8737 us. Best GFLOPs: 175838.2915
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #250: GFLOPs: 172095.8519. Time: 51111.5923 us. Best GFLOPs: 175838.2915
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #251: GFLOPs: 170305.6754. Time: 51648.8543 us. Best GFLOPs: 175838.2915
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #252: GFLOPs: 172138.3850. Time: 51098.9633 us. Best GFLOPs: 175838.2915
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #253: GFLOPs: 171999.3510. Time: 51140.2687 us. Best GFLOPs: 175838.2915
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #254: GFLOPs: 172171.7351. Time: 51089.0653 us. Best GFLOPs: 175838.2915
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #255: GFLOPs: 175678.8509. Time: 50069.1630 us. Best GFLOPs: 175838.2915
2023-10-25 08:46:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #256: GFLOPs: 173036.4761. Time: 50833.7503 us. Best GFLOPs: 175838.2915
2023-10-25 08:46:14 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 08:46:15 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 08:46:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:46:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 791 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:46:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1194 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:46:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1592 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:46:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1987 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:46:33 [INFO] [evolutionary_search.cc:723] Sampled 63 candidate(s)
2023-10-25 08:46:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 111 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:46:47 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 78 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:46:54 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:47:02 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:47:03 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	1.0492  1.0418  1.0322  1.0248  1.0248  1.0233  1.0233  1.0078  0.9939  0.9939  0.9939  0.9939  0.9874  0.9874  0.9874  0.9843
2023-10-25 08:47:04 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 08:47:04 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #257: GFLOPs: 169624.1107. Time: 51856.3840 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #258: GFLOPs: 168523.7143. Time: 52194.9867 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #259: GFLOPs: 162357.0901. Time: 54177.4493 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #260: GFLOPs: 164103.3454. Time: 53600.9367 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #261: GFLOPs: 163975.9409. Time: 53642.5830 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #262: GFLOPs: 157272.0004. Time: 55929.1737 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #263: GFLOPs: 154536.9136. Time: 56919.0417 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #264: GFLOPs: 165827.7798. Time: 53043.5433 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #265: GFLOPs: 164861.3241. Time: 53354.4970 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #266: GFLOPs: 161867.5844. Time: 54341.2880 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #267: GFLOPs: 163855.0054. Time: 53682.1747 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #268: GFLOPs: 164105.4324. Time: 53600.2550 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #269: GFLOPs: 170979.1308. Time: 51445.4190 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #270: GFLOPs: 171943.1229. Time: 51156.9923 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #271: GFLOPs: 170038.2239. Time: 51730.0923 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #272: GFLOPs: 170183.0816. Time: 51686.0603 us. Best GFLOPs: 175838.2915
2023-10-25 08:54:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 08:54:39 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 08:54:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 399 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:54:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 796 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:54:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1195 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:54:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1594 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:54:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1991 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:54:57 [INFO] [evolutionary_search.cc:723] Sampled 59 candidate(s)
2023-10-25 08:55:03 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:55:11 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:55:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:55:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 71 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 08:55:27 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	1.0492  1.0492  1.0492  1.0492  1.0418  1.0418  1.0418  1.0418  1.0418  1.0418  1.0322  1.0322  1.0322  1.0322  1.0248  1.0248
2023-10-25 08:55:27 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 08:55:27 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #273: GFLOPs: 170857.8270. Time: 51481.9437 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #274: GFLOPs: 168701.3429. Time: 52140.0297 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #275: GFLOPs: 166357.6822. Time: 52874.5827 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #276: GFLOPs: 169415.5848. Time: 51920.2117 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #277: GFLOPs: 169510.3038. Time: 51891.1997 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #278: GFLOPs: 166329.7617. Time: 52883.4583 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #279: GFLOPs: 164888.7528. Time: 53345.6217 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #280: GFLOPs: 166606.1266. Time: 52795.7357 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #281: GFLOPs: 166971.0004. Time: 52680.3637 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #282: GFLOPs: 168509.3950. Time: 52199.4220 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #283: GFLOPs: 164311.5576. Time: 53533.0147 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #284: GFLOPs: 165623.1647. Time: 53109.0747 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #285: GFLOPs: 163847.7097. Time: 53684.5650 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #286: GFLOPs: 165129.6576. Time: 53267.7967 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #287: GFLOPs: 153856.9214. Time: 57170.6033 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #288: GFLOPs: 163132.0338. Time: 53920.0843 us. Best GFLOPs: 175838.2915
2023-10-25 09:02:58 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 09:02:59 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 09:03:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 396 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:03:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 794 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:03:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1195 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:03:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1589 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:03:13 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2023-10-25 09:03:20 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:03:27 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:03:35 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:03:42 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 70 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:03:44 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9838  0.9838  0.9826  0.9826  0.9826  0.9801  0.9801  0.9801  0.9801  0.9801  0.9790  0.9790  0.9790  0.9790  0.9790  0.9790
2023-10-25 09:03:44 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 09:03:44 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #289: GFLOPs: 172377.8770. Time: 51027.9693 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #290: GFLOPs: 172007.3908. Time: 51137.8783 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #291: GFLOPs: 174327.5997. Time: 50457.2600 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #292: GFLOPs: 175016.6719. Time: 50258.6007 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #293: GFLOPs: 174286.3308. Time: 50469.2077 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #294: GFLOPs: 175195.1428. Time: 50207.4023 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #295: GFLOPs: 175136.8062. Time: 50224.1260 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #296: GFLOPs: 171553.9404. Time: 51273.0457 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #297: GFLOPs: 173845.4389. Time: 50597.2033 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #298: GFLOPs: 173491.9781. Time: 50700.2867 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #299: GFLOPs: 173256.3599. Time: 50769.2360 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #300: GFLOPs: 172951.6987. Time: 50858.6680 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #301: GFLOPs: 169611.8332. Time: 51860.1377 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #302: GFLOPs: 171766.6231. Time: 51209.5590 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #303: GFLOPs: 169426.7221. Time: 51916.7987 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #304: GFLOPs: 174072.0800. Time: 50531.3260 us. Best GFLOPs: 175838.2915
2023-10-25 09:11:29 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 09:11:30 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 09:11:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:11:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 800 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:11:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1199 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:11:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1600 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:11:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1991 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:11:48 [INFO] [evolutionary_search.cc:723] Sampled 59 candidate(s)
2023-10-25 09:11:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 74 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:12:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 96 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:12:10 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:12:17 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 63 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:12:19 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9881  0.9838  0.9838  0.9838  0.9838  0.9826  0.9826  0.9826  0.9826  0.9801  0.9801  0.9801  0.9801  0.9790  0.9790  0.9790
2023-10-25 09:12:19 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 09:12:19 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #305: GFLOPs: 174345.2978. Time: 50452.1380 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #306: GFLOPs: 167562.7141. Time: 52494.3337 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #307: GFLOPs: 172016.5784. Time: 51135.1470 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #308: GFLOPs: 175438.4527. Time: 50137.7713 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #309: GFLOPs: 173448.7723. Time: 50712.9160 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #310: GFLOPs: 174486.9553. Time: 50411.1783 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #311: GFLOPs: 169142.0365. Time: 52004.1807 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #312: GFLOPs: 174473.9638. Time: 50414.9320 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #313: GFLOPs: 175077.3027. Time: 50241.1957 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #314: GFLOPs: 170898.6191. Time: 51469.6553 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #315: GFLOPs: 170423.9442. Time: 51613.0117 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #316: GFLOPs: 171002.9514. Time: 51438.2527 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #317: GFLOPs: 167996.3771. Time: 52358.8257 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #318: GFLOPs: 169198.6646. Time: 51986.7757 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #319: GFLOPs: 171561.9397. Time: 51270.6550 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #320: GFLOPs: 167915.3733. Time: 52384.0840 us. Best GFLOPs: 175838.2915
2023-10-25 09:19:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 09:19:58 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 09:20:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 396 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:20:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 790 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:20:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1192 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:20:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1593 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:20:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1986 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:20:16 [INFO] [evolutionary_search.cc:723] Sampled 64 candidate(s)
2023-10-25 09:20:22 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:20:30 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:20:37 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:20:45 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 61 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:20:46 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9892  0.9881  0.9838  0.9838  0.9826  0.9826  0.9826  0.9801  0.9801  0.9801  0.9793  0.9790  0.9790  0.9790  0.9790  0.9724
2023-10-25 09:20:46 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 09:20:46 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #321: GFLOPs: 173481.4666. Time: 50703.3587 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #322: GFLOPs: 173385.7517. Time: 50731.3487 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #323: GFLOPs: 167818.0477. Time: 52414.4640 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #324: GFLOPs: 172745.3385. Time: 50919.4233 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #325: GFLOPs: 174654.8744. Time: 50362.7113 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #326: GFLOPs: 168784.2102. Time: 52114.4307 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #327: GFLOPs: 174667.9102. Time: 50358.9527 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #328: GFLOPs: 170742.3602. Time: 51516.7590 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #329: GFLOPs: 170877.0892. Time: 51476.1403 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #330: GFLOPs: 170734.4537. Time: 51519.1447 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #331: GFLOPs: 160948.6164. Time: 54651.5603 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #332: GFLOPs: 173959.2625. Time: 50564.0970 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #333: GFLOPs: 171911.0059. Time: 51166.5497 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #334: GFLOPs: 173772.7526. Time: 50618.3673 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #335: GFLOPs: 169966.4480. Time: 51751.9377 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #336: GFLOPs: 170007.9350. Time: 51739.3087 us. Best GFLOPs: 175838.2915
2023-10-25 09:28:21 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 09:28:23 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 09:28:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 400 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:28:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 791 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:28:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1189 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:28:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1590 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:28:37 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2023-10-25 09:28:43 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:28:51 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:28:58 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 102 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:29:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:29:07 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9892  0.9892  0.9892  0.9892  0.9892  0.9892  0.9881  0.9881  0.9881  0.9855  0.9838  0.9838  0.9826  0.9801  0.9801  0.9801
2023-10-25 09:29:07 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 09:29:07 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #337: GFLOPs: 173759.8672. Time: 50622.1210 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #338: GFLOPs: 173716.5280. Time: 50634.7503 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #339: GFLOPs: 173510.6728. Time: 50694.8240 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #340: GFLOPs: 173458.1146. Time: 50710.1847 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #341: GFLOPs: 174714.0899. Time: 50345.6420 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #342: GFLOPs: 174005.0682. Time: 50550.7863 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #343: GFLOPs: 173769.2430. Time: 50619.3897 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #344: GFLOPs: 173645.1183. Time: 50655.5733 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #345: GFLOPs: 173583.1218. Time: 50673.6653 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #346: GFLOPs: 170423.9442. Time: 51613.0117 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #347: GFLOPs: 174990.5154. Time: 50266.1130 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #348: GFLOPs: 174715.2733. Time: 50345.3010 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #349: GFLOPs: 174620.5555. Time: 50372.6093 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #350: GFLOPs: 171556.2212. Time: 51272.3640 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #351: GFLOPs: 174256.8801. Time: 50477.7373 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #352: GFLOPs: 170640.6186. Time: 51547.4750 us. Best GFLOPs: 175838.2915
2023-10-25 09:36:43 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 09:36:44 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 09:36:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 395 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:36:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 795 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:36:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1194 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:36:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1592 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:37:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1989 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:37:02 [INFO] [evolutionary_search.cc:723] Sampled 61 candidate(s)
2023-10-25 09:37:08 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:37:16 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 81 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:37:24 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:37:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 82 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:37:33 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9847  0.9847  0.9847  0.9839  0.9826  0.9806  0.9805  0.9786  0.9786  0.9785  0.9785  0.9785  0.9729  0.9717  0.9717  0.9717
2023-10-25 09:37:33 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 09:37:33 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #353: GFLOPs: 172807.8944. Time: 50900.9907 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #354: GFLOPs: 173600.6690. Time: 50668.5433 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #355: GFLOPs: 170982.5286. Time: 51444.3967 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #356: GFLOPs: 174844.4862. Time: 50308.0950 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #357: GFLOPs: 172208.5437. Time: 51078.1453 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #358: GFLOPs: 167785.2725. Time: 52424.7027 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #359: GFLOPs: 168863.8459. Time: 52089.8537 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #360: GFLOPs: 173479.1343. Time: 50704.0403 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #361: GFLOPs: 173418.4222. Time: 50721.7913 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #362: GFLOPs: 172486.3464. Time: 50995.8800 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #363: GFLOPs: 170666.6023. Time: 51539.6270 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #364: GFLOPs: 170882.7625. Time: 51474.4313 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #365: GFLOPs: 166123.9068. Time: 52948.9897 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #366: GFLOPs: 172769.6551. Time: 50912.2567 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #367: GFLOPs: 173151.5840. Time: 50799.9570 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #368: GFLOPs: 166050.0384. Time: 52972.5443 us. Best GFLOPs: 175838.2915
2023-10-25 09:45:13 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 09:45:14 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 09:45:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 400 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:45:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 799 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:45:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1191 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:45:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1596 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:45:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1994 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:45:32 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2023-10-25 09:45:38 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:45:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 71 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:45:53 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 92 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:46:00 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:46:01 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9885  0.9859  0.9859  0.9859  0.9847  0.9839  0.9839  0.9826  0.9786  0.9786  0.9786  0.9785  0.9785  0.9785  0.9785  0.9785
2023-10-25 09:46:02 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 09:46:02 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #369: GFLOPs: 160024.1202. Time: 54967.2950 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #370: GFLOPs: 172962.1472. Time: 50855.5957 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #371: GFLOPs: 172294.8944. Time: 51052.5460 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #372: GFLOPs: 172774.2975. Time: 50910.8887 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #373: GFLOPs: 169253.1292. Time: 51970.0467 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #374: GFLOPs: 174195.6225. Time: 50495.4883 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #375: GFLOPs: 174436.1621. Time: 50425.8573 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #376: GFLOPs: 172178.6259. Time: 51087.0207 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #377: GFLOPs: 173400.9117. Time: 50726.9133 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #378: GFLOPs: 173509.4886. Time: 50695.1700 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #379: GFLOPs: 172320.2512. Time: 51045.0337 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #380: GFLOPs: 174647.7839. Time: 50364.7560 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #381: GFLOPs: 173800.8871. Time: 50610.1733 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #382: GFLOPs: 171796.3990. Time: 51200.6833 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #383: GFLOPs: 173811.4202. Time: 50607.1063 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #384: GFLOPs: 170550.2672. Time: 51574.7830 us. Best GFLOPs: 175838.2915
2023-10-25 09:53:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 09:53:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 09:53:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:53:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 805 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:53:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1205 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:53:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1605 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:53:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2004 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:53:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:53:53 [INFO] [evolutionary_search.cc:723] Sampled 57 candidate(s)
2023-10-25 09:53:59 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 96 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:54:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:54:14 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 92 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:54:21 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 09:54:22 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9885  0.9885  0.9885  0.9885  0.9873  0.9859  0.9859  0.9859  0.9847  0.9847  0.9847  0.9847  0.9826  0.9805  0.9805  0.9786
2023-10-25 09:54:22 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 09:54:22 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #385: GFLOPs: 160511.5207. Time: 54800.3843 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #386: GFLOPs: 160861.2015. Time: 54681.2590 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #387: GFLOPs: 160097.6876. Time: 54942.0367 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #388: GFLOPs: 160000.2689. Time: 54975.4890 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #389: GFLOPs: 160861.2015. Time: 54681.2590 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #390: GFLOPs: 175272.5947. Time: 50185.2160 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #391: GFLOPs: 173261.0114. Time: 50767.8730 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #392: GFLOPs: 173601.8362. Time: 50668.2027 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #393: GFLOPs: 175192.7642. Time: 50208.0840 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #394: GFLOPs: 172887.8810. Time: 50877.4413 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #395: GFLOPs: 173014.4041. Time: 50840.2353 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #396: GFLOPs: 173249.3643. Time: 50771.2860 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #397: GFLOPs: 172420.5508. Time: 51015.3400 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #398: GFLOPs: 169089.8764. Time: 52020.2227 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #399: GFLOPs: 168974.5561. Time: 52055.7250 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #400: GFLOPs: 167754.6898. Time: 52434.2600 us. Best GFLOPs: 175838.2915
2023-10-25 10:01:55 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 10:01:57 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 10:02:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:02:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 794 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:02:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1191 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:02:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1589 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:02:11 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2023-10-25 10:02:17 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 74 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:02:24 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:02:32 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:02:38 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 74 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:02:40 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9859  0.9859  0.9859  0.9859  0.9847  0.9847  0.9786  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729
2023-10-25 10:02:40 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 10:02:40 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #401: GFLOPs: 174701.0645. Time: 50349.3957 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #402: GFLOPs: 173648.6228. Time: 50654.5510 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #403: GFLOPs: 173053.9129. Time: 50828.6283 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #404: GFLOPs: 173316.9415. Time: 50751.4900 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #405: GFLOPs: 173861.8502. Time: 50592.4273 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #406: GFLOPs: 173312.2858. Time: 50752.8533 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #407: GFLOPs: 173522.3540. Time: 50691.4113 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #408: GFLOPs: 173364.7557. Time: 50737.4927 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #409: GFLOPs: 173121.3366. Time: 50808.8327 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #410: GFLOPs: 174037.9897. Time: 50541.2240 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #411: GFLOPs: 174029.7579. Time: 50543.6147 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #412: GFLOPs: 173439.4311. Time: 50715.6473 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #413: GFLOPs: 173500.1591. Time: 50697.8960 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #414: GFLOPs: 165632.7455. Time: 53106.0027 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #415: GFLOPs: 173859.5077. Time: 50593.1090 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #416: GFLOPs: 173438.2661. Time: 50715.9880 us. Best GFLOPs: 175838.2915
2023-10-25 10:10:12 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 10:10:13 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 10:10:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 400 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:10:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 798 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:10:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1197 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:10:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1597 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:10:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1996 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:10:31 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2023-10-25 10:10:37 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:10:44 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:10:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:10:58 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 74 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:11:00 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9885  0.9859  0.9847  0.9847  0.9847  0.9729  0.9729  0.9729  0.9729  0.9729  0.9717  0.9717  0.9717  0.9717  0.9717  0.9717
2023-10-25 10:11:00 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 10:11:00 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #417: GFLOPs: 160143.4534. Time: 54926.3353 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #418: GFLOPs: 173031.8366. Time: 50835.1133 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #419: GFLOPs: 170763.8562. Time: 51510.2740 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #420: GFLOPs: 170141.5080. Time: 51698.6897 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #421: GFLOPs: 174403.1082. Time: 50435.4143 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #422: GFLOPs: 173581.9549. Time: 50674.0060 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #423: GFLOPs: 165963.4149. Time: 53000.1930 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #424: GFLOPs: 173652.1447. Time: 50653.5237 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #425: GFLOPs: 173125.9991. Time: 50807.4643 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #426: GFLOPs: 173624.0583. Time: 50661.7177 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #427: GFLOPs: 172686.2938. Time: 50936.8337 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #428: GFLOPs: 173501.3250. Time: 50697.5553 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #429: GFLOPs: 173595.9810. Time: 50669.9117 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #430: GFLOPs: 173420.7517. Time: 50721.1100 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #431: GFLOPs: 173316.9415. Time: 50751.4900 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #432: GFLOPs: 165086.2774. Time: 53281.7940 us. Best GFLOPs: 175838.2915
2023-10-25 10:18:33 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 10:18:35 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 10:18:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 399 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:18:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 794 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:18:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1194 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:18:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1600 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:18:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1997 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:18:52 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2023-10-25 10:18:59 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 82 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:19:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 103 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:19:13 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:19:20 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:19:22 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9830  0.9825  0.9825  0.9788  0.9784  0.9774  0.9774  0.9774  0.9774  0.9774  0.9769  0.9769  0.9769  0.9769  0.9769  0.9769
2023-10-25 10:19:22 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 10:19:22 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #433: GFLOPs: 172915.7297. Time: 50869.2473 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #434: GFLOPs: 172701.3487. Time: 50932.3933 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #435: GFLOPs: 175613.0052. Time: 50087.9363 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #436: GFLOPs: 173125.9991. Time: 50807.4643 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #437: GFLOPs: 171029.0633. Time: 51430.3993 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #438: GFLOPs: 173227.2391. Time: 50777.7707 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #439: GFLOPs: 174128.5339. Time: 50514.9433 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #440: GFLOPs: 173102.7256. Time: 50814.2953 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #441: GFLOPs: 174248.6287. Time: 50480.1277 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #442: GFLOPs: 173649.7907. Time: 50654.2103 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #443: GFLOPs: 173494.3107. Time: 50699.6050 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #444: GFLOPs: 173308.7948. Time: 50753.8757 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #445: GFLOPs: 172847.2909. Time: 50889.3890 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #446: GFLOPs: 174353.5583. Time: 50449.7477 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #447: GFLOPs: 173313.4503. Time: 50752.5123 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #448: GFLOPs: 174286.3308. Time: 50469.2077 us. Best GFLOPs: 175838.2915
2023-10-25 10:26:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 10:26:58 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 10:27:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:27:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 797 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:27:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1198 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:27:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1601 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:27:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2001 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:27:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:27:19 [INFO] [evolutionary_search.cc:723] Sampled 62 candidate(s)
2023-10-25 10:27:26 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:27:32 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 70 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:27:40 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 70 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:27:47 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:27:48 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9830  0.9784  0.9784  0.9774  0.9774  0.9769  0.9769  0.9769  0.9769  0.9746  0.9746  0.9746  0.9746  0.9746  0.9746  0.9742
2023-10-25 10:27:48 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 10:27:48 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #449: GFLOPs: 173864.1916. Time: 50591.7460 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #450: GFLOPs: 170555.9012. Time: 51573.0793 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #451: GFLOPs: 173787.9804. Time: 50613.9320 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #452: GFLOPs: 174073.2536. Time: 50530.9853 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #453: GFLOPs: 173926.3891. Time: 50573.6540 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #454: GFLOPs: 174501.1281. Time: 50407.0840 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #455: GFLOPs: 173177.1765. Time: 50792.4497 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #456: GFLOPs: 165346.8544. Time: 53197.8250 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #457: GFLOPs: 173895.8704. Time: 50582.5297 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #458: GFLOPs: 174077.9491. Time: 50529.6223 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #459: GFLOPs: 172455.1791. Time: 51005.0963 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #460: GFLOPs: 174181.4993. Time: 50499.5827 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #461: GFLOPs: 171207.4554. Time: 51376.8107 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #462: GFLOPs: 171835.3523. Time: 51189.0767 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #463: GFLOPs: 171320.1420. Time: 51343.0173 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #464: GFLOPs: 173066.6938. Time: 50824.8747 us. Best GFLOPs: 175838.2915
2023-10-25 10:35:21 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 10:35:22 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 10:35:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 396 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:35:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 799 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:35:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1195 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:35:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1597 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:35:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1997 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:35:39 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2023-10-25 10:35:46 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 82 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:35:53 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:36:00 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:36:07 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 73 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:36:09 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9830  0.9830  0.9830  0.9830  0.9830  0.9830  0.9825  0.9788  0.9774  0.9769  0.9746  0.9746  0.9746  0.9746  0.9746  0.9746
2023-10-25 10:36:09 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 10:36:09 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #465: GFLOPs: 172991.1788. Time: 50847.0610 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #466: GFLOPs: 173490.8123. Time: 50700.6273 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #467: GFLOPs: 170709.5615. Time: 51526.6570 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #468: GFLOPs: 169441.1967. Time: 51912.3637 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #469: GFLOPs: 168807.4243. Time: 52107.2640 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #470: GFLOPs: 173786.8095. Time: 50614.2730 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #471: GFLOPs: 168956.8432. Time: 52061.1823 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #472: GFLOPs: 173145.7591. Time: 50801.6660 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #473: GFLOPs: 172935.4588. Time: 50863.4440 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #474: GFLOPs: 174083.8369. Time: 50527.9133 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #475: GFLOPs: 171464.9135. Time: 51299.6673 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #476: GFLOPs: 172875.1265. Time: 50881.1950 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #477: GFLOPs: 173812.6085. Time: 50606.7603 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #478: GFLOPs: 173852.4644. Time: 50595.1587 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #479: GFLOPs: 173273.8229. Time: 50764.1193 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #480: GFLOPs: 171402.1881. Time: 51318.4407 us. Best GFLOPs: 175838.2915
2023-10-25 10:43:45 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 10:43:46 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 10:43:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:43:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 807 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:43:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1204 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:44:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1601 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:44:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2004 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:44:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:44:07 [INFO] [evolutionary_search.cc:723] Sampled 59 candidate(s)
2023-10-25 10:44:13 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:44:21 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 106 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:44:28 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:44:35 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 78 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:44:36 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9830  0.9825  0.9788  0.9788  0.9788  0.9784  0.9769  0.9769  0.9746  0.9746  0.9746  0.9746  0.9742  0.9742  0.9742  0.9742
2023-10-25 10:44:36 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 10:44:36 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #481: GFLOPs: 169609.6038. Time: 51860.8193 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #482: GFLOPs: 173933.4383. Time: 50571.6043 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #483: GFLOPs: 173887.6703. Time: 50584.9150 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #484: GFLOPs: 173531.6870. Time: 50688.6850 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #485: GFLOPs: 174142.6496. Time: 50510.8487 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #486: GFLOPs: 173714.1722. Time: 50635.4370 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #487: GFLOPs: 173261.0114. Time: 50767.8730 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #488: GFLOPs: 173357.7525. Time: 50739.5423 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #489: GFLOPs: 174696.3180. Time: 50350.7637 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #490: GFLOPs: 172716.3893. Time: 50927.9580 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #491: GFLOPs: 174799.4209. Time: 50321.0650 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #492: GFLOPs: 173070.1751. Time: 50823.8523 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #493: GFLOPs: 174490.4940. Time: 50410.1560 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #494: GFLOPs: 174602.8199. Time: 50377.7260 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #495: GFLOPs: 174418.4640. Time: 50430.9740 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #496: GFLOPs: 172426.3270. Time: 51013.6310 us. Best GFLOPs: 175838.2915
2023-10-25 10:52:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 10:52:27 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 10:52:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 395 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:52:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 790 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:52:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1194 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:52:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1594 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:52:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1996 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:52:44 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2023-10-25 10:52:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:52:58 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 74 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:53:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 78 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:53:12 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 10:53:13 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9825  0.9825  0.9788  0.9784  0.9769  0.9769  0.9746  0.9746  0.9746  0.9746  0.9746  0.9742  0.9742  0.9742  0.9742  0.9742
2023-10-25 10:53:13 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 10:53:13 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #497: GFLOPs: 172708.2820. Time: 50930.3487 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #498: GFLOPs: 174286.3308. Time: 50469.2077 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #499: GFLOPs: 173441.7623. Time: 50714.9657 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #500: GFLOPs: 170834.0467. Time: 51489.1100 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #501: GFLOPs: 173213.2714. Time: 50781.8653 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #502: GFLOPs: 174069.7146. Time: 50532.0127 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #503: GFLOPs: 174320.5357. Time: 50459.3047 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #504: GFLOPs: 172807.8944. Time: 50900.9907 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #505: GFLOPs: 174029.7579. Time: 50543.6147 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #506: GFLOPs: 168309.0867. Time: 52261.5457 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #507: GFLOPs: 168271.7145. Time: 52273.1527 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #508: GFLOPs: 174279.2702. Time: 50471.2523 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #509: GFLOPs: 174148.5407. Time: 50509.1400 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #510: GFLOPs: 174878.8921. Time: 50298.1973 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #511: GFLOPs: 174823.1343. Time: 50314.2393 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #512: GFLOPs: 174682.1124. Time: 50354.8583 us. Best GFLOPs: 175838.2915
2023-10-25 11:00:46 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 11:00:47 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 11:00:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:00:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 799 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:00:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1200 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:01:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1602 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:01:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2001 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:01:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2395 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:01:08 [INFO] [evolutionary_search.cc:723] Sampled 65 candidate(s)
2023-10-25 11:01:15 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 101 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:01:22 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:01:29 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:01:36 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:01:38 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9825  0.9784  0.9784  0.9784  0.9742  0.9742  0.9742  0.9742  0.9742  0.9719  0.9719  0.9719  0.9719  0.9719  0.9714  0.9714
2023-10-25 11:01:38 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 11:01:38 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #513: GFLOPs: 169595.0831. Time: 51865.2597 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #514: GFLOPs: 170653.0455. Time: 51543.7213 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #515: GFLOPs: 173824.3304. Time: 50603.3477 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #516: GFLOPs: 170896.3569. Time: 51470.3367 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #517: GFLOPs: 174507.0446. Time: 50405.3750 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #518: GFLOPs: 174377.1521. Time: 50442.9217 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #519: GFLOPs: 174683.2953. Time: 50354.5173 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #520: GFLOPs: 169922.7436. Time: 51765.2483 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #521: GFLOPs: 171113.0998. Time: 51405.1410 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #522: GFLOPs: 169628.5693. Time: 51855.0210 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #523: GFLOPs: 169125.3789. Time: 52009.3027 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #524: GFLOPs: 168682.5669. Time: 52145.8333 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #525: GFLOPs: 169032.1960. Time: 52037.9740 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #526: GFLOPs: 169295.3786. Time: 51957.0770 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #527: GFLOPs: 170860.1059. Time: 51481.2570 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #528: GFLOPs: 172168.2730. Time: 51090.0927 us. Best GFLOPs: 175838.2915
2023-10-25 11:09:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 11:09:09 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 11:09:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:09:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:09:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1205 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:09:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1601 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:09:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 2000 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:09:27 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2023-10-25 11:09:34 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:09:41 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 65 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:09:48 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 62 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:09:56 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:09:57 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9830  0.9830  0.9830  0.9830  0.9819  0.9808  0.9800  0.9800  0.9800  0.9800  0.9800  0.9800  0.9800  0.9800  0.9800  0.9800
2023-10-25 11:09:58 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 11:09:58 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #529: GFLOPs: 174185.0256. Time: 50498.5603 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #530: GFLOPs: 169586.1523. Time: 51867.9910 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #531: GFLOPs: 174472.7837. Time: 50415.2730 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #532: GFLOPs: 171463.7749. Time: 51300.0080 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #533: GFLOPs: 174272.1929. Time: 50473.3020 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #534: GFLOPs: 172139.5337. Time: 51098.6223 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #535: GFLOPs: 171763.1941. Time: 51210.5813 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #536: GFLOPs: 166307.2241. Time: 52890.6250 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #537: GFLOPs: 173555.0760. Time: 50681.8540 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #538: GFLOPs: 174377.1521. Time: 50442.9217 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #539: GFLOPs: 174007.4318. Time: 50550.0997 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #540: GFLOPs: 172403.2593. Time: 51020.4567 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #541: GFLOPs: 172671.2595. Time: 50941.2687 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #542: GFLOPs: 172212.0085. Time: 51077.1177 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #543: GFLOPs: 172374.4235. Time: 51028.9917 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #544: GFLOPs: 171818.1612. Time: 51194.1983 us. Best GFLOPs: 175838.2915
2023-10-25 11:17:25 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 11:17:27 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 11:17:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 400 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:17:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 802 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:17:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1201 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:17:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1594 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:17:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1998 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:17:44 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2023-10-25 11:17:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:17:58 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:18:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:18:13 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:18:14 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9830  0.9830  0.9808  0.9800  0.9800  0.9800  0.9800  0.9795  0.9795  0.9795  0.9791  0.9791  0.9784  0.9784  0.9784  0.9784
2023-10-25 11:18:14 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 11:18:14 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #545: GFLOPs: 175617.8028. Time: 50086.5680 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #546: GFLOPs: 175013.0945. Time: 50259.6280 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #547: GFLOPs: 173411.4135. Time: 50723.8413 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #548: GFLOPs: 172285.6939. Time: 51055.2723 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #549: GFLOPs: 172520.9842. Time: 50985.6413 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #550: GFLOPs: 172664.3111. Time: 50943.3187 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #551: GFLOPs: 172670.1037. Time: 50941.6097 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #552: GFLOPs: 173031.8366. Time: 50835.1133 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #553: GFLOPs: 173562.0780. Time: 50679.8093 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #554: GFLOPs: 172374.4235. Time: 51028.9917 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #555: GFLOPs: 174660.8013. Time: 50361.0023 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #556: GFLOPs: 171320.1420. Time: 51343.0173 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #557: GFLOPs: 170616.8811. Time: 51554.6467 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #558: GFLOPs: 171736.8755. Time: 51218.4293 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #559: GFLOPs: 170360.8540. Time: 51632.1257 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #560: GFLOPs: 172184.3860. Time: 51085.3117 us. Best GFLOPs: 175838.2915
2023-10-25 11:25:39 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 11:25:41 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 11:25:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 396 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:25:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 791 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:25:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1189 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:25:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1591 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:25:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1990 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:25:58 [INFO] [evolutionary_search.cc:723] Sampled 60 candidate(s)
2023-10-25 11:26:05 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:26:12 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:26:19 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 92 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:26:27 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:26:28 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9830  0.9800  0.9800  0.9800  0.9800  0.9800  0.9800  0.9791  0.9789  0.9784  0.9784  0.9784  0.9784  0.9784  0.9746  0.9746
2023-10-25 11:26:28 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 11:26:28 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #561: GFLOPs: 170363.1032. Time: 51631.4440 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #562: GFLOPs: 172537.1463. Time: 50980.8653 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #563: GFLOPs: 174562.6008. Time: 50389.3330 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #564: GFLOPs: 172022.3276. Time: 51133.4380 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #565: GFLOPs: 173433.5868. Time: 50717.3563 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #566: GFLOPs: 172692.0878. Time: 50935.1247 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #567: GFLOPs: 172598.3977. Time: 50962.7733 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #568: GFLOPs: 174032.1050. Time: 50542.9330 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #569: GFLOPs: 173223.7504. Time: 50778.7933 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #570: GFLOPs: 173816.1199. Time: 50605.7380 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #571: GFLOPs: 172983.0457. Time: 50849.4517 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #572: GFLOPs: 170168.4789. Time: 51690.4957 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #573: GFLOPs: 171813.5857. Time: 51195.5617 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #574: GFLOPs: 172839.1894. Time: 50891.7743 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #575: GFLOPs: 167522.4107. Time: 52506.9630 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #576: GFLOPs: 174374.7956. Time: 50443.6033 us. Best GFLOPs: 175838.2915
2023-10-25 11:33:55 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 11:33:57 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 11:34:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 396 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:34:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 796 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:34:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1192 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:34:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1595 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:34:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1990 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:34:14 [INFO] [evolutionary_search.cc:723] Sampled 60 candidate(s)
2023-10-25 11:34:21 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:34:28 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 78 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:34:35 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:34:42 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:34:44 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9827  0.9819  0.9819  0.9819  0.9784  0.9784  0.9784  0.9784  0.9746  0.9746  0.9746  0.9746  0.9746  0.9746  0.9746  0.9746
2023-10-25 11:34:44 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 11:34:44 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #577: GFLOPs: 169237.5590. Time: 51974.8280 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #578: GFLOPs: 170162.8530. Time: 51692.2047 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #579: GFLOPs: 170596.5493. Time: 51560.7910 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #580: GFLOPs: 174020.3540. Time: 50546.3460 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #581: GFLOPs: 172790.5071. Time: 50906.1127 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #582: GFLOPs: 172966.7999. Time: 50854.2277 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #583: GFLOPs: 172225.8141. Time: 51073.0233 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #584: GFLOPs: 172129.1844. Time: 51101.6947 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #585: GFLOPs: 168282.7020. Time: 52269.7397 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #586: GFLOPs: 172973.7546. Time: 50852.1830 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #587: GFLOPs: 167958.0521. Time: 52370.7730 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #588: GFLOPs: 169937.3206. Time: 51760.8080 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #589: GFLOPs: 173086.4573. Time: 50819.0713 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #590: GFLOPs: 174549.5981. Time: 50393.0867 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #591: GFLOPs: 167930.6840. Time: 52379.3080 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #592: GFLOPs: 174030.9320. Time: 50543.2737 us. Best GFLOPs: 175838.2915
2023-10-25 11:42:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 11:42:09 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 11:42:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 400 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:42:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 796 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:42:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1197 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:42:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1592 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:42:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1993 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:42:27 [INFO] [evolutionary_search.cc:723] Sampled 57 candidate(s)
2023-10-25 11:42:33 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:42:40 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 82 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:42:47 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:42:55 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:42:56 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9830  0.9800  0.9800  0.9800  0.9800  0.9800  0.9795  0.9791  0.9791  0.9789  0.9784  0.9746  0.9746  0.9746  0.9746  0.9746
2023-10-25 11:42:56 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 11:42:56 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #593: GFLOPs: 170748.0246. Time: 51515.0500 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #594: GFLOPs: 173071.3352. Time: 50823.5117 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #595: GFLOPs: 172739.5409. Time: 50921.1323 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #596: GFLOPs: 174101.4683. Time: 50522.7963 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #597: GFLOPs: 173805.5679. Time: 50608.8103 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #598: GFLOPs: 166301.8673. Time: 52892.3287 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #599: GFLOPs: 173626.3945. Time: 50661.0360 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #600: GFLOPs: 167349.4252. Time: 52561.2383 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #601: GFLOPs: 171472.8878. Time: 51297.2817 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #602: GFLOPs: 167557.2591. Time: 52496.0427 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #603: GFLOPs: 170569.4601. Time: 51568.9797 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #604: GFLOPs: 174472.7837. Time: 50415.2730 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #605: GFLOPs: 167791.8167. Time: 52422.6580 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #606: GFLOPs: 174538.9580. Time: 50396.1587 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #607: GFLOPs: 174543.6787. Time: 50394.7957 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #608: GFLOPs: 173185.3268. Time: 50790.0593 us. Best GFLOPs: 175838.2915
2023-10-25 11:50:22 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 11:50:23 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 11:50:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:50:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 799 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:50:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1200 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:50:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1599 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:50:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1998 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:50:41 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2023-10-25 11:50:47 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:50:54 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:51:02 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 69 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:51:09 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:51:10 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9819  0.9808  0.9800  0.9789  0.9784  0.9784  0.9784  0.9746  0.9746  0.9746  0.9746  0.9746  0.9746  0.9746  0.9746  0.9746
2023-10-25 11:51:10 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 11:51:10 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #609: GFLOPs: 169075.4445. Time: 52024.6630 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #610: GFLOPs: 173489.6455. Time: 50700.9683 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #611: GFLOPs: 165754.1912. Time: 53067.0927 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #612: GFLOPs: 173622.8908. Time: 50662.0583 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #613: GFLOPs: 172673.5690. Time: 50940.5873 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #614: GFLOPs: 171380.5312. Time: 51324.9257 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #615: GFLOPs: 173389.2458. Time: 50730.3263 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #616: GFLOPs: 166858.5670. Time: 52715.8610 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #617: GFLOPs: 169965.3292. Time: 51752.2783 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #618: GFLOPs: 173098.0826. Time: 50815.6583 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #619: GFLOPs: 170346.2043. Time: 51636.5660 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #620: GFLOPs: 170221.3066. Time: 51674.4537 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #621: GFLOPs: 169115.3899. Time: 52012.3747 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #622: GFLOPs: 170336.0706. Time: 51639.6380 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #623: GFLOPs: 168125.7120. Time: 52318.5473 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #624: GFLOPs: 153889.9987. Time: 57158.3150 us. Best GFLOPs: 175838.2915
2023-10-25 11:58:45 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 11:58:46 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 11:58:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 395 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:58:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 794 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:58:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1192 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:59:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1588 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:59:00 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2023-10-25 11:59:07 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:59:14 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:59:21 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 99 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:59:29 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 72 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 11:59:30 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9789  0.9784  0.9784  0.9746  0.9746  0.9746  0.9746  0.9738  0.9738  0.9738  0.9738  0.9738  0.9738  0.9738  0.9738  0.9738
2023-10-25 11:59:30 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 11:59:30 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #625: GFLOPs: 173573.7661. Time: 50676.3967 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #626: GFLOPs: 170460.0103. Time: 51602.0913 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #627: GFLOPs: 171898.3951. Time: 51170.3033 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #628: GFLOPs: 174975.0761. Time: 50270.5483 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #629: GFLOPs: 166794.8549. Time: 52735.9973 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #630: GFLOPs: 175464.7432. Time: 50130.2590 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #631: GFLOPs: 174595.7152. Time: 50379.7760 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #632: GFLOPs: 173332.1066. Time: 50747.0497 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #633: GFLOPs: 168001.8447. Time: 52357.1217 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #634: GFLOPs: 174891.9439. Time: 50294.4437 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #635: GFLOPs: 170071.9029. Time: 51719.8483 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #636: GFLOPs: 170487.0823. Time: 51593.8973 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #637: GFLOPs: 174450.3439. Time: 50421.7580 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #638: GFLOPs: 173571.4325. Time: 50677.0780 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #639: GFLOPs: 172803.2491. Time: 50902.3590 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #640: GFLOPs: 172403.2593. Time: 51020.4567 us. Best GFLOPs: 175838.2915
2023-10-25 12:06:59 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 12:07:00 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 12:07:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:07:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 799 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:07:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1193 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:07:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1594 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:07:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1995 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:07:17 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2023-10-25 12:07:24 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:07:31 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 78 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:07:38 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 74 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:07:45 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 73 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:07:46 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9812  0.9786  0.9786  0.9786  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731
2023-10-25 12:07:47 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 12:07:47 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #641: GFLOPs: 170871.4340. Time: 51477.8440 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #642: GFLOPs: 171899.5407. Time: 51169.9623 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #643: GFLOPs: 172618.0545. Time: 50956.9700 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #644: GFLOPs: 170628.1770. Time: 51551.2337 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #645: GFLOPs: 173142.2748. Time: 50802.6883 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #646: GFLOPs: 173339.1077. Time: 50745.0000 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #647: GFLOPs: 173904.0896. Time: 50580.1390 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #648: GFLOPs: 173676.7172. Time: 50646.3570 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #649: GFLOPs: 173661.5089. Time: 50650.7923 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #650: GFLOPs: 169167.5657. Time: 51996.3327 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #651: GFLOPs: 168391.5702. Time: 52235.9463 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #652: GFLOPs: 172579.8990. Time: 50968.2360 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #653: GFLOPs: 153815.5949. Time: 57185.9637 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #654: GFLOPs: 169444.5510. Time: 51911.3360 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #655: GFLOPs: 168711.2830. Time: 52136.9577 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #656: GFLOPs: 153462.9353. Time: 57317.3777 us. Best GFLOPs: 175838.2915
2023-10-25 12:15:17 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 12:15:18 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 12:15:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:15:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 796 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:15:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1196 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:15:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1598 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:15:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1992 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:15:35 [INFO] [evolutionary_search.cc:723] Sampled 58 candidate(s)
2023-10-25 12:15:42 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:15:49 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 69 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:15:56 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:16:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:16:05 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9822  0.9788  0.9737  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731
2023-10-25 12:16:05 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 12:16:05 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #657: GFLOPs: 174520.0410. Time: 50401.6213 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #658: GFLOPs: 170996.1543. Time: 51440.2973 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #659: GFLOPs: 156324.6380. Time: 56268.1170 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #660: GFLOPs: 173653.3138. Time: 50653.1827 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #661: GFLOPs: 169438.9728. Time: 51913.0450 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #662: GFLOPs: 173228.4013. Time: 50777.4300 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #663: GFLOPs: 172974.9145. Time: 50851.8420 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #664: GFLOPs: 153836.7204. Time: 57178.1107 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #665: GFLOPs: 169912.6591. Time: 51768.3207 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #666: GFLOPs: 174839.7307. Time: 50309.4633 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #667: GFLOPs: 172877.4426. Time: 50880.5133 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #668: GFLOPs: 167913.1894. Time: 52384.7653 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #669: GFLOPs: 174795.8512. Time: 50322.0927 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #670: GFLOPs: 170013.5507. Time: 51737.5997 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #671: GFLOPs: 168061.0117. Time: 52338.6890 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #672: GFLOPs: 174763.8438. Time: 50331.3090 us. Best GFLOPs: 175838.2915
2023-10-25 12:23:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 12:23:39 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 12:23:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 395 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:23:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 792 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:23:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1193 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:23:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1591 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:23:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1990 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:23:57 [INFO] [evolutionary_search.cc:723] Sampled 60 candidate(s)
2023-10-25 12:24:03 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:24:10 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:24:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 81 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:24:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:24:27 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9822  0.9789  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9731  0.9729  0.9729
2023-10-25 12:24:27 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 12:24:27 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #673: GFLOPs: 169549.3417. Time: 51879.2520 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #674: GFLOPs: 173128.3207. Time: 50806.7830 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #675: GFLOPs: 173598.3335. Time: 50669.2250 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #676: GFLOPs: 173483.7978. Time: 50702.6773 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #677: GFLOPs: 169056.6026. Time: 52030.4613 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #678: GFLOPs: 169624.1107. Time: 51856.3840 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #679: GFLOPs: 168839.4961. Time: 52097.3660 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #680: GFLOPs: 174715.2733. Time: 50345.3010 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #681: GFLOPs: 173051.5921. Time: 50829.3100 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #682: GFLOPs: 173560.9102. Time: 50680.1503 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #683: GFLOPs: 174362.9983. Time: 50447.0163 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #684: GFLOPs: 168177.2788. Time: 52302.5053 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #685: GFLOPs: 170187.5860. Time: 51684.6923 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #686: GFLOPs: 167563.8015. Time: 52493.9930 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #687: GFLOPs: 174282.8004. Time: 50470.2300 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #688: GFLOPs: 167763.4287. Time: 52431.5287 us. Best GFLOPs: 175838.2915
2023-10-25 12:32:00 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 12:32:02 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 12:32:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:32:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 792 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:32:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1186 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:32:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1584 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:32:16 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2023-10-25 12:32:23 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 111 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:32:31 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:32:38 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:32:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:32:47 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9822  0.9786  0.9731  0.9731  0.9731  0.9731  0.9731  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729
2023-10-25 12:32:47 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 12:32:47 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #689: GFLOPs: 174997.6512. Time: 50264.0633 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #690: GFLOPs: 172572.9760. Time: 50970.2807 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #691: GFLOPs: 169274.2507. Time: 51963.5620 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #692: GFLOPs: 168879.3301. Time: 52085.0777 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #693: GFLOPs: 174266.3096. Time: 50475.0060 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #694: GFLOPs: 173342.6000. Time: 50743.9777 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #695: GFLOPs: 172990.0198. Time: 50847.4017 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #696: GFLOPs: 173098.0826. Time: 50815.6583 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #697: GFLOPs: 173460.4463. Time: 50709.5030 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #698: GFLOPs: 173524.6875. Time: 50690.7297 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #699: GFLOPs: 168520.4135. Time: 52196.0090 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #700: GFLOPs: 172202.8000. Time: 51079.8490 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #701: GFLOPs: 174548.4181. Time: 50393.4273 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #702: GFLOPs: 172886.7234. Time: 50877.7820 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #703: GFLOPs: 154432.2676. Time: 56957.6110 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #704: GFLOPs: 167846.4692. Time: 52405.5887 us. Best GFLOPs: 175838.2915
2023-10-25 12:40:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 12:40:33 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 12:40:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:40:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 799 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:40:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1200 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:40:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1601 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:40:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1997 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:40:51 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2023-10-25 12:40:57 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:41:05 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:41:12 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 92 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:41:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:41:21 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9788  0.9786  0.9786  0.9731  0.9731  0.9731  0.9731  0.9731  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729
2023-10-25 12:41:21 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 12:41:21 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #705: GFLOPs: 167866.1508. Time: 52399.4443 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #706: GFLOPs: 172797.4657. Time: 50904.0627 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #707: GFLOPs: 167740.4849. Time: 52438.7003 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #708: GFLOPs: 168852.7824. Time: 52093.2667 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #709: GFLOPs: 175023.7924. Time: 50256.5560 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #710: GFLOPs: 168455.4091. Time: 52216.1507 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #711: GFLOPs: 168432.2918. Time: 52223.3173 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #712: GFLOPs: 168004.0481. Time: 52356.4350 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #713: GFLOPs: 174844.4862. Time: 50308.0950 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #714: GFLOPs: 168247.5523. Time: 52280.6597 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #715: GFLOPs: 168529.2324. Time: 52193.2777 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #716: GFLOPs: 174192.0958. Time: 50496.5107 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #717: GFLOPs: 167496.2720. Time: 52515.1570 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #718: GFLOPs: 174785.1811. Time: 50325.1647 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #719: GFLOPs: 174256.8801. Time: 50477.7373 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #720: GFLOPs: 173238.8822. Time: 50774.3580 us. Best GFLOPs: 175838.2915
2023-10-25 12:48:55 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 12:48:56 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 12:48:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:49:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 793 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:49:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1190 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:49:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1588 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:49:10 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2023-10-25 12:49:16 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 92 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:49:24 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 107 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:49:31 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 100 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:49:38 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 81 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:49:40 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9822  0.9788  0.9786  0.9786  0.9786  0.9731  0.9731  0.9731  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729  0.9729
2023-10-25 12:49:40 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 12:49:40 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #721: GFLOPs: 174644.2204. Time: 50365.7837 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #722: GFLOPs: 171055.1654. Time: 51422.5513 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #723: GFLOPs: 169398.8745. Time: 51925.3333 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #724: GFLOPs: 172840.3464. Time: 50891.4337 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #725: GFLOPs: 169815.2563. Time: 51798.0140 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #726: GFLOPs: 173557.4092. Time: 50681.1727 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #727: GFLOPs: 174692.7710. Time: 50351.7860 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #728: GFLOPs: 168532.5335. Time: 52192.2553 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #729: GFLOPs: 168836.1818. Time: 52098.3887 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #730: GFLOPs: 167874.9013. Time: 52396.7130 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #731: GFLOPs: 174421.9999. Time: 50429.9517 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #732: GFLOPs: 174964.3842. Time: 50273.6203 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #733: GFLOPs: 170396.8934. Time: 51621.2053 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #734: GFLOPs: 173613.5308. Time: 50664.7897 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #735: GFLOPs: 174292.2327. Time: 50467.4987 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #736: GFLOPs: 168686.9772. Time: 52144.4700 us. Best GFLOPs: 175838.2915
2023-10-25 12:57:14 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 12:57:15 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 12:57:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:57:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 799 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:57:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1199 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:57:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1598 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:57:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1999 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:57:33 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2023-10-25 12:57:39 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:57:47 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:57:54 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:58:01 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 96 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 12:58:02 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9731  0.9731  0.9729  0.9729  0.9729  0.9729  0.9729  0.9712  0.9712  0.9712  0.9712  0.9712  0.9711  0.9711  0.9711  0.9711
2023-10-25 12:58:03 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 12:58:03 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #737: GFLOPs: 172761.5428. Time: 50914.6473 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #738: GFLOPs: 173770.4124. Time: 50619.0490 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #739: GFLOPs: 153943.3149. Time: 57138.5190 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #740: GFLOPs: 168578.8447. Time: 52177.9173 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #741: GFLOPs: 166805.6503. Time: 52732.5843 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #742: GFLOPs: 173874.7507. Time: 50588.6737 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #743: GFLOPs: 168425.6814. Time: 52225.3670 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #744: GFLOPs: 167740.4849. Time: 52438.7003 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #745: GFLOPs: 167518.0463. Time: 52508.3310 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #746: GFLOPs: 170384.5038. Time: 51624.9590 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #747: GFLOPs: 169687.7726. Time: 51836.9290 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #748: GFLOPs: 169550.4550. Time: 51878.9113 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #749: GFLOPs: 170817.0709. Time: 51494.2270 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #750: GFLOPs: 171338.3717. Time: 51337.5547 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #751: GFLOPs: 170370.9907. Time: 51629.0537 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #752: GFLOPs: 171190.3897. Time: 51381.9323 us. Best GFLOPs: 175838.2915
2023-10-25 13:05:40 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 13:05:41 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 13:05:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:05:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 800 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:05:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1196 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:05:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1591 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:05:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1990 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:05:59 [INFO] [evolutionary_search.cc:723] Sampled 60 candidate(s)
2023-10-25 13:06:05 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:06:13 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:06:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:06:27 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:06:28 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9755  0.9731  0.9731  0.9729  0.9729  0.9729  0.9729  0.9729  0.9712  0.9712  0.9712  0.9712  0.9711  0.9711  0.9711  0.9711
2023-10-25 13:06:29 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 13:06:29 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #753: GFLOPs: 159459.7031. Time: 55161.8550 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #754: GFLOPs: 169420.0324. Time: 51918.8487 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #755: GFLOPs: 168888.1865. Time: 52082.3463 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #756: GFLOPs: 170509.6401. Time: 51587.0717 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #757: GFLOPs: 170214.5551. Time: 51676.5033 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #758: GFLOPs: 170456.6333. Time: 51603.1137 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #759: GFLOPs: 168424.5817. Time: 52225.7080 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #760: GFLOPs: 169510.3038. Time: 51891.1997 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #761: GFLOPs: 165979.4543. Time: 52995.0713 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #762: GFLOPs: 171781.5182. Time: 51205.1187 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #763: GFLOPs: 171321.2788. Time: 51342.6767 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #764: GFLOPs: 169544.8709. Time: 51880.6200 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #765: GFLOPs: 171490.0098. Time: 51292.1600 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #766: GFLOPs: 168756.5733. Time: 52122.9653 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #767: GFLOPs: 172246.5362. Time: 51066.8790 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #768: GFLOPs: 167082.5021. Time: 52645.2077 us. Best GFLOPs: 175838.2915
2023-10-25 13:14:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 13:14:05 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 13:14:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:14:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 788 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:14:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1192 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:14:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1588 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:14:19 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2023-10-25 13:14:26 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:14:33 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:14:41 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 102 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:14:48 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:14:49 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9720  0.9719  0.9687  0.9687  0.9686  0.9683  0.9681  0.9681  0.9681  0.9681  0.9680  0.9680  0.9680  0.9680  0.9680  0.9663
2023-10-25 13:14:50 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 13:14:50 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #769: GFLOPs: 168955.7366. Time: 52061.5233 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #770: GFLOPs: 173165.5407. Time: 50795.8627 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #771: GFLOPs: 170580.7486. Time: 51565.5670 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #772: GFLOPs: 170347.3282. Time: 51636.2253 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #773: GFLOPs: 171393.0660. Time: 51321.1720 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #774: GFLOPs: 166545.8309. Time: 52814.8497 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #775: GFLOPs: 170421.6780. Time: 51613.6980 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #776: GFLOPs: 170597.6775. Time: 51560.4500 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #777: GFLOPs: 172248.8343. Time: 51066.1977 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #778: GFLOPs: 168436.6879. Time: 52221.9543 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #779: GFLOPs: 171849.0987. Time: 51184.9820 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #780: GFLOPs: 171609.9142. Time: 51256.3220 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #781: GFLOPs: 171798.6851. Time: 51200.0020 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #782: GFLOPs: 171751.7475. Time: 51213.9943 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #783: GFLOPs: 171235.9021. Time: 51368.2757 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #784: GFLOPs: 164470.9653. Time: 53481.1297 us. Best GFLOPs: 175838.2915
2023-10-25 13:22:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 13:22:28 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 13:22:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:22:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 798 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:22:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1199 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:22:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1594 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:22:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1988 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:22:46 [INFO] [evolutionary_search.cc:723] Sampled 62 candidate(s)
2023-10-25 13:22:52 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:22:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 65 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:23:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:23:14 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:23:15 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9799  0.9720  0.9713  0.9713  0.9713  0.9690  0.9686  0.9683  0.9681  0.9681  0.9681  0.9681  0.9681  0.9680  0.9680  0.9680
2023-10-25 13:23:16 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 13:23:16 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #785: GFLOPs: 172096.9989. Time: 51111.2517 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #786: GFLOPs: 172972.5958. Time: 50852.5237 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #787: GFLOPs: 168259.6331. Time: 52276.9060 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #788: GFLOPs: 167456.0017. Time: 52527.7860 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #789: GFLOPs: 170237.0583. Time: 51669.6723 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #790: GFLOPs: 170028.1267. Time: 51733.1643 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #791: GFLOPs: 170736.7128. Time: 51518.4630 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #792: GFLOPs: 167337.4748. Time: 52564.9920 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #793: GFLOPs: 168445.4980. Time: 52219.2230 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #794: GFLOPs: 172663.1565. Time: 50943.6593 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #795: GFLOPs: 167236.4828. Time: 52596.7353 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #796: GFLOPs: 168683.6700. Time: 52145.4923 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #797: GFLOPs: 166480.2095. Time: 52835.6677 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #798: GFLOPs: 170382.2540. Time: 51625.6407 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #799: GFLOPs: 171847.9538. Time: 51185.3230 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #800: GFLOPs: 169913.7783. Time: 51767.9797 us. Best GFLOPs: 175838.2915
2023-10-25 13:30:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 13:30:49 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 13:30:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:30:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 792 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:31:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1189 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:31:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1588 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:31:03 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2023-10-25 13:31:10 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 96 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:31:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 98 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:31:25 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:31:32 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:31:34 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9720  0.9720  0.9720  0.9713  0.9687  0.9686  0.9683  0.9681  0.9681  0.9681  0.9680  0.9680  0.9663  0.9663  0.9663  0.9661
2023-10-25 13:31:34 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 13:31:34 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #801: GFLOPs: 168259.6331. Time: 52276.9060 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #802: GFLOPs: 171017.7143. Time: 51433.8123 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #803: GFLOPs: 167608.4777. Time: 52480.0007 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #804: GFLOPs: 171005.2342. Time: 51437.5660 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #805: GFLOPs: 170877.0892. Time: 51476.1403 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #806: GFLOPs: 169742.5515. Time: 51820.2003 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #807: GFLOPs: 167720.8338. Time: 52444.8443 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #808: GFLOPs: 172364.0470. Time: 51032.0637 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #809: GFLOPs: 168345.3608. Time: 52250.2847 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #810: GFLOPs: 171648.7830. Time: 51244.7153 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #811: GFLOPs: 171366.8440. Time: 51329.0250 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #812: GFLOPs: 171478.6007. Time: 51295.5727 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #813: GFLOPs: 172629.6169. Time: 50953.5570 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #814: GFLOPs: 170179.7155. Time: 51687.0827 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #815: GFLOPs: 164811.7694. Time: 53370.5393 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #816: GFLOPs: 170931.5071. Time: 51459.7523 us. Best GFLOPs: 175838.2915
2023-10-25 13:39:15 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 13:39:16 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 13:39:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:39:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:39:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1196 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:39:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1593 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:39:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1989 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:39:34 [INFO] [evolutionary_search.cc:723] Sampled 61 candidate(s)
2023-10-25 13:39:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:39:48 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:39:55 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 82 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:40:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 73 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:40:04 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9829  0.9777  0.9690  0.9690  0.9687  0.9687  0.9687  0.9683  0.9683  0.9681  0.9680  0.9680  0.9674  0.9663  0.9663  0.9655
2023-10-25 13:40:04 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 13:40:04 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #817: GFLOPs: 170414.9260. Time: 51615.7430 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #818: GFLOPs: 167227.7987. Time: 52599.4667 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #819: GFLOPs: 168826.2269. Time: 52101.4607 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #820: GFLOPs: 169509.1910. Time: 51891.5403 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #821: GFLOPs: 170410.4095. Time: 51617.1110 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #822: GFLOPs: 170449.8630. Time: 51605.1633 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #823: GFLOPs: 170197.7032. Time: 51681.6200 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #824: GFLOPs: 171794.1118. Time: 51201.3650 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #825: GFLOPs: 167212.6159. Time: 52604.2427 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #826: GFLOPs: 165155.0628. Time: 53259.6027 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #827: GFLOPs: 170862.3683. Time: 51480.5753 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #828: GFLOPs: 170093.2304. Time: 51713.3633 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #829: GFLOPs: 172712.9223. Time: 50928.9803 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #830: GFLOPs: 164585.4649. Time: 53443.9237 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #831: GFLOPs: 170743.4893. Time: 51516.4183 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #832: GFLOPs: 170977.9975. Time: 51445.7600 us. Best GFLOPs: 175838.2915
2023-10-25 13:47:51 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 13:47:52 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 13:47:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 392 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:47:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 797 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:48:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1195 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:48:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1596 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:48:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1999 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:48:10 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2023-10-25 13:48:17 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:48:24 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:48:31 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:48:39 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:48:40 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9786  0.9777  0.9777  0.9681  0.9681  0.9680  0.9680  0.9680  0.9680  0.9674  0.9663  0.9663  0.9661  0.9655  0.9655  0.9641
2023-10-25 13:48:40 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 13:48:40 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #833: GFLOPs: 173357.7525. Time: 50739.5423 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #834: GFLOPs: 172505.9607. Time: 50990.0817 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #835: GFLOPs: 170316.9290. Time: 51645.4417 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #836: GFLOPs: 172559.0966. Time: 50974.3803 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #837: GFLOPs: 166996.9743. Time: 52672.1700 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #838: GFLOPs: 172124.5766. Time: 51103.0627 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #839: GFLOPs: 172213.1571. Time: 51076.7770 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #840: GFLOPs: 171255.2497. Time: 51362.4723 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #841: GFLOPs: 171831.9205. Time: 51190.0990 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #842: GFLOPs: 170354.0914. Time: 51634.1753 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #843: GFLOPs: 164163.9737. Time: 53581.1410 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #844: GFLOPs: 164153.5175. Time: 53584.5540 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #845: GFLOPs: 172398.6357. Time: 51021.8250 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #846: GFLOPs: 171488.8708. Time: 51292.5007 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #847: GFLOPs: 165035.5325. Time: 53298.1770 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #848: GFLOPs: 163650.0082. Time: 53749.4200 us. Best GFLOPs: 175838.2915
2023-10-25 13:56:15 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 13:56:16 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 13:56:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 395 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:56:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 796 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:56:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1191 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:56:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1588 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:56:30 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2023-10-25 13:56:37 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 96 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:56:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:56:52 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:56:59 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 13:57:01 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9784  0.9777  0.9713  0.9683  0.9683  0.9680  0.9680  0.9680  0.9680  0.9674  0.9663  0.9663  0.9661  0.9655  0.9655  0.9655
2023-10-25 13:57:01 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 13:57:01 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #849: GFLOPs: 168852.7824. Time: 52093.2667 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #850: GFLOPs: 171710.5471. Time: 51226.2827 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #851: GFLOPs: 173073.6735. Time: 50822.8250 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #852: GFLOPs: 171040.4127. Time: 51426.9867 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #853: GFLOPs: 171143.7839. Time: 51395.9247 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #854: GFLOPs: 169863.3762. Time: 51783.3403 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #855: GFLOPs: 171894.9609. Time: 51171.3257 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #856: GFLOPs: 171205.1850. Time: 51377.4920 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #857: GFLOPs: 171611.0716. Time: 51255.9763 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #858: GFLOPs: 172383.6504. Time: 51026.2603 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #859: GFLOPs: 171297.3682. Time: 51349.8433 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #860: GFLOPs: 164388.0742. Time: 53508.0970 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #861: GFLOPs: 165307.6108. Time: 53210.4540 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #862: GFLOPs: 172258.0478. Time: 51063.4663 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #863: GFLOPs: 164614.9018. Time: 53434.3667 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #864: GFLOPs: 165324.5833. Time: 53204.9913 us. Best GFLOPs: 175838.2915
2023-10-25 14:04:41 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 14:04:42 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 14:04:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 393 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:04:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 791 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:04:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1194 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:04:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1588 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:04:56 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2023-10-25 14:05:03 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 98 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:05:10 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 72 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:05:17 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:05:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:05:27 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9680  0.9680  0.9674  0.9661  0.9655  0.9655  0.9655  0.9655  0.9655  0.9641  0.9641  0.9641  0.9641  0.9640  0.9640  0.9634
2023-10-25 14:05:27 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 14:05:27 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #865: GFLOPs: 172106.1961. Time: 51108.5203 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #866: GFLOPs: 171640.7767. Time: 51247.1057 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #867: GFLOPs: 172745.3385. Time: 50919.4233 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #868: GFLOPs: 171046.0968. Time: 51425.2777 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #869: GFLOPs: 171147.1882. Time: 51394.9023 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #870: GFLOPs: 172606.4936. Time: 50960.3830 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #871: GFLOPs: 170429.5710. Time: 51611.3077 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #872: GFLOPs: 165058.7974. Time: 53290.6647 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #873: GFLOPs: 164880.3108. Time: 53348.3530 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #874: GFLOPs: 164797.0221. Time: 53375.3153 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #875: GFLOPs: 171667.0826. Time: 51239.2527 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #876: GFLOPs: 162977.2832. Time: 53971.2827 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #877: GFLOPs: 170699.3845. Time: 51529.7290 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #878: GFLOPs: 168463.1209. Time: 52213.7603 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #879: GFLOPs: 168797.4728. Time: 52110.3360 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #880: GFLOPs: 171983.2895. Time: 51145.0447 us. Best GFLOPs: 175838.2915
2023-10-25 14:13:17 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 14:13:18 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 14:13:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:13:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 797 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:13:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1198 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:13:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1600 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:13:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1994 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:13:36 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2023-10-25 14:13:43 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 111 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:13:51 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:13:58 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:14:05 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:14:07 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9697  0.9697  0.9687  0.9686  0.9686  0.9683  0.9681  0.9681  0.9663  0.9661  0.9661  0.9655  0.9655  0.9645  0.9641  0.9641
2023-10-25 14:14:07 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 14:14:07 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #881: GFLOPs: 169159.8055. Time: 51998.7180 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #882: GFLOPs: 169110.9583. Time: 52013.7377 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #883: GFLOPs: 171656.7911. Time: 51242.3247 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #884: GFLOPs: 169142.0365. Time: 52004.1807 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #885: GFLOPs: 171065.3849. Time: 51419.4793 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #886: GFLOPs: 170356.3393. Time: 51633.4940 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #887: GFLOPs: 170948.5057. Time: 51454.6353 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #888: GFLOPs: 167240.8167. Time: 52595.3723 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #889: GFLOPs: 171102.8746. Time: 51408.2130 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #890: GFLOPs: 170573.9685. Time: 51567.6167 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #891: GFLOPs: 171791.8246. Time: 51202.0467 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #892: GFLOPs: 165557.1901. Time: 53130.2387 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #893: GFLOPs: 164751.7140. Time: 53389.9940 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #894: GFLOPs: 166564.1331. Time: 52809.0463 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #895: GFLOPs: 169397.7620. Time: 51925.6743 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #896: GFLOPs: 162670.6958. Time: 54073.0030 us. Best GFLOPs: 175838.2915
2023-10-25 14:21:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 14:21:39 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 14:21:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:21:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 798 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:21:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1193 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:21:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1592 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:21:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1992 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:21:57 [INFO] [evolutionary_search.cc:723] Sampled 58 candidate(s)
2023-10-25 14:22:03 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:22:11 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 100 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:22:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:22:26 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 74 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:22:27 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9720  0.9719  0.9681  0.9674  0.9663  0.9655  0.9655  0.9641  0.9641  0.9641  0.9641  0.9640  0.9640  0.9640  0.9634  0.9634
2023-10-25 14:22:27 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 14:22:27 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #897: GFLOPs: 169386.6295. Time: 51929.0870 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #898: GFLOPs: 168903.6914. Time: 52077.5653 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #899: GFLOPs: 170240.4267. Time: 51668.6500 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #900: GFLOPs: 165923.8772. Time: 53012.8223 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #901: GFLOPs: 164068.8609. Time: 53612.2027 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #902: GFLOPs: 165556.1286. Time: 53130.5793 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #903: GFLOPs: 171652.2075. Time: 51243.6930 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #904: GFLOPs: 162721.0221. Time: 54056.2793 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #905: GFLOPs: 169681.0797. Time: 51838.9737 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #906: GFLOPs: 168831.7486. Time: 52099.7567 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #907: GFLOPs: 169573.8803. Time: 51871.7447 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #908: GFLOPs: 161843.1804. Time: 54349.4820 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #909: GFLOPs: 162436.9072. Time: 54150.8280 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #910: GFLOPs: 171113.0998. Time: 51405.1410 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #911: GFLOPs: 169044.3897. Time: 52034.2203 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #912: GFLOPs: 168666.0009. Time: 52150.9550 us. Best GFLOPs: 175838.2915
2023-10-25 14:30:05 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 14:30:06 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 14:30:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:30:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 791 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:30:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1190 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:30:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1585 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:30:21 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2023-10-25 14:30:27 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:30:35 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:30:42 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:30:49 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:30:51 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9698  0.9698  0.9690  0.9686  0.9686  0.9686  0.9686  0.9686  0.9686  0.9681  0.9661  0.9661  0.9661  0.9655  0.9641  0.9640
2023-10-25 14:30:51 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 14:30:51 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #913: GFLOPs: 168545.7555. Time: 52188.1610 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #914: GFLOPs: 169570.5383. Time: 51872.7670 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #915: GFLOPs: 169459.0286. Time: 51906.9010 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #916: GFLOPs: 169493.5748. Time: 51896.3213 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #917: GFLOPs: 169071.0139. Time: 52026.0263 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #918: GFLOPs: 170071.9029. Time: 51719.8483 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #919: GFLOPs: 170347.3282. Time: 51636.2253 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #920: GFLOPs: 169086.5361. Time: 52021.2503 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #921: GFLOPs: 169169.7998. Time: 51995.6460 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #922: GFLOPs: 172516.3543. Time: 50987.0097 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #923: GFLOPs: 170257.3035. Time: 51663.5283 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #924: GFLOPs: 172305.2626. Time: 51049.4740 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #925: GFLOPs: 170788.7643. Time: 51502.7617 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #926: GFLOPs: 165189.9899. Time: 53248.3417 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #927: GFLOPs: 164291.6553. Time: 53539.4997 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #928: GFLOPs: 162298.8090. Time: 54196.9043 us. Best GFLOPs: 175838.2915
2023-10-25 14:38:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 14:38:27 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 14:38:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 392 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:38:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 785 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:38:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1185 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:38:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1582 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:38:42 [INFO] [evolutionary_search.cc:723] Sampled 58 candidate(s)
2023-10-25 14:38:49 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 106 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:38:56 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 81 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:39:04 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 98 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:39:11 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:39:13 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9775  0.9669  0.9669  0.9659  0.9659  0.9619  0.9586  0.9586  0.9582  0.9582  0.9582  0.9580  0.9580  0.9580  0.9551  0.9551
2023-10-25 14:39:13 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 14:39:13 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #929: GFLOPs: 171083.5603. Time: 51414.0167 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #930: GFLOPs: 151501.5325. Time: 58059.4327 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #931: GFLOPs: 172860.0594. Time: 50885.6300 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #932: GFLOPs: 170086.4879. Time: 51715.4133 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #933: GFLOPs: 169435.6361. Time: 51914.0673 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #934: GFLOPs: 163908.1493. Time: 53664.7693 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #935: GFLOPs: 170993.8884. Time: 51440.9790 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #936: GFLOPs: 169179.7952. Time: 51992.5740 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #937: GFLOPs: 162924.7261. Time: 53988.6930 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #938: GFLOPs: 169745.9003. Time: 51819.1780 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #939: GFLOPs: 168811.8400. Time: 52105.9010 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #940: GFLOPs: 170018.0308. Time: 51736.2363 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #941: GFLOPs: 170774.0409. Time: 51507.2020 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #942: GFLOPs: 171155.1485. Time: 51392.5120 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #943: GFLOPs: 169675.4859. Time: 51840.6827 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #944: GFLOPs: 167447.2948. Time: 52530.5173 us. Best GFLOPs: 175838.2915
2023-10-25 14:46:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 14:46:49 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 14:46:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:46:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:47:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1201 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:47:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1599 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:47:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1996 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:47:08 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2023-10-25 14:47:14 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:47:21 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:47:29 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 100 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:47:36 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 56 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:47:37 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9684  0.9666  0.9664  0.9664  0.9662  0.9662  0.9619  0.9617  0.9586  0.9582  0.9551  0.9551  0.9551  0.9551  0.9551  0.9551
2023-10-25 14:47:38 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 14:47:38 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #945: GFLOPs: 170567.2055. Time: 51569.6613 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #946: GFLOPs: 165964.4817. Time: 52999.8523 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #947: GFLOPs: 167262.5394. Time: 52588.5417 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #948: GFLOPs: 172724.4974. Time: 50925.5673 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #949: GFLOPs: 172417.0956. Time: 51016.3623 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #950: GFLOPs: 169154.2460. Time: 52000.4270 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #951: GFLOPs: 164199.5434. Time: 53569.5340 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #952: GFLOPs: 164374.4491. Time: 53512.5323 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #953: GFLOPs: 169328.7465. Time: 51946.8383 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #954: GFLOPs: 164261.2878. Time: 53549.3977 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #955: GFLOPs: 165146.5935. Time: 53262.3340 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #956: GFLOPs: 164933.0838. Time: 53331.2833 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #957: GFLOPs: 167322.2720. Time: 52569.7680 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #958: GFLOPs: 167228.8818. Time: 52599.1260 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #959: GFLOPs: 166844.5303. Time: 52720.2960 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #960: GFLOPs: 167387.4739. Time: 52549.2907 us. Best GFLOPs: 175838.2915
2023-10-25 14:55:06 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 14:55:07 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 14:55:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:55:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 795 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:55:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1193 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:55:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1588 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:55:22 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2023-10-25 14:55:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 104 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:55:36 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:55:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 82 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:55:51 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 14:55:53 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9684  0.9684  0.9682  0.9617  0.9586  0.9586  0.9586  0.9586  0.9586  0.9586  0.9582  0.9582  0.9582  0.9580  0.9580  0.9551
2023-10-25 14:55:53 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 14:55:53 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #961: GFLOPs: 170989.3412. Time: 51442.3470 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #962: GFLOPs: 170725.4026. Time: 51521.8760 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #963: GFLOPs: 170636.0891. Time: 51548.8433 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #964: GFLOPs: 171555.0803. Time: 51272.7050 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #965: GFLOPs: 162248.7285. Time: 54213.6330 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #966: GFLOPs: 168872.6834. Time: 52087.1277 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #967: GFLOPs: 161950.9859. Time: 54313.3033 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #968: GFLOPs: 172228.1128. Time: 51072.3417 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #969: GFLOPs: 169817.4900. Time: 51797.3327 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #970: GFLOPs: 170827.2630. Time: 51491.1547 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #971: GFLOPs: 169711.2512. Time: 51829.7577 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #972: GFLOPs: 171149.4582. Time: 51394.2207 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #973: GFLOPs: 171818.1612. Time: 51194.1983 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #974: GFLOPs: 168885.9761. Time: 52083.0280 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #975: GFLOPs: 169545.9842. Time: 51880.2793 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #976: GFLOPs: 166869.3706. Time: 52712.4480 us. Best GFLOPs: 175838.2915
2023-10-25 15:03:22 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 15:03:24 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 15:03:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 400 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:03:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:03:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1196 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:03:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1595 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:03:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1998 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:03:42 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2023-10-25 15:03:48 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:03:56 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 82 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:04:03 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 98 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:04:11 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:04:12 [INFO] [evolutionary_search.cc:649] Scores of the best 16 candidates:
[1 : 16]:	0.9669  0.9664  0.9664  0.9662  0.9623  0.9617  0.9586  0.9586  0.9586  0.9580  0.9580  0.9548  0.9548  0.9548  0.9546  0.9546
2023-10-25 15:04:12 [INFO] [evolutionary_search.cc:727] Got 16 candidate(s) with evolutionary search
2023-10-25 15:04:12 [INFO] [evolutionary_search.cc:730] Sending 16 candidates(s) for measurement
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #977: GFLOPs: 167729.5692. Time: 52442.1130 us. Best GFLOPs: 175838.2915
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #978: GFLOPs: 168857.2005. Time: 52091.9037 us. Best GFLOPs: 175838.2915
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #979: GFLOPs: 166832.6360. Time: 52724.0547 us. Best GFLOPs: 175838.2915
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #980: GFLOPs: 167087.9262. Time: 52643.4987 us. Best GFLOPs: 175838.2915
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #981: GFLOPs: 165234.4820. Time: 53234.0037 us. Best GFLOPs: 175838.2915
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #982: GFLOPs: 171952.3037. Time: 51154.2610 us. Best GFLOPs: 175838.2915
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #983: GFLOPs: 169531.4907. Time: 51884.7147 us. Best GFLOPs: 175838.2915
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #984: GFLOPs: 169489.1223. Time: 51897.6847 us. Best GFLOPs: 175838.2915
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #985: GFLOPs: 162509.6408. Time: 54126.5920 us. Best GFLOPs: 175838.2915
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #986: GFLOPs: 166334.0655. Time: 52882.0900 us. Best GFLOPs: 175838.2915
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #987: GFLOPs: 169195.3374. Time: 51987.7980 us. Best GFLOPs: 175838.2915
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #988: GFLOPs: 166672.9401. Time: 52774.5717 us. Best GFLOPs: 175838.2915
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #989: GFLOPs: 166222.4890. Time: 52917.5870 us. Best GFLOPs: 175838.2915
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #990: GFLOPs: 176038.8876. Time: 49966.7610 us. Best GFLOPs: 176038.8876
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #991: GFLOPs: 171705.9784. Time: 51227.6457 us. Best GFLOPs: 176038.8876
2023-10-25 15:11:48 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #992: GFLOPs: 168259.6331. Time: 52276.9060 us. Best GFLOPs: 176038.8876
2023-10-25 15:11:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2023-10-25 15:11:49 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2023-10-25 15:11:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:11:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 798 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:12:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1197 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:12:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1594 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:12:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 1998 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:12:08 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2023-10-25 15:12:14 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:12:22 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 98 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:12:30 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:12:37 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x1ac1238)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x1a31478)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x1a2fd48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1ae9e98)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1a29aa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1b149e8)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x19f9678)]: 0 failure(s)
2023-10-25 15:12:39 [INFO] [evolutionary_search.cc:649] Scores of the best 8 candidates:
[1 : 8]:	0.9777  0.9777  0.9687  0.9684  0.9669  0.9664  0.9664  0.9662
2023-10-25 15:12:39 [INFO] [evolutionary_search.cc:727] Got 8 candidate(s) with evolutionary search
2023-10-25 15:12:39 [INFO] [evolutionary_search.cc:730] Sending 8 candidates(s) for measurement
2023-10-25 15:16:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #993: GFLOPs: 168889.2912. Time: 52082.0057 us. Best GFLOPs: 176038.8876
2023-10-25 15:16:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #994: GFLOPs: 170689.2087. Time: 51532.8010 us. Best GFLOPs: 176038.8876
2023-10-25 15:16:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #995: GFLOPs: 171041.5468. Time: 51426.6457 us. Best GFLOPs: 176038.8876
2023-10-25 15:16:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #996: GFLOPs: 170954.1837. Time: 51452.9263 us. Best GFLOPs: 176038.8876
2023-10-25 15:16:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #997: GFLOPs: 171789.5387. Time: 51202.7280 us. Best GFLOPs: 176038.8876
2023-10-25 15:16:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #998: GFLOPs: 171709.4052. Time: 51226.6233 us. Best GFLOPs: 176038.8876
2023-10-25 15:16:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #999: GFLOPs: 171971.8135. Time: 51148.4577 us. Best GFLOPs: 176038.8876
2023-10-25 15:16:22 [INFO] [task_scheduler.cc:131] [Task #0: main] Trial #1000: GFLOPs: 171936.2330. Time: 51159.0423 us. Best GFLOPs: 176038.8876
