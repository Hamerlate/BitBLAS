direct_conv_nhwc_nhwc_int8xint4.py
n: 1, f: 64, h: 56, w: 56, c: 64, kh: 3, kw: 3, s: 1, d: 1, p: 1, oh: 56, ow: 56
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 16], 'thread': [7, 16], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 2}}}
0.15380480885505676
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 8], 'thread': [14, 8], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.1368063986301422
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 8], 'thread': [16, 8], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 4}}}
0.1099776029586792
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 16], 'thread': [8, 16], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 4}}}
0.10423680394887924
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 32], 'thread': [4, 32], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 8}}}
0.11448320001363754
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 16], 'thread': [16, 8], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 4}}}
0.05816320329904556
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 32], 'thread': [8, 16], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 8}}}
0.08826880156993866
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 16], 'thread': [14, 8], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.08929280191659927
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 4], 'thread': [28, 4], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.12021759897470474
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 16], 'thread': [16, 8], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 8}}}
0.09031680226325989
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 4], 'thread': [32, 4], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.0985087975859642
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 8], 'thread': [49, 2], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.13701120018959045
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 8], 'thread': [14, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.07905279844999313
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 16], 'thread': [7, 16], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.10751999914646149
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 8], 'thread': [14, 8], 'rstep': [576], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.17878399789333344
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 8], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 2}}}
0.07516159862279892
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 32], 'thread': [7, 16], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 2}}}
0.1351616084575653
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 8], 'thread': [14, 8], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.08273280411958694
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 16], 'thread': [8, 16], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 4}}}
0.092563197016716
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 8], 'thread': [16, 8], 'rstep': [576], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 4}}}
0.15790079534053802
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 32], 'thread': [8, 16], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
0.10321919620037079
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 16], 'thread': [7, 16], 'rstep': [576], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.2365376055240631
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 4], 'thread': [49, 2], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.2048064023256302
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 16], 'thread': [8, 16], 'rstep': [576], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 8}}}
0.20684799551963806
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 32], 'thread': [8, 16], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.10424959659576416
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 4], 'thread': [28, 4], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.19020800292491913
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 8], 'thread': [16, 8], 'rstep': [576], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 4}}}
0.23592960834503174
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 8], 'thread': [16, 8], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 2}}}
0.07515519857406616
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 64], 'thread': [2, 64], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 16}}}
0.11325440555810928
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 16], 'thread': [14, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.07659520208835602
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 64], 'thread': [4, 32], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
0.13763199746608734
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 4], 'thread': [28, 4], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.11775360256433487
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 32], 'thread': [14, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 4}}}
0.05693439766764641
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 16], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 4}}}
0.07065600156784058
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 32], 'thread': [7, 16], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 4}}}
0.1296384036540985
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 32], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 8}}}
0.053043197840452194
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 32], 'thread': [4, 32], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 8}}}
0.16835199296474457
{<Node, ladder_conv2d_reshape_bias>: {'block': [392, 4], 'thread': [28, 4], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.10894720256328583
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 8], 'thread': [14, 8], 'rstep': [576], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.2598848044872284
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 4], 'thread': [32, 4], 'rstep': [576], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 2}}}
0.23899519443511963
code:  __global__ void __launch_bounds__(128) Fused(int8_t* __restrict__ input, int8_t* __restrict__ weight, int* __restrict__ T_conv) {
  
  int T_conv_local[1];
  __shared__ signed char data_shared[18432];
  __shared__ signed char B_decode_shared[2304];
  T_conv_local[0] = 0;
  *(int4*)(data_shared + (((int)threadIdx.x) * 16)) = (((((1 <= (((((int)threadIdx.x) % 36) / 12) + (((((int)blockIdx.x) >> 4) * 4) / 7))) && (1 <= (((((int)threadIdx.x) % 12) >> 2) + ((((((int)blockIdx.x) >> 4) * 32) + (((int)threadIdx.x) / 36)) % 56)))) && ((((((int)threadIdx.x) % 36) / 12) + (((((int)blockIdx.x) >> 4) * 4) / 7)) < 57)) && ((((((int)threadIdx.x) % 12) >> 2) + ((((((int)blockIdx.x) >> 4) * 32) + (((int)threadIdx.x) / 36)) % 56)) < 57)) ? *(int4*)(input + (((((((((int)threadIdx.x) % 36) / 12) * 3584) + ((((int)blockIdx.x) >> 4) * 2048)) + ((((int)threadIdx.x) / 36) * 64)) + ((((int)threadIdx.x) % 12) * 16)) - 3648)) : make_int4(0, 0, 0, 0));
  *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 2048)) = (((((1 <= ((((((int)blockIdx.x) >> 4) * 4) / 7) + ((((((int)threadIdx.x) >> 2) + 5) % 9) / 3))) && (1 <= (((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 128) / 36)) % 56) + (((((int)threadIdx.x) >> 2) + 2) % 3)))) && (((((((int)blockIdx.x) >> 4) * 4) / 7) + ((((((int)threadIdx.x) >> 2) + 5) % 9) / 3)) < 57)) && ((((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 128) / 36)) % 56) + (((((int)threadIdx.x) >> 2) + 2) % 3)) < 57)) ? *(int4*)(input + ((((((((((((int)threadIdx.x) * 16) + 320) % 576) / 192) * 3584) + ((((int)blockIdx.x) >> 4) * 2048)) + ((((((int)threadIdx.x) * 16) + 2048) / 576) * 64)) + ((((((int)threadIdx.x) >> 2) + 2) % 3) * 64)) + ((((int)threadIdx.x) & 3) * 16)) - 3648)) : make_int4(0, 0, 0, 0));
  *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 4096)) = (((((1 <= (((((((int)blockIdx.x) >> 4) * 4) + ((((int)threadIdx.x) + 256) / 288)) / 7) + ((((((int)threadIdx.x) >> 2) + 1) % 9) / 3))) && (1 <= (((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 256) / 36)) % 56) + (((((int)threadIdx.x) >> 2) + 1) % 3)))) && ((((((((int)blockIdx.x) >> 4) * 4) + ((((int)threadIdx.x) + 256) / 288)) / 7) + ((((((int)threadIdx.x) >> 2) + 1) % 9) / 3)) < 57)) && ((((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 256) / 36)) % 56) + (((((int)threadIdx.x) >> 2) + 1) % 3)) < 57)) ? *(int4*)(input + ((((((((((((int)threadIdx.x) * 16) + 64) % 576) / 192) * 3584) + ((((int)blockIdx.x) >> 4) * 2048)) + ((((((int)threadIdx.x) * 16) + 4096) / 576) * 64)) + ((((((int)threadIdx.x) >> 2) + 1) % 3) * 64)) + ((((int)threadIdx.x) & 3) * 16)) - 3648)) : make_int4(0, 0, 0, 0));
  *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 6144)) = (((((1 <= (((((((int)blockIdx.x) >> 4) * 4) + ((((int)threadIdx.x) + 384) / 288)) / 7) + (((((int)threadIdx.x) / 12) + 2) % 3))) && (1 <= (((((int)threadIdx.x) % 12) >> 2) + ((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 384) / 36)) % 56)))) && ((((((((int)blockIdx.x) >> 4) * 4) + ((((int)threadIdx.x) + 384) / 288)) / 7) + (((((int)threadIdx.x) / 12) + 2) % 3)) < 57)) && ((((((int)threadIdx.x) % 12) >> 2) + ((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 384) / 36)) % 56)) < 57)) ? *(int4*)(input + ((((((((((int)threadIdx.x) / 12) + 2) % 3) * 3584) + ((((int)blockIdx.x) >> 4) * 2048)) + ((((((int)threadIdx.x) * 16) + 6144) / 576) * 64)) + ((((int)threadIdx.x) % 12) * 16)) - 3648)) : make_int4(0, 0, 0, 0));
  *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 8192)) = (((((1 <= (((((((int)blockIdx.x) >> 4) * 4) + ((((int)threadIdx.x) + 512) / 288)) / 7) + ((((((int)threadIdx.x) >> 2) + 2) % 9) / 3))) && (1 <= (((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 512) / 36)) % 56) + (((((int)threadIdx.x) >> 2) + 2) % 3)))) && ((((((((int)blockIdx.x) >> 4) * 4) + ((((int)threadIdx.x) + 512) / 288)) / 7) + ((((((int)threadIdx.x) >> 2) + 2) % 9) / 3)) < 57)) && ((((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 512) / 36)) % 56) + (((((int)threadIdx.x) >> 2) + 2) % 3)) < 57)) ? *(int4*)(input + ((((((((((((int)threadIdx.x) * 16) + 128) % 576) / 192) * 3584) + ((((int)blockIdx.x) >> 4) * 2048)) + ((((((int)threadIdx.x) * 16) + 8192) / 576) * 64)) + ((((((int)threadIdx.x) >> 2) + 2) % 3) * 64)) + ((((int)threadIdx.x) & 3) * 16)) - 3648)) : make_int4(0, 0, 0, 0));
  *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 10240)) = (((((1 <= (((((((int)blockIdx.x) >> 4) * 4) + ((((int)threadIdx.x) + 640) / 288)) / 7) + ((((((int)threadIdx.x) >> 2) + 7) % 9) / 3))) && (1 <= (((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 640) / 36)) % 56) + (((((int)threadIdx.x) >> 2) + 1) % 3)))) && ((((((((int)blockIdx.x) >> 4) * 4) + ((((int)threadIdx.x) + 640) / 288)) / 7) + ((((((int)threadIdx.x) >> 2) + 7) % 9) / 3)) < 57)) && ((((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 640) / 36)) % 56) + (((((int)threadIdx.x) >> 2) + 1) % 3)) < 57)) ? *(int4*)(input + ((((((((((((int)threadIdx.x) * 16) + 448) % 576) / 192) * 3584) + ((((int)blockIdx.x) >> 4) * 2048)) + ((((((int)threadIdx.x) * 16) + 10240) / 576) * 64)) + ((((((int)threadIdx.x) >> 2) + 1) % 3) * 64)) + ((((int)threadIdx.x) & 3) * 16)) - 3648)) : make_int4(0, 0, 0, 0));
  *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 12288)) = (((((1 <= (((((((int)blockIdx.x) >> 4) * 4) + ((((int)threadIdx.x) + 768) / 288)) / 7) + (((((int)threadIdx.x) / 12) + 1) % 3))) && (1 <= (((((int)threadIdx.x) % 12) >> 2) + ((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 768) / 36)) % 56)))) && ((((((((int)blockIdx.x) >> 4) * 4) + ((((int)threadIdx.x) + 768) / 288)) / 7) + (((((int)threadIdx.x) / 12) + 1) % 3)) < 57)) && ((((((int)threadIdx.x) % 12) >> 2) + ((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 768) / 36)) % 56)) < 57)) ? *(int4*)(input + ((((((((((int)threadIdx.x) / 12) + 1) % 3) * 3584) + ((((int)blockIdx.x) >> 4) * 2048)) + ((((((int)threadIdx.x) * 16) + 12288) / 576) * 64)) + ((((int)threadIdx.x) % 12) * 16)) - 3648)) : make_int4(0, 0, 0, 0));
  *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 14336)) = (((((1 <= (((((((int)blockIdx.x) >> 4) * 4) + ((((int)threadIdx.x) + 896) / 288)) / 7) + ((((((int)threadIdx.x) >> 2) + 8) % 9) / 3))) && (1 <= (((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 896) / 36)) % 56) + (((((int)threadIdx.x) >> 2) + 2) % 3)))) && ((((((((int)blockIdx.x) >> 4) * 4) + ((((int)threadIdx.x) + 896) / 288)) / 7) + ((((((int)threadIdx.x) >> 2) + 8) % 9) / 3)) < 57)) && ((((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 896) / 36)) % 56) + (((((int)threadIdx.x) >> 2) + 2) % 3)) < 57)) ? *(int4*)(input + ((((((((((((int)threadIdx.x) * 16) + 512) % 576) / 192) * 3584) + ((((int)blockIdx.x) >> 4) * 2048)) + ((((((int)threadIdx.x) * 16) + 14336) / 576) * 64)) + ((((((int)threadIdx.x) >> 2) + 2) % 3) * 64)) + ((((int)threadIdx.x) & 3) * 16)) - 3648)) : make_int4(0, 0, 0, 0));
  *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 16384)) = (((((1 <= (((((((int)blockIdx.x) >> 4) * 4) + ((((int)threadIdx.x) + 1024) / 288)) / 7) + ((((((int)threadIdx.x) >> 2) + 4) % 9) / 3))) && (1 <= (((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 1024) / 36)) % 56) + (((((int)threadIdx.x) >> 2) + 1) % 3)))) && ((((((((int)blockIdx.x) >> 4) * 4) + ((((int)threadIdx.x) + 1024) / 288)) / 7) + ((((((int)threadIdx.x) >> 2) + 4) % 9) / 3)) < 57)) && ((((((((int)blockIdx.x) >> 4) * 32) + ((((int)threadIdx.x) + 1024) / 36)) % 56) + (((((int)threadIdx.x) >> 2) + 1) % 3)) < 57)) ? *(int4*)(input + ((((((((((((int)threadIdx.x) * 16) + 256) % 576) / 192) * 3584) + ((((int)blockIdx.x) >> 4) * 2048)) + ((((((int)threadIdx.x) * 16) + 16384) / 576) * 64)) + ((((((int)threadIdx.x) >> 2) + 1) % 3) * 64)) + ((((int)threadIdx.x) & 3) * 16)) - 3648)) : make_int4(0, 0, 0, 0));
  for (int ax0_ax1_fused_1 = 0; ax0_ax1_fused_1 < 2; ++ax0_ax1_fused_1) {
    B_decode_shared[((((int)threadIdx.x) * 2) + ax0_ax1_fused_1)] = ((weight[(((((int)blockIdx.x) & 15) * 1152) + ((int)threadIdx.x))] >> ((signed char)(ax0_ax1_fused_1 * 4))) & (signed char)15);
  }
  for (int ax0_ax1_fused_1_1 = 0; ax0_ax1_fused_1_1 < 2; ++ax0_ax1_fused_1_1) {
    B_decode_shared[(((((int)threadIdx.x) * 2) + ax0_ax1_fused_1_1) + 256)] = ((weight[((((((int)blockIdx.x) & 15) * 1152) + ((int)threadIdx.x)) + 128)] >> ((signed char)(ax0_ax1_fused_1_1 * 4))) & (signed char)15);
  }
  for (int ax0_ax1_fused_1_2 = 0; ax0_ax1_fused_1_2 < 2; ++ax0_ax1_fused_1_2) {
    B_decode_shared[(((((int)threadIdx.x) * 2) + ax0_ax1_fused_1_2) + 512)] = ((weight[((((((int)blockIdx.x) & 15) * 1152) + ((int)threadIdx.x)) + 256)] >> ((signed char)(ax0_ax1_fused_1_2 * 4))) & (signed char)15);
  }
  for (int ax0_ax1_fused_1_3 = 0; ax0_ax1_fused_1_3 < 2; ++ax0_ax1_fused_1_3) {
    B_decode_shared[(((((int)threadIdx.x) * 2) + ax0_ax1_fused_1_3) + 768)] = ((weight[((((((int)blockIdx.x) & 15) * 1152) + ((int)threadIdx.x)) + 384)] >> ((signed char)(ax0_ax1_fused_1_3 * 4))) & (signed char)15);
  }
  for (int ax0_ax1_fused_1_4 = 0; ax0_ax1_fused_1_4 < 2; ++ax0_ax1_fused_1_4) {
    B_decode_shared[(((((int)threadIdx.x) * 2) + ax0_ax1_fused_1_4) + 1024)] = ((weight[((((((int)blockIdx.x) & 15) * 1152) + ((int)threadIdx.x)) + 512)] >> ((signed char)(ax0_ax1_fused_1_4 * 4))) & (signed char)15);
  }
  for (int ax0_ax1_fused_1_5 = 0; ax0_ax1_fused_1_5 < 2; ++ax0_ax1_fused_1_5) {
    B_decode_shared[(((((int)threadIdx.x) * 2) + ax0_ax1_fused_1_5) + 1280)] = ((weight[((((((int)blockIdx.x) & 15) * 1152) + ((int)threadIdx.x)) + 640)] >> ((signed char)(ax0_ax1_fused_1_5 * 4))) & (signed char)15);
  }
  for (int ax0_ax1_fused_1_6 = 0; ax0_ax1_fused_1_6 < 2; ++ax0_ax1_fused_1_6) {
    B_decode_shared[(((((int)threadIdx.x) * 2) + ax0_ax1_fused_1_6) + 1536)] = ((weight[((((((int)blockIdx.x) & 15) * 1152) + ((int)threadIdx.x)) + 768)] >> ((signed char)(ax0_ax1_fused_1_6 * 4))) & (signed char)15);
  }
  for (int ax0_ax1_fused_1_7 = 0; ax0_ax1_fused_1_7 < 2; ++ax0_ax1_fused_1_7) {
    B_decode_shared[(((((int)threadIdx.x) * 2) + ax0_ax1_fused_1_7) + 1792)] = ((weight[((((((int)blockIdx.x) & 15) * 1152) + ((int)threadIdx.x)) + 896)] >> ((signed char)(ax0_ax1_fused_1_7 * 4))) & (signed char)15);
  }
  for (int ax0_ax1_fused_1_8 = 0; ax0_ax1_fused_1_8 < 2; ++ax0_ax1_fused_1_8) {
    B_decode_shared[(((((int)threadIdx.x) * 2) + ax0_ax1_fused_1_8) + 2048)] = ((weight[((((((int)blockIdx.x) & 15) * 1152) + ((int)threadIdx.x)) + 1024)] >> ((signed char)(ax0_ax1_fused_1_8 * 4))) & (signed char)15);
  }
  __syncthreads();
  for (int k_1 = 0; k_1 < 576; ++k_1) {
    T_conv_local[0] = (T_conv_local[0] + (((int)data_shared[(((((int)threadIdx.x) >> 2) * 576) + k_1)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 576) + k_1)])));
  }
  T_conv[(((((((int)blockIdx.x) >> 4) * 2048) + ((((int)threadIdx.x) >> 2) * 64)) + ((((int)blockIdx.x) & 15) * 4)) + (((int)threadIdx.x) & 3))] = T_conv_local[0];
}


top1: 0.15380480885505676 	top10: 0.053043197840452194
--------------------------------------------------------------------------------
best config: {<Node, ladder_conv2d_reshape_bias>: {'block': [112, 32], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 8}}}
best latency: 0.053043197840452194
3.964413823617717 tflops, 2.7340784990467015 %
n: 1, f: 64, h: 56, w: 56, c: 64, kh: 1, kw: 1, s: 1, d: 1, p: 0, oh: 56, ow: 56
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 16], 'thread': [7, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4}}}
0.015360000543296337
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 16], 'thread': [8, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 8}}}
0.012287999503314495
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 32], 'thread': [4, 32], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 16}}}
0.018432000651955605
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 32], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.015189333818852901
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 8], 'thread': [14, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.020626286044716835
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 16], 'thread': [14, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.016554666683077812
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 8], 'thread': [14, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.016383999958634377
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 8], 'thread': [49, 2], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.018688000738620758
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 16], 'thread': [14, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.02577066607773304
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 8], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 4}}}
0.013824000023305416
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 16], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
0.014592000283300877
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 16], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 8}}}
0.022016000002622604
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 8], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 4}}}
0.018432000651955605
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 64], 'thread': [2, 64], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 16}}}
0.01894400082528591
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 8], 'thread': [14, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.01600000075995922
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 8], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 4}}}
0.02598400041460991
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 16], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
0.012543999589979649
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 64], 'thread': [8, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
0.023990856483578682
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 32], 'thread': [7, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4}}}
0.013926399871706963
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 32], 'thread': [7, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.024371199309825897
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 8], 'thread': [14, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.02881828509271145
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 32], 'thread': [8, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
0.021211428567767143
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 32], 'thread': [8, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
0.013311999849975109
{<Node, ladder_conv2d_reshape_bias>: {'block': [8, 16], 'thread': [8, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 8}}}
0.03711999952793121
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 16], 'thread': [14, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.011605333536863327
{<Node, ladder_conv2d_reshape_bias>: {'block': [7, 32], 'thread': [7, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4}}}
0.04280320182442665
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 16], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 8}}}
0.011995428241789341
{<Node, ladder_conv2d_reshape_bias>: {'block': [8, 32], 'thread': [8, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
0.03701028600335121
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 64], 'thread': [4, 32], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 16}}}
0.02013866789638996
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 4], 'thread': [28, 4], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.024429714307188988
{<Node, ladder_conv2d_reshape_bias>: {'block': [7, 16], 'thread': [7, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4}}}
0.04369066655635834
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 4], 'thread': [32, 4], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 2}}}
0.026623999699950218
{<Node, ladder_conv2d_reshape_bias>: {'block': [8, 8], 'thread': [8, 8], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 4}}}
0.023210667073726654
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 64], 'thread': [8, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.019626667723059654
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 4], 'thread': [28, 4], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.027940571308135986
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 32], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.013019428588449955
{<Node, ladder_conv2d_reshape_bias>: {'block': [7, 8], 'thread': [7, 8], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'data': 4}}}
0.026794666424393654
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 8], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 4}}}
0.01484800036996603
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 4], 'thread': [16, 4], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 2}}}
0.019894856959581375
{<Node, ladder_conv2d_reshape_bias>: {'block': [7, 64], 'thread': [7, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4}}}
0.04224000126123428
code:  __global__ void __launch_bounds__(112) Fused(int8_t* __restrict__ input, int8_t* __restrict__ weight, int* __restrict__ T_conv) {
  
  int T_conv_local[4];
  __shared__ signed char data_shared[448];
  __shared__ signed char B_decode_shared[4096];
  T_conv_local[0] = 0;
  T_conv_local[1] = 0;
  T_conv_local[2] = 0;
  T_conv_local[3] = 0;
  *(int*)(data_shared + (((int)threadIdx.x) * 4)) = *(int*)(input + ((((int)blockIdx.x) * 448) + (((int)threadIdx.x) * 4)));
  B_decode_shared[((int)threadIdx.x)] = ((weight[(((int)threadIdx.x) >> 1)] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 112)] = ((weight[((((((int)threadIdx.x) + 112) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 24) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 224)] = ((weight[((((((int)threadIdx.x) + 224) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 16) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 336)] = ((weight[((((((int)threadIdx.x) + 336) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 8) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 448)] = ((weight[((((int)threadIdx.x) >> 1) + 224)] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 560)] = ((weight[((((((int)threadIdx.x) + 560) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 24) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 672)] = ((weight[((((((int)threadIdx.x) + 672) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 16) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 784)] = ((weight[((((((int)threadIdx.x) + 784) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 8) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 896)] = ((weight[((((int)threadIdx.x) >> 1) + 448)] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 1008)] = ((weight[((((((int)threadIdx.x) + 1008) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 24) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 1120)] = ((weight[((((((int)threadIdx.x) + 1120) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 16) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 1232)] = ((weight[((((((int)threadIdx.x) + 1232) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 8) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 1344)] = ((weight[((((int)threadIdx.x) >> 1) + 672)] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 1456)] = ((weight[((((((int)threadIdx.x) + 1456) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 24) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 1568)] = ((weight[((((((int)threadIdx.x) + 1568) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 16) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 1680)] = ((weight[((((((int)threadIdx.x) + 1680) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 8) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 1792)] = ((weight[((((int)threadIdx.x) >> 1) + 896)] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 1904)] = ((weight[((((((int)threadIdx.x) + 1904) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 24) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 2016)] = ((weight[((((((int)threadIdx.x) + 2016) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 16) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 2128)] = ((weight[((((((int)threadIdx.x) + 2128) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 8) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 2240)] = ((weight[((((int)threadIdx.x) >> 1) + 1120)] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 2352)] = ((weight[((((((int)threadIdx.x) + 2352) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 24) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 2464)] = ((weight[((((((int)threadIdx.x) + 2464) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 16) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 2576)] = ((weight[((((((int)threadIdx.x) + 2576) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 8) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 2688)] = ((weight[((((int)threadIdx.x) >> 1) + 1344)] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 2800)] = ((weight[((((((int)threadIdx.x) + 2800) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 24) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 2912)] = ((weight[((((((int)threadIdx.x) + 2912) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 16) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 3024)] = ((weight[((((((int)threadIdx.x) + 3024) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 8) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 3136)] = ((weight[((((int)threadIdx.x) >> 1) + 1568)] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 3248)] = ((weight[((((((int)threadIdx.x) + 3248) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 24) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 3360)] = ((weight[((((((int)threadIdx.x) + 3360) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 16) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 3472)] = ((weight[((((((int)threadIdx.x) + 3472) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 8) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 3584)] = ((weight[((((int)threadIdx.x) >> 1) + 1792)] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 3696)] = ((weight[((((((int)threadIdx.x) + 3696) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 24) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 3808)] = ((weight[((((((int)threadIdx.x) + 3808) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 16) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  B_decode_shared[(((int)threadIdx.x) + 3920)] = ((weight[((((((int)threadIdx.x) + 3920) >> 6) * 32) + (((((int)threadIdx.x) >> 1) + 8) & 31))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  if (((int)threadIdx.x) < 64) {
    B_decode_shared[(((int)threadIdx.x) + 4032)] = ((weight[((((int)threadIdx.x) >> 1) + 2016)] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
  }
  __syncthreads();
  for (int k_1 = 0; k_1 < 64; ++k_1) {
    T_conv_local[0] = (T_conv_local[0] + (((int)data_shared[(((((int)threadIdx.x) >> 4) * 64) + k_1)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 15) * 64) + k_1)])));
    T_conv_local[1] = (T_conv_local[1] + (((int)data_shared[(((((int)threadIdx.x) >> 4) * 64) + k_1)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 15) * 64) + k_1) + 1024)])));
    T_conv_local[2] = (T_conv_local[2] + (((int)data_shared[(((((int)threadIdx.x) >> 4) * 64) + k_1)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 15) * 64) + k_1) + 2048)])));
    T_conv_local[3] = (T_conv_local[3] + (((int)data_shared[(((((int)threadIdx.x) >> 4) * 64) + k_1)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 15) * 64) + k_1) + 3072)])));
  }
  T_conv[(((((int)blockIdx.x) * 448) + ((((int)threadIdx.x) >> 4) * 64)) + (((int)threadIdx.x) & 15))] = T_conv_local[0];
  T_conv[((((((int)blockIdx.x) * 448) + ((((int)threadIdx.x) >> 4) * 64)) + (((int)threadIdx.x) & 15)) + 16)] = T_conv_local[1];
  T_conv[((((((int)blockIdx.x) * 448) + ((((int)threadIdx.x) >> 4) * 64)) + (((int)threadIdx.x) & 15)) + 32)] = T_conv_local[2];
  T_conv[((((((int)blockIdx.x) * 448) + ((((int)threadIdx.x) >> 4) * 64)) + (((int)threadIdx.x) & 15)) + 48)] = T_conv_local[3];
}


top1: 0.015360000543296337 	top10: 0.011605333536863327
--------------------------------------------------------------------------------
best config: {<Node, ladder_conv2d_reshape_bias>: {'block': [98, 16], 'thread': [14, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
best latency: 0.011605333536863327
2.0133002362867196 tflops, 1.388482921577048 %
n: 1, f: 128, h: 28, w: 28, c: 128, kh: 3, kw: 3, s: 1, d: 1, p: 1, oh: 28, ow: 28
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 8], 'thread': [49, 2], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.289792001247406
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 8], 'thread': [14, 8], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.22835199534893036
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 4], 'thread': [49, 2], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.3944447934627533
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 4], 'thread': [28, 4], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.3288746774196625
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 16], 'thread': [7, 16], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.2471936047077179
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 8], 'thread': [14, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.2250239998102188
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 8], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
0.24831999838352203
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 16], 'thread': [7, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.2088959962129593
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 16], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
0.21427200734615326
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 4], 'thread': [49, 2], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.40611839294433594
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 8], 'thread': [14, 8], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.3088383972644806
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 4], 'thread': [28, 4], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.37027841806411743
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 32], 'thread': [7, 16], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.3700736165046692
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 4], 'thread': [28, 4], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.36505600810050964
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 32], 'thread': [4, 32], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.40857601165771484
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 8], 'thread': [14, 8], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
1.0297343730926514
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 16], 'thread': [14, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.1497087925672531
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 16], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.1669119894504547
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 8], 'thread': [16, 8], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
0.40919041633605957
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 8], 'thread': [14, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.2024960070848465
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 16], 'thread': [7, 16], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.4022272229194641
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 4], 'thread': [28, 4], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.45081600546836853
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 32], 'thread': [4, 32], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
0.28999680280685425
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 16], 'thread': [8, 16], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.35020801424980164
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 2], 'thread': [49, 2], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
1.189683198928833
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 2], 'thread': [56, 2], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
1.0670080184936523
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 2], 'thread': [56, 2], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
1.326848030090332
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 32], 'thread': [7, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.17960959672927856
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 32], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
0.1830911934375763
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 4], 'thread': [16, 4], 'rstep': [1152], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 4}}}
0.3284991979598999
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 16], 'thread': [14, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.22978560626506805
{<Node, ladder_conv2d_reshape_bias>: {'block': [8, 8], 'thread': [8, 8], 'rstep': [1152], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 8}}}
0.36413440108299255
{<Node, ladder_conv2d_reshape_bias>: {'block': [7, 16], 'thread': [7, 16], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
1.268121600151062
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 4], 'thread': [14, 4], 'rstep': [1152], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.34549760818481445
{<Node, ladder_conv2d_reshape_bias>: {'block': [8, 16], 'thread': [8, 16], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
1.1874303817749023
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 32], 'thread': [14, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.20971520245075226
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 32], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.21503999829292297
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 2], 'thread': [49, 2], 'rstep': [384], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
1.1857919692993164
{<Node, ladder_conv2d_reshape_bias>: {'block': [7, 8], 'thread': [7, 8], 'rstep': [1152], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
0.910540759563446
{<Node, ladder_conv2d_reshape_bias>: {'block': [392, 4], 'thread': [28, 4], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
100000000.0
code:  __global__ void __launch_bounds__(112) Fused(int8_t* __restrict__ input, int8_t* __restrict__ weight, int* __restrict__ T_conv) {
  
  int T_conv_local[14];
  __shared__ signed char data_shared[50176];
  __shared__ signed char B_decode_shared[512];
  T_conv_local[0] = 0;
  T_conv_local[1] = 0;
  T_conv_local[2] = 0;
  T_conv_local[3] = 0;
  T_conv_local[4] = 0;
  T_conv_local[5] = 0;
  T_conv_local[6] = 0;
  T_conv_local[7] = 0;
  T_conv_local[8] = 0;
  T_conv_local[9] = 0;
  T_conv_local[10] = 0;
  T_conv_local[11] = 0;
  T_conv_local[12] = 0;
  T_conv_local[13] = 0;
  for (int k_0 = 0; k_0 < 9; ++k_0) {
    __syncthreads();
    *(int4*)(data_shared + (((int)threadIdx.x) * 16)) = (((1 <= (((((int)blockIdx.x) >> 5) * 14) + (k_0 / 3))) && (1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3)))) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) - 3712)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 1792)) = (((1 <= (((((int)blockIdx.x) >> 5) * 14) + (k_0 / 3))) && (((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 15)) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) - 1920)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 3584)) = ((1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3))) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) - 128)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 5376)) = ((((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 15) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 1664)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 7168)) = ((1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3))) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 3456)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 8960)) = ((((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 15) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 5248)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 10752)) = ((1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3))) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 7040)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 12544)) = ((((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 15) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 8832)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 14336)) = ((1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3))) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 10624)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 16128)) = ((((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 15) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 12416)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 17920)) = ((1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3))) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 14208)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 19712)) = ((((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 15) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 16000)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 21504)) = ((1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3))) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 17792)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 23296)) = ((((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 15) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 19584)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 25088)) = ((1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3))) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 21376)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 26880)) = ((((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 15) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 23168)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 28672)) = ((1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3))) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 24960)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 30464)) = ((((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 15) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 26752)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 32256)) = ((1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3))) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 28544)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 34048)) = ((((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 15) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 30336)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 35840)) = ((1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3))) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 32128)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 37632)) = ((((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 15) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 33920)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 39424)) = ((1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3))) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 35712)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 41216)) = ((((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 15) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 37504)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 43008)) = ((1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3))) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 39296)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 44800)) = ((((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 15) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 41088)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 46592)) = (((1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3))) && ((((((int)blockIdx.x) >> 5) * 14) + (k_0 / 3)) < 16)) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 42880)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 48384)) = ((((((((int)blockIdx.x) >> 5) * 14) + (k_0 / 3)) < 16) && (((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 15)) ? *(int4*)(input + ((((((((int)blockIdx.x) >> 5) * 50176) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 44672)) : make_int4(0, 0, 0, 0));
    B_decode_shared[((int)threadIdx.x)] = ((weight[((((((int)blockIdx.x) & 31) * 2304) + (k_0 * 64)) + (((int)threadIdx.x) >> 1))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
    B_decode_shared[(((int)threadIdx.x) + 112)] = ((weight[(((((((int)blockIdx.x) & 31) * 2304) + (((((int)threadIdx.x) + 112) >> 7) * 576)) + (k_0 * 64)) + (((((int)threadIdx.x) >> 1) + 56) & 63))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
    B_decode_shared[(((int)threadIdx.x) + 224)] = ((weight[(((((((int)blockIdx.x) & 31) * 2304) + (((((int)threadIdx.x) + 224) >> 7) * 576)) + (k_0 * 64)) + (((((int)threadIdx.x) >> 1) + 48) & 63))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
    B_decode_shared[(((int)threadIdx.x) + 336)] = ((weight[(((((((int)blockIdx.x) & 31) * 2304) + (((((int)threadIdx.x) + 336) >> 7) * 576)) + (k_0 * 64)) + (((((int)threadIdx.x) >> 1) + 40) & 63))] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
    if (((int)threadIdx.x) < 64) {
      B_decode_shared[(((int)threadIdx.x) + 448)] = ((weight[((((((((int)blockIdx.x) & 31) * 2304) + (((((int)threadIdx.x) + 448) >> 7) * 576)) + (k_0 * 64)) + (((int)threadIdx.x) >> 1)) + 32)] >> ((signed char)((((int)threadIdx.x) & 1) * 4))) & (signed char)15);
    }
    __syncthreads();
    for (int k_1 = 0; k_1 < 128; ++k_1) {
      T_conv_local[0] = (T_conv_local[0] + (((int)data_shared[(((((int)threadIdx.x) >> 2) * 128) + k_1)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 128) + k_1)])));
      T_conv_local[1] = (T_conv_local[1] + (((int)data_shared[((((((int)threadIdx.x) >> 2) * 128) + k_1) + 3584)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 128) + k_1)])));
      T_conv_local[2] = (T_conv_local[2] + (((int)data_shared[((((((int)threadIdx.x) >> 2) * 128) + k_1) + 7168)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 128) + k_1)])));
      T_conv_local[3] = (T_conv_local[3] + (((int)data_shared[((((((int)threadIdx.x) >> 2) * 128) + k_1) + 10752)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 128) + k_1)])));
      T_conv_local[4] = (T_conv_local[4] + (((int)data_shared[((((((int)threadIdx.x) >> 2) * 128) + k_1) + 14336)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 128) + k_1)])));
      T_conv_local[5] = (T_conv_local[5] + (((int)data_shared[((((((int)threadIdx.x) >> 2) * 128) + k_1) + 17920)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 128) + k_1)])));
      T_conv_local[6] = (T_conv_local[6] + (((int)data_shared[((((((int)threadIdx.x) >> 2) * 128) + k_1) + 21504)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 128) + k_1)])));
      T_conv_local[7] = (T_conv_local[7] + (((int)data_shared[((((((int)threadIdx.x) >> 2) * 128) + k_1) + 25088)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 128) + k_1)])));
      T_conv_local[8] = (T_conv_local[8] + (((int)data_shared[((((((int)threadIdx.x) >> 2) * 128) + k_1) + 28672)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 128) + k_1)])));
      T_conv_local[9] = (T_conv_local[9] + (((int)data_shared[((((((int)threadIdx.x) >> 2) * 128) + k_1) + 32256)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 128) + k_1)])));
      T_conv_local[10] = (T_conv_local[10] + (((int)data_shared[((((((int)threadIdx.x) >> 2) * 128) + k_1) + 35840)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 128) + k_1)])));
      T_conv_local[11] = (T_conv_local[11] + (((int)data_shared[((((((int)threadIdx.x) >> 2) * 128) + k_1) + 39424)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 128) + k_1)])));
      T_conv_local[12] = (T_conv_local[12] + (((int)data_shared[((((((int)threadIdx.x) >> 2) * 128) + k_1) + 43008)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 128) + k_1)])));
      T_conv_local[13] = (T_conv_local[13] + (((int)data_shared[((((((int)threadIdx.x) >> 2) * 128) + k_1) + 46592)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 3) * 128) + k_1)])));
    }
  }
  T_conv[(((((((int)blockIdx.x) >> 5) * 50176) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3))] = T_conv_local[0];
  T_conv[((((((((int)blockIdx.x) >> 5) * 50176) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 3584)] = T_conv_local[1];
  T_conv[((((((((int)blockIdx.x) >> 5) * 50176) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 7168)] = T_conv_local[2];
  T_conv[((((((((int)blockIdx.x) >> 5) * 50176) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 10752)] = T_conv_local[3];
  T_conv[((((((((int)blockIdx.x) >> 5) * 50176) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 14336)] = T_conv_local[4];
  T_conv[((((((((int)blockIdx.x) >> 5) * 50176) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 17920)] = T_conv_local[5];
  T_conv[((((((((int)blockIdx.x) >> 5) * 50176) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 21504)] = T_conv_local[6];
  T_conv[((((((((int)blockIdx.x) >> 5) * 50176) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 25088)] = T_conv_local[7];
  T_conv[((((((((int)blockIdx.x) >> 5) * 50176) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 28672)] = T_conv_local[8];
  T_conv[((((((((int)blockIdx.x) >> 5) * 50176) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 32256)] = T_conv_local[9];
  T_conv[((((((((int)blockIdx.x) >> 5) * 50176) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 35840)] = T_conv_local[10];
  T_conv[((((((((int)blockIdx.x) >> 5) * 50176) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 39424)] = T_conv_local[11];
  T_conv[((((((((int)blockIdx.x) >> 5) * 50176) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 43008)] = T_conv_local[12];
  T_conv[((((((((int)blockIdx.x) >> 5) * 50176) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 46592)] = T_conv_local[13];
}


top1: 0.289792001247406 	top10: 0.1497087925672531
--------------------------------------------------------------------------------
best config: {<Node, ladder_conv2d_reshape_bias>: {'block': [98, 16], 'thread': [14, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
best latency: 0.1497087925672531
1.4046281661988056 tflops, 0.9687090801371072 %
n: 1, f: 128, h: 28, w: 28, c: 512, kh: 1, kw: 1, s: 1, d: 1, p: 0, oh: 28, ow: 28
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 16], 'thread': [14, 8], 'rstep': [512], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.12062720209360123
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 32], 'thread': [7, 16], 'rstep': [512], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.18453119695186615
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 32], 'thread': [8, 16], 'rstep': [512], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.18821761012077332
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 16], 'thread': [14, 8], 'rstep': [512], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.20008321106433868
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 32], 'thread': [4, 32], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
0.14376959204673767
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 8], 'thread': [49, 2], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.14669600129127502
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 8], 'thread': [14, 8], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.1171455979347229
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 16], 'thread': [16, 8], 'rstep': [512], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.17424534261226654
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 8], 'thread': [14, 8], 'rstep': [512], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.23490560054779053
{<Node, ladder_conv2d_reshape_bias>: {'block': [7, 16], 'thread': [7, 16], 'rstep': [512], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.3618752062320709
{<Node, ladder_conv2d_reshape_bias>: {'block': [7, 64], 'thread': [7, 16], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.34017279744148254
{<Node, ladder_conv2d_reshape_bias>: {'block': [8, 16], 'thread': [8, 16], 'rstep': [512], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.31191039085388184
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 8], 'thread': [16, 8], 'rstep': [512], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.20757941901683807
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 8], 'thread': [14, 8], 'rstep': [512], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.1554432064294815
{<Node, ladder_conv2d_reshape_bias>: {'block': [8, 64], 'thread': [4, 32], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.3457024097442627
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 16], 'thread': [7, 16], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.10321919620037079
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 16], 'thread': [8, 16], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.10786666721105576
{<Node, ladder_conv2d_reshape_bias>: {'block': [7, 32], 'thread': [7, 16], 'rstep': [512], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.3448832035064697
{<Node, ladder_conv2d_reshape_bias>: {'block': [8, 8], 'thread': [8, 8], 'rstep': [512], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.17134399712085724
{<Node, ladder_conv2d_reshape_bias>: {'block': [8, 32], 'thread': [8, 16], 'rstep': [512], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.3520447909832001
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 64], 'thread': [2, 64], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
0.14929920434951782
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 64], 'thread': [8, 16], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.23633921146392822
{<Node, ladder_conv2d_reshape_bias>: {'block': [7, 8], 'thread': [7, 8], 'rstep': [512], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.1974271982908249
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 32], 'thread': [7, 16], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.0913407951593399
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 4], 'thread': [28, 4], 'rstep': [512], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.22510933876037598
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 32], 'thread': [8, 16], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.0939439982175827
{<Node, ladder_conv2d_reshape_bias>: {'block': [4, 16], 'thread': [4, 16], 'rstep': [512], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.2882480025291443
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 4], 'thread': [16, 4], 'rstep': [512], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.13944000005722046
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 64], 'thread': [4, 32], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
0.1355839967727661
{<Node, ladder_conv2d_reshape_bias>: {'block': [4, 32], 'thread': [4, 32], 'rstep': [512], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
1.1110399961471558
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 4], 'thread': [14, 4], 'rstep': [512], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.14069759845733643
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 4], 'thread': [49, 2], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.18227200210094452
{<Node, ladder_conv2d_reshape_bias>: {'block': [4, 8], 'thread': [4, 8], 'rstep': [512], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.14370132982730865
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 4], 'thread': [28, 4], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.15138132870197296
{<Node, ladder_conv2d_reshape_bias>: {'block': [8, 4], 'thread': [8, 4], 'rstep': [512], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.09762132912874222
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 8], 'thread': [14, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.10301439464092255
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 4], 'thread': [49, 2], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.17920000851154327
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 8], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
0.11264000087976456
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 4], 'thread': [28, 4], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
0.16810667514801025
{<Node, ladder_conv2d_reshape_bias>: {'block': [4, 128], 'thread': [2, 64], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
0.32727038860321045
code:  __global__ void __launch_bounds__(128) Fused(int8_t* __restrict__ input, int8_t* __restrict__ weight, int* __restrict__ T_conv) {
  
  int T_conv_local[4];
  __shared__ signed char data_shared[512];
  __shared__ signed char B_decode_shared[16384];
  T_conv_local[0] = 0;
  T_conv_local[2] = 0;
  T_conv_local[1] = 0;
  T_conv_local[3] = 0;
  for (int k_0 = 0; k_0 < 4; ++k_0) {
    __syncthreads();
    *(int*)(data_shared + (((int)threadIdx.x) * 4)) = *(int*)(input + ((((((int)blockIdx.x) * 2048) + ((((int)threadIdx.x) >> 5) * 512)) + (k_0 * 128)) + ((((int)threadIdx.x) & 31) * 4)));
    for (int ax0_ax1_fused_1 = 0; ax0_ax1_fused_1 < 16; ++ax0_ax1_fused_1) {
      B_decode_shared[((((int)threadIdx.x) * 16) + ax0_ax1_fused_1)] = ((weight[(((((((int)threadIdx.x) >> 3) * 256) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1 >> 1))] >> ((signed char)((ax0_ax1_fused_1 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_1 = 0; ax0_ax1_fused_1_1 < 16; ++ax0_ax1_fused_1_1) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_1) + 2048)] = ((weight[((((((((int)threadIdx.x) >> 3) * 256) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1_1 >> 1)) + 4096)] >> ((signed char)((ax0_ax1_fused_1_1 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_2 = 0; ax0_ax1_fused_1_2 < 16; ++ax0_ax1_fused_1_2) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_2) + 4096)] = ((weight[((((((((int)threadIdx.x) >> 3) * 256) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1_2 >> 1)) + 8192)] >> ((signed char)((ax0_ax1_fused_1_2 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_3 = 0; ax0_ax1_fused_1_3 < 16; ++ax0_ax1_fused_1_3) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_3) + 6144)] = ((weight[((((((((int)threadIdx.x) >> 3) * 256) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1_3 >> 1)) + 12288)] >> ((signed char)((ax0_ax1_fused_1_3 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_4 = 0; ax0_ax1_fused_1_4 < 16; ++ax0_ax1_fused_1_4) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_4) + 8192)] = ((weight[((((((((int)threadIdx.x) >> 3) * 256) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1_4 >> 1)) + 16384)] >> ((signed char)((ax0_ax1_fused_1_4 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_5 = 0; ax0_ax1_fused_1_5 < 16; ++ax0_ax1_fused_1_5) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_5) + 10240)] = ((weight[((((((((int)threadIdx.x) >> 3) * 256) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1_5 >> 1)) + 20480)] >> ((signed char)((ax0_ax1_fused_1_5 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_6 = 0; ax0_ax1_fused_1_6 < 16; ++ax0_ax1_fused_1_6) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_6) + 12288)] = ((weight[((((((((int)threadIdx.x) >> 3) * 256) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1_6 >> 1)) + 24576)] >> ((signed char)((ax0_ax1_fused_1_6 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_7 = 0; ax0_ax1_fused_1_7 < 16; ++ax0_ax1_fused_1_7) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_7) + 14336)] = ((weight[((((((((int)threadIdx.x) >> 3) * 256) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1_7 >> 1)) + 28672)] >> ((signed char)((ax0_ax1_fused_1_7 & 1) * 4))) & (signed char)15);
    }
    __syncthreads();
    for (int k_1 = 0; k_1 < 128; ++k_1) {
      T_conv_local[0] = (T_conv_local[0] + (((int)data_shared[(((((int)threadIdx.x) >> 6) * 128) + k_1)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 63) * 128) + k_1)])));
      T_conv_local[2] = (T_conv_local[2] + (((int)data_shared[(((((int)threadIdx.x) >> 6) * 128) + k_1)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 63) * 128) + k_1) + 8192)])));
      T_conv_local[1] = (T_conv_local[1] + (((int)data_shared[((((((int)threadIdx.x) >> 6) * 128) + k_1) + 256)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 63) * 128) + k_1)])));
      T_conv_local[3] = (T_conv_local[3] + (((int)data_shared[((((((int)threadIdx.x) >> 6) * 128) + k_1) + 256)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 63) * 128) + k_1) + 8192)])));
    }
  }
  T_conv[(((((int)blockIdx.x) * 512) + ((((int)threadIdx.x) >> 6) * 128)) + (((int)threadIdx.x) & 63))] = T_conv_local[0];
  T_conv[((((((int)blockIdx.x) * 512) + ((((int)threadIdx.x) >> 6) * 128)) + (((int)threadIdx.x) & 63)) + 64)] = T_conv_local[2];
  T_conv[((((((int)blockIdx.x) * 512) + ((((int)threadIdx.x) >> 6) * 128)) + (((int)threadIdx.x) & 63)) + 256)] = T_conv_local[1];
  T_conv[((((((int)blockIdx.x) * 512) + ((((int)threadIdx.x) >> 6) * 128)) + (((int)threadIdx.x) & 63)) + 320)] = T_conv_local[3];
}


top1: 0.12062720209360123 	top10: 0.0913407951593399
--------------------------------------------------------------------------------
best config: {<Node, ladder_conv2d_reshape_bias>: {'block': [49, 32], 'thread': [7, 16], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
best latency: 0.0913407951593399
1.0232019859776302 tflops, 0.7056565420535381 %
n: 128, f: 64, h: 56, w: 56, c: 64, kh: 3, kw: 3, s: 1, d: 1, p: 1, oh: 56, ow: 56
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 32], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 8}}}
5.738700866699219
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 32], 'thread': [4, 32], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 8}}}
41.35669708251953
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 64], 'thread': [8, 16], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
5.883903980255127
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 64], 'thread': [8, 16], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
6.764339447021484
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 64], 'thread': [2, 64], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 16}}}
14.741503715515137
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 16], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 4}}}
6.790553092956543
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 32], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
5.803417682647705
{<Node, ladder_conv2d_reshape_bias>: {'block': [256, 32], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
6.639206886291504
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 32], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 8}}}
5.948006629943848
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 16], 'thread': [14, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
8.377958297729492
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 32], 'thread': [14, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 4}}}
7.593369483947754
{<Node, ladder_conv2d_reshape_bias>: {'block': [256, 64], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
5.767782211303711
{<Node, ladder_conv2d_reshape_bias>: {'block': [392, 32], 'thread': [8, 16], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 8}}}
7.464345455169678
{<Node, ladder_conv2d_reshape_bias>: {'block': [448, 32], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
5.6561665534973145
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 64], 'thread': [8, 16], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
13.224345207214355
{<Node, ladder_conv2d_reshape_bias>: {'block': [256, 16], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 4}}}
7.474175930023193
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 64], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
5.624422550201416
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 16], 'thread': [16, 8], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 8}}}
15.935078620910645
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 64], 'thread': [4, 32], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 16}}}
25.04560661315918
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 64], 'thread': [8, 16], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
14.991564750671387
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 16], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 4}}}
7.797145843505859
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 8], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 2}}}
12.106547355651855
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 64], 'thread': [7, 16], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 4}}}
16.703693389892578
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 16], 'thread': [14, 8], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
16.882686614990234
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 32], 'thread': [8, 16], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
17.71561050415039
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 32], 'thread': [8, 16], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
15.917669296264648
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 8], 'thread': [14, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
13.971250534057617
{<Node, ladder_conv2d_reshape_bias>: {'block': [448, 16], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 4}}}
6.7772417068481445
{<Node, ladder_conv2d_reshape_bias>: {'block': [392, 16], 'thread': [8, 16], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 4}}}
12.108389854431152
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 32], 'thread': [7, 16], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 2}}}
28.73016357421875
{<Node, ladder_conv2d_reshape_bias>: {'block': [256, 8], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 2}}}
12.224512100219727
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 64], 'thread': [4, 32], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
27.058380126953125
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 8], 'thread': [16, 8], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 4}}}
26.095409393310547
{<Node, ladder_conv2d_reshape_bias>: {'block': [512, 64], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
100000000.0
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 8], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 2}}}
13.329203605651855
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 16], 'thread': [8, 16], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 4}}}
22.159975051879883
{<Node, ladder_conv2d_reshape_bias>: {'block': [392, 64], 'thread': [8, 16], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 16}}}
12.174540519714355
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 16], 'thread': [16, 8], 'rstep': [288], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 4}}}
11.105074882507324
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 64], 'thread': [4, 32], 'rstep': [192], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 16}}}
30.557592391967773
{<Node, ladder_conv2d_reshape_bias>: {'block': [448, 64], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
7.4336256980896
code:  __global__ void __launch_bounds__(128) Fused(int8_t* __restrict__ input, int8_t* __restrict__ weight, int* __restrict__ T_conv) {
  
  int T_conv_local[224];
  __shared__ signed char data_shared[43008];
  __shared__ signed char B_decode_shared[6144];
  T_conv_local[0] = 0;
  T_conv_local[28] = 0;
  T_conv_local[56] = 0;
  T_conv_local[84] = 0;
  T_conv_local[112] = 0;
  T_conv_local[140] = 0;
  T_conv_local[168] = 0;
  T_conv_local[196] = 0;
  T_conv_local[1] = 0;
  T_conv_local[29] = 0;
  T_conv_local[57] = 0;
  T_conv_local[85] = 0;
  T_conv_local[113] = 0;
  T_conv_local[141] = 0;
  T_conv_local[169] = 0;
  T_conv_local[197] = 0;
  T_conv_local[2] = 0;
  T_conv_local[30] = 0;
  T_conv_local[58] = 0;
  T_conv_local[86] = 0;
  T_conv_local[114] = 0;
  T_conv_local[142] = 0;
  T_conv_local[170] = 0;
  T_conv_local[198] = 0;
  T_conv_local[3] = 0;
  T_conv_local[31] = 0;
  T_conv_local[59] = 0;
  T_conv_local[87] = 0;
  T_conv_local[115] = 0;
  T_conv_local[143] = 0;
  T_conv_local[171] = 0;
  T_conv_local[199] = 0;
  T_conv_local[4] = 0;
  T_conv_local[32] = 0;
  T_conv_local[60] = 0;
  T_conv_local[88] = 0;
  T_conv_local[116] = 0;
  T_conv_local[144] = 0;
  T_conv_local[172] = 0;
  T_conv_local[200] = 0;
  T_conv_local[5] = 0;
  T_conv_local[33] = 0;
  T_conv_local[61] = 0;
  T_conv_local[89] = 0;
  T_conv_local[117] = 0;
  T_conv_local[145] = 0;
  T_conv_local[173] = 0;
  T_conv_local[201] = 0;
  T_conv_local[6] = 0;
  T_conv_local[34] = 0;
  T_conv_local[62] = 0;
  T_conv_local[90] = 0;
  T_conv_local[118] = 0;
  T_conv_local[146] = 0;
  T_conv_local[174] = 0;
  T_conv_local[202] = 0;
  T_conv_local[7] = 0;
  T_conv_local[35] = 0;
  T_conv_local[63] = 0;
  T_conv_local[91] = 0;
  T_conv_local[119] = 0;
  T_conv_local[147] = 0;
  T_conv_local[175] = 0;
  T_conv_local[203] = 0;
  T_conv_local[8] = 0;
  T_conv_local[36] = 0;
  T_conv_local[64] = 0;
  T_conv_local[92] = 0;
  T_conv_local[120] = 0;
  T_conv_local[148] = 0;
  T_conv_local[176] = 0;
  T_conv_local[204] = 0;
  T_conv_local[9] = 0;
  T_conv_local[37] = 0;
  T_conv_local[65] = 0;
  T_conv_local[93] = 0;
  T_conv_local[121] = 0;
  T_conv_local[149] = 0;
  T_conv_local[177] = 0;
  T_conv_local[205] = 0;
  T_conv_local[10] = 0;
  T_conv_local[38] = 0;
  T_conv_local[66] = 0;
  T_conv_local[94] = 0;
  T_conv_local[122] = 0;
  T_conv_local[150] = 0;
  T_conv_local[178] = 0;
  T_conv_local[206] = 0;
  T_conv_local[11] = 0;
  T_conv_local[39] = 0;
  T_conv_local[67] = 0;
  T_conv_local[95] = 0;
  T_conv_local[123] = 0;
  T_conv_local[151] = 0;
  T_conv_local[179] = 0;
  T_conv_local[207] = 0;
  T_conv_local[12] = 0;
  T_conv_local[40] = 0;
  T_conv_local[68] = 0;
  T_conv_local[96] = 0;
  T_conv_local[124] = 0;
  T_conv_local[152] = 0;
  T_conv_local[180] = 0;
  T_conv_local[208] = 0;
  T_conv_local[13] = 0;
  T_conv_local[41] = 0;
  T_conv_local[69] = 0;
  T_conv_local[97] = 0;
  T_conv_local[125] = 0;
  T_conv_local[153] = 0;
  T_conv_local[181] = 0;
  T_conv_local[209] = 0;
  T_conv_local[14] = 0;
  T_conv_local[42] = 0;
  T_conv_local[70] = 0;
  T_conv_local[98] = 0;
  T_conv_local[126] = 0;
  T_conv_local[154] = 0;
  T_conv_local[182] = 0;
  T_conv_local[210] = 0;
  T_conv_local[15] = 0;
  T_conv_local[43] = 0;
  T_conv_local[71] = 0;
  T_conv_local[99] = 0;
  T_conv_local[127] = 0;
  T_conv_local[155] = 0;
  T_conv_local[183] = 0;
  T_conv_local[211] = 0;
  T_conv_local[16] = 0;
  T_conv_local[44] = 0;
  T_conv_local[72] = 0;
  T_conv_local[100] = 0;
  T_conv_local[128] = 0;
  T_conv_local[156] = 0;
  T_conv_local[184] = 0;
  T_conv_local[212] = 0;
  T_conv_local[17] = 0;
  T_conv_local[45] = 0;
  T_conv_local[73] = 0;
  T_conv_local[101] = 0;
  T_conv_local[129] = 0;
  T_conv_local[157] = 0;
  T_conv_local[185] = 0;
  T_conv_local[213] = 0;
  T_conv_local[18] = 0;
  T_conv_local[46] = 0;
  T_conv_local[74] = 0;
  T_conv_local[102] = 0;
  T_conv_local[130] = 0;
  T_conv_local[158] = 0;
  T_conv_local[186] = 0;
  T_conv_local[214] = 0;
  T_conv_local[19] = 0;
  T_conv_local[47] = 0;
  T_conv_local[75] = 0;
  T_conv_local[103] = 0;
  T_conv_local[131] = 0;
  T_conv_local[159] = 0;
  T_conv_local[187] = 0;
  T_conv_local[215] = 0;
  T_conv_local[20] = 0;
  T_conv_local[48] = 0;
  T_conv_local[76] = 0;
  T_conv_local[104] = 0;
  T_conv_local[132] = 0;
  T_conv_local[160] = 0;
  T_conv_local[188] = 0;
  T_conv_local[216] = 0;
  T_conv_local[21] = 0;
  T_conv_local[49] = 0;
  T_conv_local[77] = 0;
  T_conv_local[105] = 0;
  T_conv_local[133] = 0;
  T_conv_local[161] = 0;
  T_conv_local[189] = 0;
  T_conv_local[217] = 0;
  T_conv_local[22] = 0;
  T_conv_local[50] = 0;
  T_conv_local[78] = 0;
  T_conv_local[106] = 0;
  T_conv_local[134] = 0;
  T_conv_local[162] = 0;
  T_conv_local[190] = 0;
  T_conv_local[218] = 0;
  T_conv_local[23] = 0;
  T_conv_local[51] = 0;
  T_conv_local[79] = 0;
  T_conv_local[107] = 0;
  T_conv_local[135] = 0;
  T_conv_local[163] = 0;
  T_conv_local[191] = 0;
  T_conv_local[219] = 0;
  T_conv_local[24] = 0;
  T_conv_local[52] = 0;
  T_conv_local[80] = 0;
  T_conv_local[108] = 0;
  T_conv_local[136] = 0;
  T_conv_local[164] = 0;
  T_conv_local[192] = 0;
  T_conv_local[220] = 0;
  T_conv_local[25] = 0;
  T_conv_local[53] = 0;
  T_conv_local[81] = 0;
  T_conv_local[109] = 0;
  T_conv_local[137] = 0;
  T_conv_local[165] = 0;
  T_conv_local[193] = 0;
  T_conv_local[221] = 0;
  T_conv_local[26] = 0;
  T_conv_local[54] = 0;
  T_conv_local[82] = 0;
  T_conv_local[110] = 0;
  T_conv_local[138] = 0;
  T_conv_local[166] = 0;
  T_conv_local[194] = 0;
  T_conv_local[222] = 0;
  T_conv_local[27] = 0;
  T_conv_local[55] = 0;
  T_conv_local[83] = 0;
  T_conv_local[111] = 0;
  T_conv_local[139] = 0;
  T_conv_local[167] = 0;
  T_conv_local[195] = 0;
  T_conv_local[223] = 0;
  for (int k_0 = 0; k_0 < 6; ++k_0) {
    __syncthreads();
    *(int4*)(data_shared + (((int)threadIdx.x) * 16)) = (((1 <= (((((int)blockIdx.x) % 7) * 8) + (k_0 >> 1))) && (1 <= ((((int)threadIdx.x) / 6) + ((((k_0 & 1) * 3) + ((((int)threadIdx.x) % 6) >> 1)) >> 1)))) ? *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + (((((k_0 & 1) * 96) + ((((int)threadIdx.x) % 6) * 16)) >> 6) * 64)) + ((((int)threadIdx.x) / 6) * 64)) + (((k_0 * 32) + ((((int)threadIdx.x) % 6) * 16)) & 63)) - 3648)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 2048)) = ((1 <= (((((int)blockIdx.x) % 7) * 8) + (k_0 >> 1))) ? *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + ((((((int)threadIdx.x) * 16) + 2048) / 96) * 64)) + (((((k_0 & 1) * 96) + (((((int)threadIdx.x) * 16) + 32) % 96)) >> 6) * 64)) + (((k_0 * 32) + (((((int)threadIdx.x) * 16) + 32) % 96)) & 63)) - 3648)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 4096)) = ((((1 <= ((((((int)blockIdx.x) % 7) * 8) + ((((int)threadIdx.x) + 256) / 336)) + (k_0 >> 1))) && (1 <= (((((((int)threadIdx.x) >> 1) + 128) % 168) / 3) + ((((k_0 & 1) * 3) + (((((int)threadIdx.x) >> 1) + 2) % 3)) >> 1)))) && ((((((((int)threadIdx.x) >> 1) + 128) % 168) / 3) + ((((k_0 & 1) * 3) + (((((int)threadIdx.x) >> 1) + 2) % 3)) >> 1)) < 57)) ? *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + ((((((int)threadIdx.x) * 16) + 4096) / 96) * 64)) + (((((k_0 & 1) * 96) + (((((int)threadIdx.x) * 16) + 64) % 96)) >> 6) * 64)) + (((k_0 * 32) + (((((int)threadIdx.x) * 16) + 64) % 96)) & 63)) - 3648)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 6144)) = *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + (((((k_0 & 1) * 96) + ((((int)threadIdx.x) % 6) * 16)) >> 6) * 64)) + ((((int)threadIdx.x) / 6) * 64)) + (((k_0 * 32) + ((((int)threadIdx.x) % 6) * 16)) & 63)) + 448));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 8192)) = *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + ((((((int)threadIdx.x) * 16) + 8192) / 96) * 64)) + (((((k_0 & 1) * 96) + (((((int)threadIdx.x) * 16) + 32) % 96)) >> 6) * 64)) + (((k_0 * 32) + (((((int)threadIdx.x) * 16) + 32) % 96)) & 63)) - 3648));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 10240)) = (((1 <= (((((((int)threadIdx.x) >> 1) + 152) % 168) / 3) + ((((k_0 & 1) * 3) + (((((int)threadIdx.x) >> 1) + 2) % 3)) >> 1))) && ((((((((int)threadIdx.x) >> 1) + 152) % 168) / 3) + ((((k_0 & 1) * 3) + (((((int)threadIdx.x) >> 1) + 2) % 3)) >> 1)) < 57)) ? *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + ((((((int)threadIdx.x) * 16) + 10240) / 96) * 64)) + (((((k_0 & 1) * 96) + (((((int)threadIdx.x) * 16) + 64) % 96)) >> 6) * 64)) + (((k_0 * 32) + (((((int)threadIdx.x) * 16) + 64) % 96)) & 63)) - 3648)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 12288)) = *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + (((((k_0 & 1) * 96) + ((((int)threadIdx.x) % 6) * 16)) >> 6) * 64)) + ((((int)threadIdx.x) / 6) * 64)) + (((k_0 * 32) + ((((int)threadIdx.x) % 6) * 16)) & 63)) + 4544));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 14336)) = (((1 <= (((((((int)threadIdx.x) >> 1) + 112) % 168) / 3) + ((((k_0 & 1) * 3) + (((((int)threadIdx.x) >> 1) + 1) % 3)) >> 1))) && ((((((((int)threadIdx.x) >> 1) + 112) % 168) / 3) + ((((k_0 & 1) * 3) + (((((int)threadIdx.x) >> 1) + 1) % 3)) >> 1)) < 57)) ? *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + ((((((int)threadIdx.x) * 16) + 14336) / 96) * 64)) + (((((k_0 & 1) * 96) + (((((int)threadIdx.x) * 16) + 32) % 96)) >> 6) * 64)) + (((k_0 * 32) + (((((int)threadIdx.x) * 16) + 32) % 96)) & 63)) - 3648)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 16384)) = *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + ((((((int)threadIdx.x) * 16) + 16384) / 96) * 64)) + (((((k_0 & 1) * 96) + (((((int)threadIdx.x) * 16) + 64) % 96)) >> 6) * 64)) + (((k_0 * 32) + (((((int)threadIdx.x) * 16) + 64) % 96)) & 63)) - 3648));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 18432)) = *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + (((((k_0 & 1) * 96) + ((((int)threadIdx.x) % 6) * 16)) >> 6) * 64)) + ((((int)threadIdx.x) / 6) * 64)) + (((k_0 * 32) + ((((int)threadIdx.x) % 6) * 16)) & 63)) + 8640));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 20480)) = (((1 <= (((((((int)threadIdx.x) >> 1) + 136) % 168) / 3) + ((((k_0 & 1) * 3) + (((((int)threadIdx.x) >> 1) + 1) % 3)) >> 1))) && ((((((((int)threadIdx.x) >> 1) + 136) % 168) / 3) + ((((k_0 & 1) * 3) + (((((int)threadIdx.x) >> 1) + 1) % 3)) >> 1)) < 57)) ? *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + ((((((int)threadIdx.x) * 16) + 20480) / 96) * 64)) + (((((k_0 & 1) * 96) + (((((int)threadIdx.x) * 16) + 32) % 96)) >> 6) * 64)) + (((k_0 * 32) + (((((int)threadIdx.x) * 16) + 32) % 96)) & 63)) - 3648)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 22528)) = *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + ((((((int)threadIdx.x) * 16) + 22528) / 96) * 64)) + (((((k_0 & 1) * 96) + (((((int)threadIdx.x) * 16) + 64) % 96)) >> 6) * 64)) + (((k_0 * 32) + (((((int)threadIdx.x) * 16) + 64) % 96)) & 63)) - 3648));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 24576)) = *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + (((((k_0 & 1) * 96) + ((((int)threadIdx.x) % 6) * 16)) >> 6) * 64)) + ((((int)threadIdx.x) / 6) * 64)) + (((k_0 * 32) + ((((int)threadIdx.x) % 6) * 16)) & 63)) + 12736));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 26624)) = (((1 <= (((((((int)threadIdx.x) >> 1) + 160) % 168) / 3) + ((((k_0 & 1) * 3) + (((((int)threadIdx.x) >> 1) + 1) % 3)) >> 1))) && ((((((((int)threadIdx.x) >> 1) + 160) % 168) / 3) + ((((k_0 & 1) * 3) + (((((int)threadIdx.x) >> 1) + 1) % 3)) >> 1)) < 57)) ? *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + ((((((int)threadIdx.x) * 16) + 26624) / 96) * 64)) + (((((k_0 & 1) * 96) + (((((int)threadIdx.x) * 16) + 32) % 96)) >> 6) * 64)) + (((k_0 * 32) + (((((int)threadIdx.x) * 16) + 32) % 96)) & 63)) - 3648)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 28672)) = *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + ((((((int)threadIdx.x) * 16) + 28672) / 96) * 64)) + (((((k_0 & 1) * 96) + (((((int)threadIdx.x) * 16) + 64) % 96)) >> 6) * 64)) + (((k_0 * 32) + (((((int)threadIdx.x) * 16) + 64) % 96)) & 63)) - 3648));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 30720)) = (((1 <= (((((k_0 & 1) * 3) + ((((int)threadIdx.x) % 6) >> 1)) >> 1) + (((((int)threadIdx.x) / 6) + 40) % 56))) && ((((((k_0 & 1) * 3) + ((((int)threadIdx.x) % 6) >> 1)) >> 1) + (((((int)threadIdx.x) / 6) + 40) % 56)) < 57)) ? *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + (((((k_0 & 1) * 96) + ((((int)threadIdx.x) % 6) * 16)) >> 6) * 64)) + ((((int)threadIdx.x) / 6) * 64)) + (((k_0 * 32) + ((((int)threadIdx.x) % 6) * 16)) & 63)) + 16832)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 32768)) = *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + ((((((int)threadIdx.x) * 16) + 32768) / 96) * 64)) + (((((k_0 & 1) * 96) + (((((int)threadIdx.x) * 16) + 32) % 96)) >> 6) * 64)) + (((k_0 * 32) + (((((int)threadIdx.x) * 16) + 32) % 96)) & 63)) - 3648));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 34816)) = *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + ((((((int)threadIdx.x) * 16) + 34816) / 96) * 64)) + (((((k_0 & 1) * 96) + (((((int)threadIdx.x) * 16) + 64) % 96)) >> 6) * 64)) + (((k_0 * 32) + (((((int)threadIdx.x) * 16) + 64) % 96)) & 63)) - 3648));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 36864)) = ((((1 <= (((((k_0 & 1) * 3) + ((((int)threadIdx.x) % 6) >> 1)) >> 1) + (((((int)threadIdx.x) / 6) + 48) % 56))) && (((((((int)blockIdx.x) % 7) * 8) + ((((int)threadIdx.x) + 2304) / 336)) + (k_0 >> 1)) < 57)) && ((((((k_0 & 1) * 3) + ((((int)threadIdx.x) % 6) >> 1)) >> 1) + (((((int)threadIdx.x) / 6) + 48) % 56)) < 57)) ? *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + (((((k_0 & 1) * 96) + ((((int)threadIdx.x) % 6) * 16)) >> 6) * 64)) + ((((int)threadIdx.x) / 6) * 64)) + (((k_0 * 32) + ((((int)threadIdx.x) % 6) * 16)) & 63)) + 20928)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 38912)) = ((((((((int)blockIdx.x) % 7) * 8) + ((((int)threadIdx.x) + 2432) / 336)) + (k_0 >> 1)) < 57) ? *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + ((((((int)threadIdx.x) * 16) + 38912) / 96) * 64)) + (((((k_0 & 1) * 96) + (((((int)threadIdx.x) * 16) + 32) % 96)) >> 6) * 64)) + (((k_0 * 32) + (((((int)threadIdx.x) * 16) + 32) % 96)) & 63)) - 3648)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 40960)) = (((((((((int)blockIdx.x) % 7) * 8) + ((((int)threadIdx.x) + 2560) / 336)) + (k_0 >> 1)) < 57) && (((((((int)threadIdx.x) >> 1) + 104) / 3) + ((((k_0 & 1) * 3) + (((((int)threadIdx.x) >> 1) + 2) % 3)) >> 1)) < 57)) ? *(int4*)(input + ((((((((int)blockIdx.x) * 28672) + ((k_0 >> 1) * 3584)) + ((((((int)threadIdx.x) * 16) + 40960) / 96) * 64)) + (((((k_0 & 1) * 96) + (((((int)threadIdx.x) * 16) + 64) % 96)) >> 6) * 64)) + (((k_0 * 32) + (((((int)threadIdx.x) * 16) + 64) % 96)) & 63)) - 3648)) : make_int4(0, 0, 0, 0));
    for (int ax0_ax1_fused_1 = 0; ax0_ax1_fused_1 < 16; ++ax0_ax1_fused_1) {
      B_decode_shared[((((int)threadIdx.x) * 16) + ax0_ax1_fused_1)] = ((weight[(((((((int)threadIdx.x) / 6) * 288) + (k_0 * 48)) + ((((int)threadIdx.x) % 6) * 8)) + (ax0_ax1_fused_1 >> 1))] >> ((signed char)((ax0_ax1_fused_1 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_1 = 0; ax0_ax1_fused_1_1 < 16; ++ax0_ax1_fused_1_1) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_1) + 2048)] = ((weight[(((((((int)threadIdx.x) + 128) / 6) * 288) + (k_0 * 48)) + ((((((int)threadIdx.x) * 8) + (ax0_ax1_fused_1_1 >> 1)) + 16) % 48))] >> ((signed char)((ax0_ax1_fused_1_1 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_2 = 0; ax0_ax1_fused_1_2 < 16; ++ax0_ax1_fused_1_2) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_2) + 4096)] = ((weight[(((((((int)threadIdx.x) + 256) / 6) * 288) + (k_0 * 48)) + ((((((int)threadIdx.x) * 8) + (ax0_ax1_fused_1_2 >> 1)) + 32) % 48))] >> ((signed char)((ax0_ax1_fused_1_2 & 1) * 4))) & (signed char)15);
    }
    __syncthreads();
    for (int k_1 = 0; k_1 < 96; ++k_1) {
      T_conv_local[0] = (T_conv_local[0] + (((int)data_shared[(((((int)threadIdx.x) >> 3) * 96) + k_1)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[28] = (T_conv_local[28] + (((int)data_shared[(((((int)threadIdx.x) >> 3) * 96) + k_1)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[56] = (T_conv_local[56] + (((int)data_shared[(((((int)threadIdx.x) >> 3) * 96) + k_1)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[84] = (T_conv_local[84] + (((int)data_shared[(((((int)threadIdx.x) >> 3) * 96) + k_1)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[112] = (T_conv_local[112] + (((int)data_shared[(((((int)threadIdx.x) >> 3) * 96) + k_1)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[140] = (T_conv_local[140] + (((int)data_shared[(((((int)threadIdx.x) >> 3) * 96) + k_1)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[168] = (T_conv_local[168] + (((int)data_shared[(((((int)threadIdx.x) >> 3) * 96) + k_1)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[196] = (T_conv_local[196] + (((int)data_shared[(((((int)threadIdx.x) >> 3) * 96) + k_1)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[1] = (T_conv_local[1] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 1536)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[29] = (T_conv_local[29] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 1536)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[57] = (T_conv_local[57] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 1536)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[85] = (T_conv_local[85] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 1536)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[113] = (T_conv_local[113] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 1536)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[141] = (T_conv_local[141] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 1536)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[169] = (T_conv_local[169] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 1536)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[197] = (T_conv_local[197] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 1536)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[2] = (T_conv_local[2] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 3072)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[30] = (T_conv_local[30] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 3072)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[58] = (T_conv_local[58] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 3072)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[86] = (T_conv_local[86] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 3072)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[114] = (T_conv_local[114] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 3072)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[142] = (T_conv_local[142] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 3072)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[170] = (T_conv_local[170] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 3072)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[198] = (T_conv_local[198] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 3072)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[3] = (T_conv_local[3] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 4608)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[31] = (T_conv_local[31] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 4608)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[59] = (T_conv_local[59] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 4608)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[87] = (T_conv_local[87] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 4608)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[115] = (T_conv_local[115] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 4608)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[143] = (T_conv_local[143] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 4608)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[171] = (T_conv_local[171] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 4608)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[199] = (T_conv_local[199] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 4608)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[4] = (T_conv_local[4] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 6144)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[32] = (T_conv_local[32] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 6144)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[60] = (T_conv_local[60] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 6144)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[88] = (T_conv_local[88] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 6144)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[116] = (T_conv_local[116] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 6144)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[144] = (T_conv_local[144] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 6144)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[172] = (T_conv_local[172] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 6144)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[200] = (T_conv_local[200] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 6144)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[5] = (T_conv_local[5] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 7680)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[33] = (T_conv_local[33] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 7680)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[61] = (T_conv_local[61] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 7680)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[89] = (T_conv_local[89] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 7680)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[117] = (T_conv_local[117] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 7680)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[145] = (T_conv_local[145] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 7680)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[173] = (T_conv_local[173] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 7680)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[201] = (T_conv_local[201] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 7680)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[6] = (T_conv_local[6] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 9216)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[34] = (T_conv_local[34] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 9216)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[62] = (T_conv_local[62] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 9216)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[90] = (T_conv_local[90] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 9216)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[118] = (T_conv_local[118] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 9216)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[146] = (T_conv_local[146] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 9216)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[174] = (T_conv_local[174] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 9216)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[202] = (T_conv_local[202] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 9216)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[7] = (T_conv_local[7] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 10752)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[35] = (T_conv_local[35] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 10752)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[63] = (T_conv_local[63] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 10752)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[91] = (T_conv_local[91] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 10752)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[119] = (T_conv_local[119] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 10752)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[147] = (T_conv_local[147] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 10752)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[175] = (T_conv_local[175] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 10752)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[203] = (T_conv_local[203] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 10752)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[8] = (T_conv_local[8] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 12288)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[36] = (T_conv_local[36] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 12288)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[64] = (T_conv_local[64] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 12288)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[92] = (T_conv_local[92] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 12288)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[120] = (T_conv_local[120] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 12288)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[148] = (T_conv_local[148] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 12288)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[176] = (T_conv_local[176] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 12288)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[204] = (T_conv_local[204] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 12288)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[9] = (T_conv_local[9] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 13824)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[37] = (T_conv_local[37] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 13824)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[65] = (T_conv_local[65] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 13824)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[93] = (T_conv_local[93] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 13824)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[121] = (T_conv_local[121] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 13824)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[149] = (T_conv_local[149] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 13824)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[177] = (T_conv_local[177] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 13824)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[205] = (T_conv_local[205] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 13824)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[10] = (T_conv_local[10] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 15360)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[38] = (T_conv_local[38] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 15360)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[66] = (T_conv_local[66] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 15360)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[94] = (T_conv_local[94] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 15360)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[122] = (T_conv_local[122] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 15360)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[150] = (T_conv_local[150] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 15360)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[178] = (T_conv_local[178] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 15360)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[206] = (T_conv_local[206] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 15360)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[11] = (T_conv_local[11] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 16896)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[39] = (T_conv_local[39] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 16896)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[67] = (T_conv_local[67] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 16896)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[95] = (T_conv_local[95] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 16896)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[123] = (T_conv_local[123] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 16896)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[151] = (T_conv_local[151] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 16896)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[179] = (T_conv_local[179] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 16896)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[207] = (T_conv_local[207] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 16896)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[12] = (T_conv_local[12] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 18432)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[40] = (T_conv_local[40] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 18432)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[68] = (T_conv_local[68] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 18432)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[96] = (T_conv_local[96] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 18432)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[124] = (T_conv_local[124] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 18432)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[152] = (T_conv_local[152] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 18432)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[180] = (T_conv_local[180] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 18432)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[208] = (T_conv_local[208] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 18432)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[13] = (T_conv_local[13] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 19968)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[41] = (T_conv_local[41] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 19968)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[69] = (T_conv_local[69] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 19968)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[97] = (T_conv_local[97] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 19968)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[125] = (T_conv_local[125] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 19968)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[153] = (T_conv_local[153] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 19968)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[181] = (T_conv_local[181] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 19968)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[209] = (T_conv_local[209] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 19968)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[14] = (T_conv_local[14] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 21504)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[42] = (T_conv_local[42] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 21504)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[70] = (T_conv_local[70] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 21504)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[98] = (T_conv_local[98] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 21504)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[126] = (T_conv_local[126] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 21504)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[154] = (T_conv_local[154] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 21504)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[182] = (T_conv_local[182] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 21504)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[210] = (T_conv_local[210] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 21504)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[15] = (T_conv_local[15] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 23040)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[43] = (T_conv_local[43] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 23040)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[71] = (T_conv_local[71] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 23040)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[99] = (T_conv_local[99] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 23040)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[127] = (T_conv_local[127] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 23040)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[155] = (T_conv_local[155] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 23040)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[183] = (T_conv_local[183] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 23040)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[211] = (T_conv_local[211] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 23040)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[16] = (T_conv_local[16] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 24576)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[44] = (T_conv_local[44] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 24576)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[72] = (T_conv_local[72] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 24576)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[100] = (T_conv_local[100] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 24576)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[128] = (T_conv_local[128] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 24576)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[156] = (T_conv_local[156] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 24576)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[184] = (T_conv_local[184] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 24576)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[212] = (T_conv_local[212] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 24576)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[17] = (T_conv_local[17] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 26112)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[45] = (T_conv_local[45] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 26112)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[73] = (T_conv_local[73] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 26112)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[101] = (T_conv_local[101] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 26112)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[129] = (T_conv_local[129] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 26112)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[157] = (T_conv_local[157] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 26112)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[185] = (T_conv_local[185] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 26112)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[213] = (T_conv_local[213] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 26112)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[18] = (T_conv_local[18] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 27648)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[46] = (T_conv_local[46] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 27648)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[74] = (T_conv_local[74] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 27648)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[102] = (T_conv_local[102] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 27648)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[130] = (T_conv_local[130] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 27648)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[158] = (T_conv_local[158] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 27648)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[186] = (T_conv_local[186] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 27648)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[214] = (T_conv_local[214] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 27648)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[19] = (T_conv_local[19] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 29184)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[47] = (T_conv_local[47] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 29184)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[75] = (T_conv_local[75] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 29184)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[103] = (T_conv_local[103] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 29184)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[131] = (T_conv_local[131] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 29184)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[159] = (T_conv_local[159] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 29184)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[187] = (T_conv_local[187] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 29184)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[215] = (T_conv_local[215] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 29184)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[20] = (T_conv_local[20] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 30720)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[48] = (T_conv_local[48] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 30720)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[76] = (T_conv_local[76] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 30720)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[104] = (T_conv_local[104] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 30720)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[132] = (T_conv_local[132] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 30720)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[160] = (T_conv_local[160] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 30720)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[188] = (T_conv_local[188] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 30720)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[216] = (T_conv_local[216] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 30720)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[21] = (T_conv_local[21] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 32256)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[49] = (T_conv_local[49] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 32256)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[77] = (T_conv_local[77] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 32256)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[105] = (T_conv_local[105] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 32256)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[133] = (T_conv_local[133] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 32256)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[161] = (T_conv_local[161] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 32256)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[189] = (T_conv_local[189] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 32256)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[217] = (T_conv_local[217] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 32256)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[22] = (T_conv_local[22] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 33792)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[50] = (T_conv_local[50] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 33792)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[78] = (T_conv_local[78] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 33792)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[106] = (T_conv_local[106] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 33792)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[134] = (T_conv_local[134] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 33792)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[162] = (T_conv_local[162] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 33792)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[190] = (T_conv_local[190] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 33792)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[218] = (T_conv_local[218] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 33792)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[23] = (T_conv_local[23] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 35328)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[51] = (T_conv_local[51] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 35328)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[79] = (T_conv_local[79] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 35328)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[107] = (T_conv_local[107] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 35328)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[135] = (T_conv_local[135] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 35328)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[163] = (T_conv_local[163] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 35328)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[191] = (T_conv_local[191] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 35328)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[219] = (T_conv_local[219] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 35328)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[24] = (T_conv_local[24] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 36864)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[52] = (T_conv_local[52] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 36864)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[80] = (T_conv_local[80] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 36864)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[108] = (T_conv_local[108] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 36864)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[136] = (T_conv_local[136] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 36864)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[164] = (T_conv_local[164] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 36864)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[192] = (T_conv_local[192] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 36864)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[220] = (T_conv_local[220] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 36864)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[25] = (T_conv_local[25] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 38400)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[53] = (T_conv_local[53] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 38400)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[81] = (T_conv_local[81] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 38400)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[109] = (T_conv_local[109] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 38400)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[137] = (T_conv_local[137] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 38400)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[165] = (T_conv_local[165] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 38400)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[193] = (T_conv_local[193] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 38400)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[221] = (T_conv_local[221] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 38400)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[26] = (T_conv_local[26] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 39936)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[54] = (T_conv_local[54] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 39936)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[82] = (T_conv_local[82] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 39936)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[110] = (T_conv_local[110] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 39936)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[138] = (T_conv_local[138] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 39936)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[166] = (T_conv_local[166] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 39936)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[194] = (T_conv_local[194] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 39936)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[222] = (T_conv_local[222] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 39936)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
      T_conv_local[27] = (T_conv_local[27] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 41472)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 96) + k_1)])));
      T_conv_local[55] = (T_conv_local[55] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 41472)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 768)])));
      T_conv_local[83] = (T_conv_local[83] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 41472)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 1536)])));
      T_conv_local[111] = (T_conv_local[111] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 41472)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 2304)])));
      T_conv_local[139] = (T_conv_local[139] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 41472)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3072)])));
      T_conv_local[167] = (T_conv_local[167] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 41472)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 3840)])));
      T_conv_local[195] = (T_conv_local[195] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 41472)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 4608)])));
      T_conv_local[223] = (T_conv_local[223] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 96) + k_1) + 41472)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 7) * 96) + k_1) + 5376)])));
    }
  }
  T_conv[(((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7))] = T_conv_local[0];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 8)] = T_conv_local[28];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 16)] = T_conv_local[56];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 24)] = T_conv_local[84];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 32)] = T_conv_local[112];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 40)] = T_conv_local[140];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 48)] = T_conv_local[168];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 56)] = T_conv_local[196];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 1024)] = T_conv_local[1];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 1032)] = T_conv_local[29];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 1040)] = T_conv_local[57];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 1048)] = T_conv_local[85];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 1056)] = T_conv_local[113];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 1064)] = T_conv_local[141];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 1072)] = T_conv_local[169];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 1080)] = T_conv_local[197];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 2048)] = T_conv_local[2];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 2056)] = T_conv_local[30];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 2064)] = T_conv_local[58];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 2072)] = T_conv_local[86];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 2080)] = T_conv_local[114];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 2088)] = T_conv_local[142];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 2096)] = T_conv_local[170];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 2104)] = T_conv_local[198];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 3072)] = T_conv_local[3];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 3080)] = T_conv_local[31];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 3088)] = T_conv_local[59];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 3096)] = T_conv_local[87];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 3104)] = T_conv_local[115];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 3112)] = T_conv_local[143];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 3120)] = T_conv_local[171];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 3128)] = T_conv_local[199];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 4096)] = T_conv_local[4];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 4104)] = T_conv_local[32];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 4112)] = T_conv_local[60];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 4120)] = T_conv_local[88];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 4128)] = T_conv_local[116];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 4136)] = T_conv_local[144];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 4144)] = T_conv_local[172];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 4152)] = T_conv_local[200];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 5120)] = T_conv_local[5];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 5128)] = T_conv_local[33];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 5136)] = T_conv_local[61];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 5144)] = T_conv_local[89];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 5152)] = T_conv_local[117];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 5160)] = T_conv_local[145];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 5168)] = T_conv_local[173];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 5176)] = T_conv_local[201];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 6144)] = T_conv_local[6];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 6152)] = T_conv_local[34];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 6160)] = T_conv_local[62];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 6168)] = T_conv_local[90];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 6176)] = T_conv_local[118];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 6184)] = T_conv_local[146];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 6192)] = T_conv_local[174];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 6200)] = T_conv_local[202];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 7168)] = T_conv_local[7];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 7176)] = T_conv_local[35];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 7184)] = T_conv_local[63];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 7192)] = T_conv_local[91];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 7200)] = T_conv_local[119];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 7208)] = T_conv_local[147];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 7216)] = T_conv_local[175];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 7224)] = T_conv_local[203];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 8192)] = T_conv_local[8];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 8200)] = T_conv_local[36];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 8208)] = T_conv_local[64];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 8216)] = T_conv_local[92];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 8224)] = T_conv_local[120];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 8232)] = T_conv_local[148];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 8240)] = T_conv_local[176];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 8248)] = T_conv_local[204];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 9216)] = T_conv_local[9];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 9224)] = T_conv_local[37];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 9232)] = T_conv_local[65];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 9240)] = T_conv_local[93];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 9248)] = T_conv_local[121];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 9256)] = T_conv_local[149];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 9264)] = T_conv_local[177];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 9272)] = T_conv_local[205];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 10240)] = T_conv_local[10];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 10248)] = T_conv_local[38];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 10256)] = T_conv_local[66];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 10264)] = T_conv_local[94];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 10272)] = T_conv_local[122];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 10280)] = T_conv_local[150];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 10288)] = T_conv_local[178];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 10296)] = T_conv_local[206];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 11264)] = T_conv_local[11];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 11272)] = T_conv_local[39];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 11280)] = T_conv_local[67];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 11288)] = T_conv_local[95];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 11296)] = T_conv_local[123];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 11304)] = T_conv_local[151];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 11312)] = T_conv_local[179];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 11320)] = T_conv_local[207];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 12288)] = T_conv_local[12];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 12296)] = T_conv_local[40];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 12304)] = T_conv_local[68];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 12312)] = T_conv_local[96];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 12320)] = T_conv_local[124];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 12328)] = T_conv_local[152];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 12336)] = T_conv_local[180];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 12344)] = T_conv_local[208];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 13312)] = T_conv_local[13];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 13320)] = T_conv_local[41];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 13328)] = T_conv_local[69];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 13336)] = T_conv_local[97];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 13344)] = T_conv_local[125];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 13352)] = T_conv_local[153];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 13360)] = T_conv_local[181];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 13368)] = T_conv_local[209];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 14336)] = T_conv_local[14];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 14344)] = T_conv_local[42];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 14352)] = T_conv_local[70];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 14360)] = T_conv_local[98];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 14368)] = T_conv_local[126];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 14376)] = T_conv_local[154];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 14384)] = T_conv_local[182];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 14392)] = T_conv_local[210];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 15360)] = T_conv_local[15];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 15368)] = T_conv_local[43];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 15376)] = T_conv_local[71];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 15384)] = T_conv_local[99];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 15392)] = T_conv_local[127];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 15400)] = T_conv_local[155];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 15408)] = T_conv_local[183];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 15416)] = T_conv_local[211];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 16384)] = T_conv_local[16];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 16392)] = T_conv_local[44];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 16400)] = T_conv_local[72];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 16408)] = T_conv_local[100];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 16416)] = T_conv_local[128];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 16424)] = T_conv_local[156];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 16432)] = T_conv_local[184];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 16440)] = T_conv_local[212];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 17408)] = T_conv_local[17];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 17416)] = T_conv_local[45];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 17424)] = T_conv_local[73];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 17432)] = T_conv_local[101];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 17440)] = T_conv_local[129];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 17448)] = T_conv_local[157];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 17456)] = T_conv_local[185];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 17464)] = T_conv_local[213];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 18432)] = T_conv_local[18];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 18440)] = T_conv_local[46];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 18448)] = T_conv_local[74];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 18456)] = T_conv_local[102];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 18464)] = T_conv_local[130];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 18472)] = T_conv_local[158];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 18480)] = T_conv_local[186];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 18488)] = T_conv_local[214];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 19456)] = T_conv_local[19];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 19464)] = T_conv_local[47];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 19472)] = T_conv_local[75];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 19480)] = T_conv_local[103];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 19488)] = T_conv_local[131];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 19496)] = T_conv_local[159];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 19504)] = T_conv_local[187];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 19512)] = T_conv_local[215];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 20480)] = T_conv_local[20];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 20488)] = T_conv_local[48];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 20496)] = T_conv_local[76];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 20504)] = T_conv_local[104];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 20512)] = T_conv_local[132];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 20520)] = T_conv_local[160];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 20528)] = T_conv_local[188];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 20536)] = T_conv_local[216];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 21504)] = T_conv_local[21];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 21512)] = T_conv_local[49];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 21520)] = T_conv_local[77];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 21528)] = T_conv_local[105];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 21536)] = T_conv_local[133];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 21544)] = T_conv_local[161];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 21552)] = T_conv_local[189];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 21560)] = T_conv_local[217];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 22528)] = T_conv_local[22];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 22536)] = T_conv_local[50];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 22544)] = T_conv_local[78];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 22552)] = T_conv_local[106];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 22560)] = T_conv_local[134];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 22568)] = T_conv_local[162];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 22576)] = T_conv_local[190];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 22584)] = T_conv_local[218];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 23552)] = T_conv_local[23];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 23560)] = T_conv_local[51];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 23568)] = T_conv_local[79];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 23576)] = T_conv_local[107];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 23584)] = T_conv_local[135];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 23592)] = T_conv_local[163];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 23600)] = T_conv_local[191];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 23608)] = T_conv_local[219];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 24576)] = T_conv_local[24];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 24584)] = T_conv_local[52];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 24592)] = T_conv_local[80];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 24600)] = T_conv_local[108];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 24608)] = T_conv_local[136];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 24616)] = T_conv_local[164];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 24624)] = T_conv_local[192];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 24632)] = T_conv_local[220];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 25600)] = T_conv_local[25];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 25608)] = T_conv_local[53];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 25616)] = T_conv_local[81];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 25624)] = T_conv_local[109];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 25632)] = T_conv_local[137];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 25640)] = T_conv_local[165];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 25648)] = T_conv_local[193];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 25656)] = T_conv_local[221];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 26624)] = T_conv_local[26];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 26632)] = T_conv_local[54];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 26640)] = T_conv_local[82];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 26648)] = T_conv_local[110];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 26656)] = T_conv_local[138];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 26664)] = T_conv_local[166];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 26672)] = T_conv_local[194];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 26680)] = T_conv_local[222];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 27648)] = T_conv_local[27];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 27656)] = T_conv_local[55];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 27664)] = T_conv_local[83];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 27672)] = T_conv_local[111];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 27680)] = T_conv_local[139];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 27688)] = T_conv_local[167];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 27696)] = T_conv_local[195];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 3) * 64)) + (((int)threadIdx.x) & 7)) + 27704)] = T_conv_local[223];
}


top1: 5.738700866699219 	top10: 5.624422550201416
--------------------------------------------------------------------------------
best config: {<Node, ladder_conv2d_reshape_bias>: {'block': [224, 64], 'thread': [16, 8], 'rstep': [96], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
best latency: 5.624422550201416
4.7856475337696835 tflops, 3.300446575013575 %
n: 128, f: 64, h: 56, w: 56, c: 64, kh: 1, kw: 1, s: 1, d: 1, p: 0, oh: 56, ow: 56
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 64], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.42137598991394043
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 64], 'thread': [2, 64], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 16}}}
1.309440016746521
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 64], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
0.45311999320983887
{<Node, ladder_conv2d_reshape_bias>: {'block': [256, 32], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.41676798462867737
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 32], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.9727999567985535
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 32], 'thread': [4, 32], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 16}}}
1.36627197265625
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 32], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
1.1384832859039307
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 64], 'thread': [8, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
1.2929023504257202
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 32], 'thread': [14, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
1.307136058807373
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 64], 'thread': [7, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4}}}
1.8993152379989624
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 32], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
1.0872832536697388
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 64], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
1.3578239679336548
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 32], 'thread': [8, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
2.114121198654175
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 32], 'thread': [7, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4}}}
2.103910446166992
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 16], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
1.1081386804580688
{<Node, ladder_conv2d_reshape_bias>: {'block': [256, 16], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
1.087999939918518
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 64], 'thread': [8, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
2.6357760429382324
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 16], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 8}}}
1.5980252027511597
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 16], 'thread': [14, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
1.231257677078247
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 64], 'thread': [4, 32], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 16}}}
3.3841493129730225
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 32], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
1.5908571481704712
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 16], 'thread': [14, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
1.798997402191162
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 32], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
2.9432685375213623
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 16], 'thread': [8, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 8}}}
2.330770254135132
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 16], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
1.5594056844711304
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 32], 'thread': [4, 32], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 16}}}
4.122965335845947
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 16], 'thread': [7, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4}}}
3.0105600357055664
{<Node, ladder_conv2d_reshape_bias>: {'block': [448, 16], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
1.1356160640716553
{<Node, ladder_conv2d_reshape_bias>: {'block': [256, 64], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.3350527882575989
{<Node, ladder_conv2d_reshape_bias>: {'block': [392, 16], 'thread': [8, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 8}}}
1.2769279479980469
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 64], 'thread': [4, 32], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 16}}}
1.0176512002944946
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 64], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.3389440178871155
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 16], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
3.5500617027282715
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 8], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 4}}}
2.6795153617858887
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 16], 'thread': [14, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
4.097194671630859
{<Node, ladder_conv2d_reshape_bias>: {'block': [392, 32], 'thread': [8, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
0.40243202447891235
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 64], 'thread': [8, 16], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
5.057740688323975
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 16], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
2.44979190826416
{<Node, ladder_conv2d_reshape_bias>: {'block': [512, 32], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
0.3868671953678131
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 8], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 4}}}
2.89206862449646
code:  __global__ void __launch_bounds__(128) Fused(int8_t* __restrict__ input, int8_t* __restrict__ weight, int* __restrict__ T_conv) {
  
  int T_conv_local[7];
  __shared__ signed char data_shared[7168];
  __shared__ signed char B_decode_shared[512];
  T_conv_local[0] = 0;
  T_conv_local[1] = 0;
  T_conv_local[2] = 0;
  T_conv_local[3] = 0;
  T_conv_local[4] = 0;
  T_conv_local[5] = 0;
  T_conv_local[6] = 0;
  *(int2*)(data_shared + (((int)threadIdx.x) * 8)) = *(int2*)(input + (((((int)blockIdx.x) >> 3) * 7168) + (((int)threadIdx.x) * 8)));
  *(int2*)(data_shared + ((((int)threadIdx.x) * 8) + 1024)) = *(int2*)(input + ((((((int)blockIdx.x) >> 3) * 7168) + (((int)threadIdx.x) * 8)) + 1024));
  *(int2*)(data_shared + ((((int)threadIdx.x) * 8) + 2048)) = *(int2*)(input + ((((((int)blockIdx.x) >> 3) * 7168) + (((int)threadIdx.x) * 8)) + 2048));
  *(int2*)(data_shared + ((((int)threadIdx.x) * 8) + 3072)) = *(int2*)(input + ((((((int)blockIdx.x) >> 3) * 7168) + (((int)threadIdx.x) * 8)) + 3072));
  *(int2*)(data_shared + ((((int)threadIdx.x) * 8) + 4096)) = *(int2*)(input + ((((((int)blockIdx.x) >> 3) * 7168) + (((int)threadIdx.x) * 8)) + 4096));
  *(int2*)(data_shared + ((((int)threadIdx.x) * 8) + 5120)) = *(int2*)(input + ((((((int)blockIdx.x) >> 3) * 7168) + (((int)threadIdx.x) * 8)) + 5120));
  *(int2*)(data_shared + ((((int)threadIdx.x) * 8) + 6144)) = *(int2*)(input + ((((((int)blockIdx.x) >> 3) * 7168) + (((int)threadIdx.x) * 8)) + 6144));
  for (int ax0_ax1_fused_1outer = 0; ax0_ax1_fused_1outer < 2; ++ax0_ax1_fused_1outer) {
    char2 __1;
      char2 __2;
        int2 __3 = make_int2(((((((int)blockIdx.x) & 7) * 256) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_1outer), ((((((int)blockIdx.x) & 7) * 256) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_1outer));
        char2 __4 = make_char2(weight[__3.x],weight[__3.y]);
        char2 __5 = make_char2(((signed char)0)+((signed char)4*0), ((signed char)0)+((signed char)4*1));
        __2.x=((__4.x >> __5.x));
        __2.y=((__4.y >> __5.y));
      char2 __6 = make_char2((signed char)15, (signed char)15);
      __1.x=((__2.x & __6.x));
      __1.y=((__2.y & __6.y));
    *(char2*)(B_decode_shared + ((((int)threadIdx.x) * 4) + (ax0_ax1_fused_1outer * 2))) = __1;
  }
  __syncthreads();
  for (int k_1 = 0; k_1 < 64; ++k_1) {
    T_conv_local[0] = (T_conv_local[0] + (((int)data_shared[(((((int)threadIdx.x) >> 3) * 64) + k_1)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 64) + k_1)])));
    T_conv_local[1] = (T_conv_local[1] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 1024)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 64) + k_1)])));
    T_conv_local[2] = (T_conv_local[2] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 2048)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 64) + k_1)])));
    T_conv_local[3] = (T_conv_local[3] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 3072)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 64) + k_1)])));
    T_conv_local[4] = (T_conv_local[4] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 4096)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 64) + k_1)])));
    T_conv_local[5] = (T_conv_local[5] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 5120)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 64) + k_1)])));
    T_conv_local[6] = (T_conv_local[6] + (((int)data_shared[((((((int)threadIdx.x) >> 3) * 64) + k_1) + 6144)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 7) * 64) + k_1)])));
  }
  T_conv[(((((((int)blockIdx.x) >> 3) * 7168) + ((((int)threadIdx.x) >> 3) * 64)) + ((((int)blockIdx.x) & 7) * 8)) + (((int)threadIdx.x) & 7))] = T_conv_local[0];
  T_conv[((((((((int)blockIdx.x) >> 3) * 7168) + ((((int)threadIdx.x) >> 3) * 64)) + ((((int)blockIdx.x) & 7) * 8)) + (((int)threadIdx.x) & 7)) + 1024)] = T_conv_local[1];
  T_conv[((((((((int)blockIdx.x) >> 3) * 7168) + ((((int)threadIdx.x) >> 3) * 64)) + ((((int)blockIdx.x) & 7) * 8)) + (((int)threadIdx.x) & 7)) + 2048)] = T_conv_local[2];
  T_conv[((((((((int)blockIdx.x) >> 3) * 7168) + ((((int)threadIdx.x) >> 3) * 64)) + ((((int)blockIdx.x) & 7) * 8)) + (((int)threadIdx.x) & 7)) + 3072)] = T_conv_local[3];
  T_conv[((((((((int)blockIdx.x) >> 3) * 7168) + ((((int)threadIdx.x) >> 3) * 64)) + ((((int)blockIdx.x) & 7) * 8)) + (((int)threadIdx.x) & 7)) + 4096)] = T_conv_local[4];
  T_conv[((((((((int)blockIdx.x) >> 3) * 7168) + ((((int)threadIdx.x) >> 3) * 64)) + ((((int)blockIdx.x) & 7) * 8)) + (((int)threadIdx.x) & 7)) + 5120)] = T_conv_local[5];
  T_conv[((((((((int)blockIdx.x) >> 3) * 7168) + ((((int)threadIdx.x) >> 3) * 64)) + ((((int)blockIdx.x) & 7) * 8)) + (((int)threadIdx.x) & 7)) + 6144)] = T_conv_local[6];
}


top1: 0.42137598991394043 	top10: 0.3350527882575989
--------------------------------------------------------------------------------
best config: {<Node, ladder_conv2d_reshape_bias>: {'block': [256, 64], 'thread': [16, 8], 'rstep': [64], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
best latency: 0.3350527882575989
8.926123766356007 tflops, 6.155947425073108 %
n: 128, f: 128, h: 28, w: 28, c: 128, kh: 3, kw: 3, s: 1, d: 1, p: 1, oh: 28, ow: 28
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 64], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
7.471917152404785
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 64], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
8.250988960266113
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 32], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
9.775308609008789
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 32], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
7.060685157775879
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 64], 'thread': [2, 64], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 16}}}
8.067686080932617
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 32], 'thread': [4, 32], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
7.860838413238525
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 32], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
9.352602005004883
{<Node, ladder_conv2d_reshape_bias>: {'block': [256, 64], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
4.844339370727539
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 32], 'thread': [14, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
10.507673263549805
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 128], 'thread': [4, 32], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
10.926488876342773
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 64], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
5.385420799255371
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 16], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
11.102413177490234
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 16], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
13.138943672180176
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 64], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
11.398758888244629
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 64], 'thread': [4, 32], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
5.8402814865112305
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 16], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
13.758872985839844
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 128], 'thread': [4, 32], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
12.800204277038574
{<Node, ladder_conv2d_reshape_bias>: {'block': [256, 32], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
6.712319850921631
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 16], 'thread': [14, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
11.532902717590332
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 128], 'thread': [4, 32], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
6.95767068862915
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 64], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
12.60154914855957
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 16], 'thread': [14, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
14.307327270507812
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 32], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
13.446144104003906
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 128], 'thread': [1, 128], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 16}}}
8.232549667358398
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 64], 'thread': [7, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
13.545473098754883
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 32], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
14.650163650512695
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 128], 'thread': [4, 32], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
7.387750148773193
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 32], 'thread': [7, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
15.757311820983887
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 128], 'thread': [2, 64], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 16}}}
5.680742263793945
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 8], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
21.467750549316406
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 8], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
22.05265998840332
{<Node, ladder_conv2d_reshape_bias>: {'block': [256, 16], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
11.127808570861816
{<Node, ladder_conv2d_reshape_bias>: {'block': [256, 128], 'thread': [4, 32], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
7.528243064880371
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 8], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 8}}}
19.695615768432617
{<Node, ladder_conv2d_reshape_bias>: {'block': [392, 64], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
100000000.0
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 16], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
17.492992401123047
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 16], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
18.820301055908203
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 8], 'thread': [14, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
20.136754989624023
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 128], 'thread': [4, 32], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
19.087974548339844
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 128], 'thread': [4, 32], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
6.017228603363037
code:  __global__ void __launch_bounds__(128) Fused(int8_t* __restrict__ input, int8_t* __restrict__ weight, int* __restrict__ T_conv) {
  
  int T_conv_local[224];
  __shared__ signed char data_shared[28672];
  __shared__ signed char B_decode_shared[16384];
  T_conv_local[0] = 0;
  T_conv_local[56] = 0;
  T_conv_local[112] = 0;
  T_conv_local[168] = 0;
  T_conv_local[1] = 0;
  T_conv_local[57] = 0;
  T_conv_local[113] = 0;
  T_conv_local[169] = 0;
  T_conv_local[2] = 0;
  T_conv_local[58] = 0;
  T_conv_local[114] = 0;
  T_conv_local[170] = 0;
  T_conv_local[3] = 0;
  T_conv_local[59] = 0;
  T_conv_local[115] = 0;
  T_conv_local[171] = 0;
  T_conv_local[4] = 0;
  T_conv_local[60] = 0;
  T_conv_local[116] = 0;
  T_conv_local[172] = 0;
  T_conv_local[5] = 0;
  T_conv_local[61] = 0;
  T_conv_local[117] = 0;
  T_conv_local[173] = 0;
  T_conv_local[6] = 0;
  T_conv_local[62] = 0;
  T_conv_local[118] = 0;
  T_conv_local[174] = 0;
  T_conv_local[7] = 0;
  T_conv_local[63] = 0;
  T_conv_local[119] = 0;
  T_conv_local[175] = 0;
  T_conv_local[8] = 0;
  T_conv_local[64] = 0;
  T_conv_local[120] = 0;
  T_conv_local[176] = 0;
  T_conv_local[9] = 0;
  T_conv_local[65] = 0;
  T_conv_local[121] = 0;
  T_conv_local[177] = 0;
  T_conv_local[10] = 0;
  T_conv_local[66] = 0;
  T_conv_local[122] = 0;
  T_conv_local[178] = 0;
  T_conv_local[11] = 0;
  T_conv_local[67] = 0;
  T_conv_local[123] = 0;
  T_conv_local[179] = 0;
  T_conv_local[12] = 0;
  T_conv_local[68] = 0;
  T_conv_local[124] = 0;
  T_conv_local[180] = 0;
  T_conv_local[13] = 0;
  T_conv_local[69] = 0;
  T_conv_local[125] = 0;
  T_conv_local[181] = 0;
  T_conv_local[14] = 0;
  T_conv_local[70] = 0;
  T_conv_local[126] = 0;
  T_conv_local[182] = 0;
  T_conv_local[15] = 0;
  T_conv_local[71] = 0;
  T_conv_local[127] = 0;
  T_conv_local[183] = 0;
  T_conv_local[16] = 0;
  T_conv_local[72] = 0;
  T_conv_local[128] = 0;
  T_conv_local[184] = 0;
  T_conv_local[17] = 0;
  T_conv_local[73] = 0;
  T_conv_local[129] = 0;
  T_conv_local[185] = 0;
  T_conv_local[18] = 0;
  T_conv_local[74] = 0;
  T_conv_local[130] = 0;
  T_conv_local[186] = 0;
  T_conv_local[19] = 0;
  T_conv_local[75] = 0;
  T_conv_local[131] = 0;
  T_conv_local[187] = 0;
  T_conv_local[20] = 0;
  T_conv_local[76] = 0;
  T_conv_local[132] = 0;
  T_conv_local[188] = 0;
  T_conv_local[21] = 0;
  T_conv_local[77] = 0;
  T_conv_local[133] = 0;
  T_conv_local[189] = 0;
  T_conv_local[22] = 0;
  T_conv_local[78] = 0;
  T_conv_local[134] = 0;
  T_conv_local[190] = 0;
  T_conv_local[23] = 0;
  T_conv_local[79] = 0;
  T_conv_local[135] = 0;
  T_conv_local[191] = 0;
  T_conv_local[24] = 0;
  T_conv_local[80] = 0;
  T_conv_local[136] = 0;
  T_conv_local[192] = 0;
  T_conv_local[25] = 0;
  T_conv_local[81] = 0;
  T_conv_local[137] = 0;
  T_conv_local[193] = 0;
  T_conv_local[26] = 0;
  T_conv_local[82] = 0;
  T_conv_local[138] = 0;
  T_conv_local[194] = 0;
  T_conv_local[27] = 0;
  T_conv_local[83] = 0;
  T_conv_local[139] = 0;
  T_conv_local[195] = 0;
  T_conv_local[28] = 0;
  T_conv_local[84] = 0;
  T_conv_local[140] = 0;
  T_conv_local[196] = 0;
  T_conv_local[29] = 0;
  T_conv_local[85] = 0;
  T_conv_local[141] = 0;
  T_conv_local[197] = 0;
  T_conv_local[30] = 0;
  T_conv_local[86] = 0;
  T_conv_local[142] = 0;
  T_conv_local[198] = 0;
  T_conv_local[31] = 0;
  T_conv_local[87] = 0;
  T_conv_local[143] = 0;
  T_conv_local[199] = 0;
  T_conv_local[32] = 0;
  T_conv_local[88] = 0;
  T_conv_local[144] = 0;
  T_conv_local[200] = 0;
  T_conv_local[33] = 0;
  T_conv_local[89] = 0;
  T_conv_local[145] = 0;
  T_conv_local[201] = 0;
  T_conv_local[34] = 0;
  T_conv_local[90] = 0;
  T_conv_local[146] = 0;
  T_conv_local[202] = 0;
  T_conv_local[35] = 0;
  T_conv_local[91] = 0;
  T_conv_local[147] = 0;
  T_conv_local[203] = 0;
  T_conv_local[36] = 0;
  T_conv_local[92] = 0;
  T_conv_local[148] = 0;
  T_conv_local[204] = 0;
  T_conv_local[37] = 0;
  T_conv_local[93] = 0;
  T_conv_local[149] = 0;
  T_conv_local[205] = 0;
  T_conv_local[38] = 0;
  T_conv_local[94] = 0;
  T_conv_local[150] = 0;
  T_conv_local[206] = 0;
  T_conv_local[39] = 0;
  T_conv_local[95] = 0;
  T_conv_local[151] = 0;
  T_conv_local[207] = 0;
  T_conv_local[40] = 0;
  T_conv_local[96] = 0;
  T_conv_local[152] = 0;
  T_conv_local[208] = 0;
  T_conv_local[41] = 0;
  T_conv_local[97] = 0;
  T_conv_local[153] = 0;
  T_conv_local[209] = 0;
  T_conv_local[42] = 0;
  T_conv_local[98] = 0;
  T_conv_local[154] = 0;
  T_conv_local[210] = 0;
  T_conv_local[43] = 0;
  T_conv_local[99] = 0;
  T_conv_local[155] = 0;
  T_conv_local[211] = 0;
  T_conv_local[44] = 0;
  T_conv_local[100] = 0;
  T_conv_local[156] = 0;
  T_conv_local[212] = 0;
  T_conv_local[45] = 0;
  T_conv_local[101] = 0;
  T_conv_local[157] = 0;
  T_conv_local[213] = 0;
  T_conv_local[46] = 0;
  T_conv_local[102] = 0;
  T_conv_local[158] = 0;
  T_conv_local[214] = 0;
  T_conv_local[47] = 0;
  T_conv_local[103] = 0;
  T_conv_local[159] = 0;
  T_conv_local[215] = 0;
  T_conv_local[48] = 0;
  T_conv_local[104] = 0;
  T_conv_local[160] = 0;
  T_conv_local[216] = 0;
  T_conv_local[49] = 0;
  T_conv_local[105] = 0;
  T_conv_local[161] = 0;
  T_conv_local[217] = 0;
  T_conv_local[50] = 0;
  T_conv_local[106] = 0;
  T_conv_local[162] = 0;
  T_conv_local[218] = 0;
  T_conv_local[51] = 0;
  T_conv_local[107] = 0;
  T_conv_local[163] = 0;
  T_conv_local[219] = 0;
  T_conv_local[52] = 0;
  T_conv_local[108] = 0;
  T_conv_local[164] = 0;
  T_conv_local[220] = 0;
  T_conv_local[53] = 0;
  T_conv_local[109] = 0;
  T_conv_local[165] = 0;
  T_conv_local[221] = 0;
  T_conv_local[54] = 0;
  T_conv_local[110] = 0;
  T_conv_local[166] = 0;
  T_conv_local[222] = 0;
  T_conv_local[55] = 0;
  T_conv_local[111] = 0;
  T_conv_local[167] = 0;
  T_conv_local[223] = 0;
  for (int k_0 = 0; k_0 < 9; ++k_0) {
    __syncthreads();
    *(int4*)(data_shared + (((int)threadIdx.x) * 16)) = ((((1 <= ((k_0 / 3) + ((((int)blockIdx.x) * 8) % 28))) && (1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3)))) && (((k_0 / 3) + ((((int)blockIdx.x) * 8) % 28)) < 29)) ? *(int4*)(input + (((((((int)blockIdx.x) * 28672) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) - 3712)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 2048)) = (((((1 <= ((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 128) / 224)) % 28))) && (1 <= ((((((int)threadIdx.x) >> 3) + 16) % 28) + (k_0 % 3)))) && (((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 128) / 224)) % 28)) < 29)) && (((((((int)threadIdx.x) >> 3) + 16) % 28) + (k_0 % 3)) < 29)) ? *(int4*)(input + (((((((int)blockIdx.x) * 28672) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) - 1664)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 4096)) = (((1 <= ((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 256) / 224)) % 28))) && (((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 256) / 224)) % 28)) < 29)) ? *(int4*)(input + (((((((int)blockIdx.x) * 28672) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 384)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 6144)) = (((((1 <= ((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 384) / 224)) % 28))) && (1 <= ((((((int)threadIdx.x) >> 3) + 20) % 28) + (k_0 % 3)))) && (((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 384) / 224)) % 28)) < 29)) && (((((((int)threadIdx.x) >> 3) + 20) % 28) + (k_0 % 3)) < 29)) ? *(int4*)(input + (((((((int)blockIdx.x) * 28672) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 2432)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 8192)) = (((1 <= ((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 512) / 224)) % 28))) && (((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 512) / 224)) % 28)) < 29)) ? *(int4*)(input + (((((((int)blockIdx.x) * 28672) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 4480)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 10240)) = (((((1 <= ((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 640) / 224)) % 28))) && (1 <= ((((((int)threadIdx.x) >> 3) + 24) % 28) + (k_0 % 3)))) && (((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 640) / 224)) % 28)) < 29)) && (((((((int)threadIdx.x) >> 3) + 24) % 28) + (k_0 % 3)) < 29)) ? *(int4*)(input + (((((((int)blockIdx.x) * 28672) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 6528)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 12288)) = ((((1 <= ((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 768) / 224)) % 28))) && (((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 768) / 224)) % 28)) < 29)) && (((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 17)) ? *(int4*)(input + (((((((int)blockIdx.x) * 28672) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 8576)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 14336)) = ((((1 <= ((k_0 / 3) + (((((int)blockIdx.x) * 8) + 4) % 28))) && (1 <= ((((int)threadIdx.x) >> 3) + (k_0 % 3)))) && (((k_0 / 3) + (((((int)blockIdx.x) * 8) + 4) % 28)) < 29)) ? *(int4*)(input + (((((((int)blockIdx.x) * 28672) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 10624)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 16384)) = (((((1 <= ((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 1024) / 224)) % 28))) && (1 <= ((((((int)threadIdx.x) >> 3) + 16) % 28) + (k_0 % 3)))) && (((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 1024) / 224)) % 28)) < 29)) && (((((((int)threadIdx.x) >> 3) + 16) % 28) + (k_0 % 3)) < 29)) ? *(int4*)(input + (((((((int)blockIdx.x) * 28672) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 12672)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 18432)) = (((1 <= ((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 1152) / 224)) % 28))) && (((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 1152) / 224)) % 28)) < 29)) ? *(int4*)(input + (((((((int)blockIdx.x) * 28672) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 14720)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 20480)) = (((((1 <= ((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 1280) / 224)) % 28))) && (1 <= ((((((int)threadIdx.x) >> 3) + 20) % 28) + (k_0 % 3)))) && (((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 1280) / 224)) % 28)) < 29)) && (((((((int)threadIdx.x) >> 3) + 20) % 28) + (k_0 % 3)) < 29)) ? *(int4*)(input + (((((((int)blockIdx.x) * 28672) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 16768)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 22528)) = (((1 <= ((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 1408) / 224)) % 28))) && (((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 1408) / 224)) % 28)) < 29)) ? *(int4*)(input + (((((((int)blockIdx.x) * 28672) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 18816)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 24576)) = (((((1 <= ((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 1536) / 224)) % 28))) && (1 <= ((((((int)threadIdx.x) >> 3) + 24) % 28) + (k_0 % 3)))) && (((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 1536) / 224)) % 28)) < 29)) && (((((((int)threadIdx.x) >> 3) + 24) % 28) + (k_0 % 3)) < 29)) ? *(int4*)(input + (((((((int)blockIdx.x) * 28672) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 20864)) : make_int4(0, 0, 0, 0));
    *(int4*)(data_shared + ((((int)threadIdx.x) * 16) + 26624)) = ((((1 <= ((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 1664) / 224)) % 28))) && (((k_0 / 3) + (((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) + 1664) / 224)) % 28)) < 29)) && (((((int)threadIdx.x) >> 3) + (k_0 % 3)) < 17)) ? *(int4*)(input + (((((((int)blockIdx.x) * 28672) + ((k_0 / 3) * 3584)) + ((k_0 % 3) * 128)) + (((int)threadIdx.x) * 16)) + 22912)) : make_int4(0, 0, 0, 0));
    for (int ax0_ax1_fused_1 = 0; ax0_ax1_fused_1 < 16; ++ax0_ax1_fused_1) {
      B_decode_shared[((((int)threadIdx.x) * 16) + ax0_ax1_fused_1)] = ((weight[(((((((int)threadIdx.x) >> 3) * 576) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1 >> 1))] >> ((signed char)((ax0_ax1_fused_1 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_1 = 0; ax0_ax1_fused_1_1 < 16; ++ax0_ax1_fused_1_1) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_1) + 2048)] = ((weight[((((((((int)threadIdx.x) >> 3) * 576) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1_1 >> 1)) + 9216)] >> ((signed char)((ax0_ax1_fused_1_1 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_2 = 0; ax0_ax1_fused_1_2 < 16; ++ax0_ax1_fused_1_2) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_2) + 4096)] = ((weight[((((((((int)threadIdx.x) >> 3) * 576) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1_2 >> 1)) + 18432)] >> ((signed char)((ax0_ax1_fused_1_2 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_3 = 0; ax0_ax1_fused_1_3 < 16; ++ax0_ax1_fused_1_3) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_3) + 6144)] = ((weight[((((((((int)threadIdx.x) >> 3) * 576) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1_3 >> 1)) + 27648)] >> ((signed char)((ax0_ax1_fused_1_3 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_4 = 0; ax0_ax1_fused_1_4 < 16; ++ax0_ax1_fused_1_4) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_4) + 8192)] = ((weight[((((((((int)threadIdx.x) >> 3) * 576) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1_4 >> 1)) + 36864)] >> ((signed char)((ax0_ax1_fused_1_4 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_5 = 0; ax0_ax1_fused_1_5 < 16; ++ax0_ax1_fused_1_5) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_5) + 10240)] = ((weight[((((((((int)threadIdx.x) >> 3) * 576) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1_5 >> 1)) + 46080)] >> ((signed char)((ax0_ax1_fused_1_5 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_6 = 0; ax0_ax1_fused_1_6 < 16; ++ax0_ax1_fused_1_6) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_6) + 12288)] = ((weight[((((((((int)threadIdx.x) >> 3) * 576) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1_6 >> 1)) + 55296)] >> ((signed char)((ax0_ax1_fused_1_6 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_7 = 0; ax0_ax1_fused_1_7 < 16; ++ax0_ax1_fused_1_7) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_7) + 14336)] = ((weight[((((((((int)threadIdx.x) >> 3) * 576) + (k_0 * 64)) + ((((int)threadIdx.x) & 7) * 8)) + (ax0_ax1_fused_1_7 >> 1)) + 64512)] >> ((signed char)((ax0_ax1_fused_1_7 & 1) * 4))) & (signed char)15);
    }
    __syncthreads();
    for (int k_1 = 0; k_1 < 128; ++k_1) {
      T_conv_local[0] = (T_conv_local[0] + (((int)data_shared[(((((int)threadIdx.x) >> 5) * 128) + k_1)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[56] = (T_conv_local[56] + (((int)data_shared[(((((int)threadIdx.x) >> 5) * 128) + k_1)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[112] = (T_conv_local[112] + (((int)data_shared[(((((int)threadIdx.x) >> 5) * 128) + k_1)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[168] = (T_conv_local[168] + (((int)data_shared[(((((int)threadIdx.x) >> 5) * 128) + k_1)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[1] = (T_conv_local[1] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 512)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[57] = (T_conv_local[57] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 512)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[113] = (T_conv_local[113] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 512)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[169] = (T_conv_local[169] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 512)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[2] = (T_conv_local[2] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 1024)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[58] = (T_conv_local[58] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 1024)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[114] = (T_conv_local[114] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 1024)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[170] = (T_conv_local[170] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 1024)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[3] = (T_conv_local[3] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 1536)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[59] = (T_conv_local[59] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 1536)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[115] = (T_conv_local[115] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 1536)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[171] = (T_conv_local[171] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 1536)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[4] = (T_conv_local[4] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 2048)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[60] = (T_conv_local[60] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 2048)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[116] = (T_conv_local[116] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 2048)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[172] = (T_conv_local[172] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 2048)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[5] = (T_conv_local[5] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 2560)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[61] = (T_conv_local[61] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 2560)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[117] = (T_conv_local[117] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 2560)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[173] = (T_conv_local[173] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 2560)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[6] = (T_conv_local[6] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 3072)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[62] = (T_conv_local[62] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 3072)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[118] = (T_conv_local[118] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 3072)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[174] = (T_conv_local[174] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 3072)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[7] = (T_conv_local[7] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 3584)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[63] = (T_conv_local[63] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 3584)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[119] = (T_conv_local[119] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 3584)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[175] = (T_conv_local[175] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 3584)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[8] = (T_conv_local[8] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 4096)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[64] = (T_conv_local[64] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 4096)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[120] = (T_conv_local[120] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 4096)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[176] = (T_conv_local[176] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 4096)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[9] = (T_conv_local[9] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 4608)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[65] = (T_conv_local[65] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 4608)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[121] = (T_conv_local[121] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 4608)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[177] = (T_conv_local[177] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 4608)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[10] = (T_conv_local[10] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 5120)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[66] = (T_conv_local[66] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 5120)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[122] = (T_conv_local[122] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 5120)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[178] = (T_conv_local[178] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 5120)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[11] = (T_conv_local[11] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 5632)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[67] = (T_conv_local[67] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 5632)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[123] = (T_conv_local[123] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 5632)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[179] = (T_conv_local[179] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 5632)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[12] = (T_conv_local[12] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 6144)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[68] = (T_conv_local[68] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 6144)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[124] = (T_conv_local[124] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 6144)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[180] = (T_conv_local[180] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 6144)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[13] = (T_conv_local[13] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 6656)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[69] = (T_conv_local[69] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 6656)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[125] = (T_conv_local[125] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 6656)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[181] = (T_conv_local[181] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 6656)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[14] = (T_conv_local[14] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 7168)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[70] = (T_conv_local[70] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 7168)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[126] = (T_conv_local[126] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 7168)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[182] = (T_conv_local[182] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 7168)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[15] = (T_conv_local[15] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 7680)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[71] = (T_conv_local[71] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 7680)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[127] = (T_conv_local[127] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 7680)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[183] = (T_conv_local[183] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 7680)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[16] = (T_conv_local[16] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 8192)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[72] = (T_conv_local[72] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 8192)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[128] = (T_conv_local[128] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 8192)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[184] = (T_conv_local[184] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 8192)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[17] = (T_conv_local[17] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 8704)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[73] = (T_conv_local[73] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 8704)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[129] = (T_conv_local[129] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 8704)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[185] = (T_conv_local[185] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 8704)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[18] = (T_conv_local[18] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 9216)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[74] = (T_conv_local[74] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 9216)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[130] = (T_conv_local[130] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 9216)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[186] = (T_conv_local[186] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 9216)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[19] = (T_conv_local[19] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 9728)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[75] = (T_conv_local[75] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 9728)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[131] = (T_conv_local[131] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 9728)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[187] = (T_conv_local[187] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 9728)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[20] = (T_conv_local[20] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 10240)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[76] = (T_conv_local[76] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 10240)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[132] = (T_conv_local[132] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 10240)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[188] = (T_conv_local[188] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 10240)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[21] = (T_conv_local[21] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 10752)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[77] = (T_conv_local[77] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 10752)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[133] = (T_conv_local[133] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 10752)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[189] = (T_conv_local[189] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 10752)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[22] = (T_conv_local[22] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 11264)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[78] = (T_conv_local[78] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 11264)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[134] = (T_conv_local[134] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 11264)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[190] = (T_conv_local[190] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 11264)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[23] = (T_conv_local[23] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 11776)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[79] = (T_conv_local[79] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 11776)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[135] = (T_conv_local[135] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 11776)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[191] = (T_conv_local[191] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 11776)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[24] = (T_conv_local[24] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 12288)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[80] = (T_conv_local[80] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 12288)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[136] = (T_conv_local[136] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 12288)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[192] = (T_conv_local[192] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 12288)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[25] = (T_conv_local[25] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 12800)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[81] = (T_conv_local[81] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 12800)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[137] = (T_conv_local[137] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 12800)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[193] = (T_conv_local[193] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 12800)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[26] = (T_conv_local[26] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 13312)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[82] = (T_conv_local[82] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 13312)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[138] = (T_conv_local[138] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 13312)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[194] = (T_conv_local[194] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 13312)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[27] = (T_conv_local[27] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 13824)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[83] = (T_conv_local[83] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 13824)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[139] = (T_conv_local[139] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 13824)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[195] = (T_conv_local[195] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 13824)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[28] = (T_conv_local[28] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 14336)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[84] = (T_conv_local[84] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 14336)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[140] = (T_conv_local[140] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 14336)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[196] = (T_conv_local[196] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 14336)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[29] = (T_conv_local[29] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 14848)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[85] = (T_conv_local[85] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 14848)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[141] = (T_conv_local[141] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 14848)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[197] = (T_conv_local[197] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 14848)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[30] = (T_conv_local[30] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 15360)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[86] = (T_conv_local[86] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 15360)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[142] = (T_conv_local[142] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 15360)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[198] = (T_conv_local[198] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 15360)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[31] = (T_conv_local[31] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 15872)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[87] = (T_conv_local[87] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 15872)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[143] = (T_conv_local[143] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 15872)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[199] = (T_conv_local[199] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 15872)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[32] = (T_conv_local[32] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 16384)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[88] = (T_conv_local[88] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 16384)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[144] = (T_conv_local[144] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 16384)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[200] = (T_conv_local[200] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 16384)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[33] = (T_conv_local[33] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 16896)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[89] = (T_conv_local[89] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 16896)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[145] = (T_conv_local[145] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 16896)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[201] = (T_conv_local[201] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 16896)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[34] = (T_conv_local[34] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 17408)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[90] = (T_conv_local[90] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 17408)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[146] = (T_conv_local[146] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 17408)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[202] = (T_conv_local[202] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 17408)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[35] = (T_conv_local[35] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 17920)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[91] = (T_conv_local[91] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 17920)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[147] = (T_conv_local[147] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 17920)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[203] = (T_conv_local[203] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 17920)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[36] = (T_conv_local[36] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 18432)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[92] = (T_conv_local[92] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 18432)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[148] = (T_conv_local[148] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 18432)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[204] = (T_conv_local[204] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 18432)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[37] = (T_conv_local[37] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 18944)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[93] = (T_conv_local[93] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 18944)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[149] = (T_conv_local[149] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 18944)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[205] = (T_conv_local[205] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 18944)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[38] = (T_conv_local[38] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 19456)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[94] = (T_conv_local[94] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 19456)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[150] = (T_conv_local[150] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 19456)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[206] = (T_conv_local[206] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 19456)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[39] = (T_conv_local[39] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 19968)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[95] = (T_conv_local[95] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 19968)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[151] = (T_conv_local[151] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 19968)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[207] = (T_conv_local[207] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 19968)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[40] = (T_conv_local[40] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 20480)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[96] = (T_conv_local[96] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 20480)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[152] = (T_conv_local[152] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 20480)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[208] = (T_conv_local[208] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 20480)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[41] = (T_conv_local[41] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 20992)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[97] = (T_conv_local[97] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 20992)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[153] = (T_conv_local[153] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 20992)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[209] = (T_conv_local[209] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 20992)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[42] = (T_conv_local[42] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 21504)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[98] = (T_conv_local[98] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 21504)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[154] = (T_conv_local[154] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 21504)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[210] = (T_conv_local[210] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 21504)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[43] = (T_conv_local[43] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 22016)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[99] = (T_conv_local[99] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 22016)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[155] = (T_conv_local[155] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 22016)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[211] = (T_conv_local[211] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 22016)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[44] = (T_conv_local[44] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 22528)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[100] = (T_conv_local[100] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 22528)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[156] = (T_conv_local[156] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 22528)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[212] = (T_conv_local[212] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 22528)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[45] = (T_conv_local[45] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 23040)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[101] = (T_conv_local[101] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 23040)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[157] = (T_conv_local[157] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 23040)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[213] = (T_conv_local[213] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 23040)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[46] = (T_conv_local[46] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 23552)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[102] = (T_conv_local[102] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 23552)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[158] = (T_conv_local[158] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 23552)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[214] = (T_conv_local[214] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 23552)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[47] = (T_conv_local[47] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 24064)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[103] = (T_conv_local[103] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 24064)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[159] = (T_conv_local[159] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 24064)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[215] = (T_conv_local[215] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 24064)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[48] = (T_conv_local[48] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 24576)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[104] = (T_conv_local[104] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 24576)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[160] = (T_conv_local[160] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 24576)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[216] = (T_conv_local[216] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 24576)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[49] = (T_conv_local[49] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 25088)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[105] = (T_conv_local[105] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 25088)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[161] = (T_conv_local[161] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 25088)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[217] = (T_conv_local[217] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 25088)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[50] = (T_conv_local[50] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 25600)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[106] = (T_conv_local[106] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 25600)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[162] = (T_conv_local[162] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 25600)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[218] = (T_conv_local[218] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 25600)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[51] = (T_conv_local[51] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 26112)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[107] = (T_conv_local[107] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 26112)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[163] = (T_conv_local[163] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 26112)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[219] = (T_conv_local[219] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 26112)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[52] = (T_conv_local[52] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 26624)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[108] = (T_conv_local[108] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 26624)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[164] = (T_conv_local[164] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 26624)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[220] = (T_conv_local[220] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 26624)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[53] = (T_conv_local[53] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 27136)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[109] = (T_conv_local[109] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 27136)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[165] = (T_conv_local[165] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 27136)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[221] = (T_conv_local[221] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 27136)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[54] = (T_conv_local[54] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 27648)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[110] = (T_conv_local[110] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 27648)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[166] = (T_conv_local[166] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 27648)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[222] = (T_conv_local[222] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 27648)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
      T_conv_local[55] = (T_conv_local[55] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 28160)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 31) * 128) + k_1)])));
      T_conv_local[111] = (T_conv_local[111] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 28160)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 4096)])));
      T_conv_local[167] = (T_conv_local[167] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 28160)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 8192)])));
      T_conv_local[223] = (T_conv_local[223] + (((int)data_shared[((((((int)threadIdx.x) >> 5) * 128) + k_1) + 28160)]) * ((int)B_decode_shared[((((((int)threadIdx.x) & 31) * 128) + k_1) + 12288)])));
    }
  }
  T_conv[(((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31))] = T_conv_local[0];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 32)] = T_conv_local[56];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 64)] = T_conv_local[112];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 96)] = T_conv_local[168];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 512)] = T_conv_local[1];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 544)] = T_conv_local[57];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 576)] = T_conv_local[113];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 608)] = T_conv_local[169];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 1024)] = T_conv_local[2];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 1056)] = T_conv_local[58];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 1088)] = T_conv_local[114];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 1120)] = T_conv_local[170];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 1536)] = T_conv_local[3];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 1568)] = T_conv_local[59];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 1600)] = T_conv_local[115];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 1632)] = T_conv_local[171];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 2048)] = T_conv_local[4];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 2080)] = T_conv_local[60];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 2112)] = T_conv_local[116];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 2144)] = T_conv_local[172];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 2560)] = T_conv_local[5];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 2592)] = T_conv_local[61];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 2624)] = T_conv_local[117];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 2656)] = T_conv_local[173];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 3072)] = T_conv_local[6];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 3104)] = T_conv_local[62];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 3136)] = T_conv_local[118];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 3168)] = T_conv_local[174];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 3584)] = T_conv_local[7];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 3616)] = T_conv_local[63];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 3648)] = T_conv_local[119];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 3680)] = T_conv_local[175];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 4096)] = T_conv_local[8];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 4128)] = T_conv_local[64];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 4160)] = T_conv_local[120];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 4192)] = T_conv_local[176];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 4608)] = T_conv_local[9];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 4640)] = T_conv_local[65];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 4672)] = T_conv_local[121];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 4704)] = T_conv_local[177];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 5120)] = T_conv_local[10];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 5152)] = T_conv_local[66];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 5184)] = T_conv_local[122];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 5216)] = T_conv_local[178];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 5632)] = T_conv_local[11];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 5664)] = T_conv_local[67];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 5696)] = T_conv_local[123];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 5728)] = T_conv_local[179];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 6144)] = T_conv_local[12];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 6176)] = T_conv_local[68];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 6208)] = T_conv_local[124];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 6240)] = T_conv_local[180];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 6656)] = T_conv_local[13];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 6688)] = T_conv_local[69];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 6720)] = T_conv_local[125];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 6752)] = T_conv_local[181];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 7168)] = T_conv_local[14];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 7200)] = T_conv_local[70];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 7232)] = T_conv_local[126];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 7264)] = T_conv_local[182];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 7680)] = T_conv_local[15];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 7712)] = T_conv_local[71];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 7744)] = T_conv_local[127];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 7776)] = T_conv_local[183];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 8192)] = T_conv_local[16];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 8224)] = T_conv_local[72];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 8256)] = T_conv_local[128];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 8288)] = T_conv_local[184];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 8704)] = T_conv_local[17];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 8736)] = T_conv_local[73];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 8768)] = T_conv_local[129];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 8800)] = T_conv_local[185];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 9216)] = T_conv_local[18];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 9248)] = T_conv_local[74];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 9280)] = T_conv_local[130];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 9312)] = T_conv_local[186];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 9728)] = T_conv_local[19];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 9760)] = T_conv_local[75];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 9792)] = T_conv_local[131];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 9824)] = T_conv_local[187];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 10240)] = T_conv_local[20];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 10272)] = T_conv_local[76];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 10304)] = T_conv_local[132];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 10336)] = T_conv_local[188];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 10752)] = T_conv_local[21];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 10784)] = T_conv_local[77];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 10816)] = T_conv_local[133];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 10848)] = T_conv_local[189];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 11264)] = T_conv_local[22];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 11296)] = T_conv_local[78];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 11328)] = T_conv_local[134];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 11360)] = T_conv_local[190];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 11776)] = T_conv_local[23];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 11808)] = T_conv_local[79];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 11840)] = T_conv_local[135];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 11872)] = T_conv_local[191];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 12288)] = T_conv_local[24];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 12320)] = T_conv_local[80];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 12352)] = T_conv_local[136];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 12384)] = T_conv_local[192];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 12800)] = T_conv_local[25];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 12832)] = T_conv_local[81];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 12864)] = T_conv_local[137];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 12896)] = T_conv_local[193];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 13312)] = T_conv_local[26];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 13344)] = T_conv_local[82];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 13376)] = T_conv_local[138];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 13408)] = T_conv_local[194];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 13824)] = T_conv_local[27];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 13856)] = T_conv_local[83];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 13888)] = T_conv_local[139];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 13920)] = T_conv_local[195];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 14336)] = T_conv_local[28];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 14368)] = T_conv_local[84];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 14400)] = T_conv_local[140];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 14432)] = T_conv_local[196];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 14848)] = T_conv_local[29];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 14880)] = T_conv_local[85];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 14912)] = T_conv_local[141];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 14944)] = T_conv_local[197];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 15360)] = T_conv_local[30];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 15392)] = T_conv_local[86];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 15424)] = T_conv_local[142];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 15456)] = T_conv_local[198];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 15872)] = T_conv_local[31];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 15904)] = T_conv_local[87];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 15936)] = T_conv_local[143];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 15968)] = T_conv_local[199];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 16384)] = T_conv_local[32];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 16416)] = T_conv_local[88];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 16448)] = T_conv_local[144];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 16480)] = T_conv_local[200];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 16896)] = T_conv_local[33];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 16928)] = T_conv_local[89];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 16960)] = T_conv_local[145];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 16992)] = T_conv_local[201];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 17408)] = T_conv_local[34];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 17440)] = T_conv_local[90];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 17472)] = T_conv_local[146];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 17504)] = T_conv_local[202];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 17920)] = T_conv_local[35];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 17952)] = T_conv_local[91];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 17984)] = T_conv_local[147];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 18016)] = T_conv_local[203];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 18432)] = T_conv_local[36];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 18464)] = T_conv_local[92];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 18496)] = T_conv_local[148];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 18528)] = T_conv_local[204];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 18944)] = T_conv_local[37];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 18976)] = T_conv_local[93];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 19008)] = T_conv_local[149];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 19040)] = T_conv_local[205];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 19456)] = T_conv_local[38];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 19488)] = T_conv_local[94];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 19520)] = T_conv_local[150];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 19552)] = T_conv_local[206];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 19968)] = T_conv_local[39];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 20000)] = T_conv_local[95];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 20032)] = T_conv_local[151];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 20064)] = T_conv_local[207];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 20480)] = T_conv_local[40];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 20512)] = T_conv_local[96];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 20544)] = T_conv_local[152];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 20576)] = T_conv_local[208];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 20992)] = T_conv_local[41];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 21024)] = T_conv_local[97];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 21056)] = T_conv_local[153];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 21088)] = T_conv_local[209];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 21504)] = T_conv_local[42];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 21536)] = T_conv_local[98];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 21568)] = T_conv_local[154];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 21600)] = T_conv_local[210];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 22016)] = T_conv_local[43];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 22048)] = T_conv_local[99];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 22080)] = T_conv_local[155];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 22112)] = T_conv_local[211];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 22528)] = T_conv_local[44];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 22560)] = T_conv_local[100];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 22592)] = T_conv_local[156];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 22624)] = T_conv_local[212];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 23040)] = T_conv_local[45];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 23072)] = T_conv_local[101];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 23104)] = T_conv_local[157];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 23136)] = T_conv_local[213];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 23552)] = T_conv_local[46];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 23584)] = T_conv_local[102];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 23616)] = T_conv_local[158];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 23648)] = T_conv_local[214];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 24064)] = T_conv_local[47];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 24096)] = T_conv_local[103];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 24128)] = T_conv_local[159];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 24160)] = T_conv_local[215];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 24576)] = T_conv_local[48];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 24608)] = T_conv_local[104];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 24640)] = T_conv_local[160];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 24672)] = T_conv_local[216];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 25088)] = T_conv_local[49];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 25120)] = T_conv_local[105];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 25152)] = T_conv_local[161];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 25184)] = T_conv_local[217];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 25600)] = T_conv_local[50];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 25632)] = T_conv_local[106];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 25664)] = T_conv_local[162];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 25696)] = T_conv_local[218];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 26112)] = T_conv_local[51];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 26144)] = T_conv_local[107];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 26176)] = T_conv_local[163];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 26208)] = T_conv_local[219];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 26624)] = T_conv_local[52];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 26656)] = T_conv_local[108];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 26688)] = T_conv_local[164];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 26720)] = T_conv_local[220];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 27136)] = T_conv_local[53];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 27168)] = T_conv_local[109];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 27200)] = T_conv_local[165];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 27232)] = T_conv_local[221];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 27648)] = T_conv_local[54];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 27680)] = T_conv_local[110];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 27712)] = T_conv_local[166];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 27744)] = T_conv_local[222];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 28160)] = T_conv_local[55];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 28192)] = T_conv_local[111];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 28224)] = T_conv_local[167];
  T_conv[((((((int)blockIdx.x) * 28672) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)threadIdx.x) & 31)) + 28256)] = T_conv_local[223];
}


top1: 7.471917152404785 	top10: 4.844339370727539
--------------------------------------------------------------------------------
best config: {<Node, ladder_conv2d_reshape_bias>: {'block': [256, 64], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
best latency: 4.844339370727539
5.556279576302184 tflops, 3.83191694917392 %
n: 128, f: 128, h: 28, w: 28, c: 512, kh: 1, kw: 1, s: 1, d: 1, p: 0, oh: 28, ow: 28
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 64], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
3.300147294998169
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 128], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
4.966809272766113
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 64], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
3.7900352478027344
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 128], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
5.625657558441162
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 64], 'thread': [2, 64], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 16}}}
3.9159743785858154
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 128], 'thread': [1, 128], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 16}}}
4.068761348724365
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 64], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
6.166111946105957
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 64], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
5.602303981781006
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 64], 'thread': [7, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 8}}}
6.203597068786621
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 128], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
2.5663487911224365
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 32], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
6.888652801513672
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 32], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
4.219391822814941
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 128], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
3.0208001136779785
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 128], 'thread': [8, 16], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
12.685721397399902
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 32], 'thread': [14, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
4.520140647888184
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 128], 'thread': [4, 32], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
9.801318168640137
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 32], 'thread': [8, 16], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
9.61689567565918
{<Node, ladder_conv2d_reshape_bias>: {'block': [256, 64], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
2.615295886993408
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 128], 'thread': [2, 64], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 16}}}
2.620211124420166
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 64], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
2.2523903846740723
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 64], 'thread': [4, 32], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
10.138419151306152
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 32], 'thread': [4, 32], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
3.4301953315734863
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 32], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
3.14572811126709
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 64], 'thread': [4, 32], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
2.6775553226470947
{<Node, ladder_conv2d_reshape_bias>: {'block': [49, 32], 'thread': [7, 16], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
7.043071746826172
{<Node, ladder_conv2d_reshape_bias>: {'block': [64, 32], 'thread': [16, 8], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
10.612735748291016
{<Node, ladder_conv2d_reshape_bias>: {'block': [32, 64], 'thread': [8, 16], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
8.849203109741211
{<Node, ladder_conv2d_reshape_bias>: {'block': [28, 32], 'thread': [4, 32], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 8, 'B_decode': 16}}}
11.401010513305664
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 128], 'thread': [4, 32], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
16.483123779296875
{<Node, ladder_conv2d_reshape_bias>: {'block': [112, 16], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
6.100991725921631
{<Node, ladder_conv2d_reshape_bias>: {'block': [256, 128], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
3.1342592239379883
{<Node, ladder_conv2d_reshape_bias>: {'block': [128, 16], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
5.817139148712158
{<Node, ladder_conv2d_reshape_bias>: {'block': [224, 128], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
3.986022472381592
{<Node, ladder_conv2d_reshape_bias>: {'block': [16, 64], 'thread': [8, 16], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
19.728179931640625
{<Node, ladder_conv2d_reshape_bias>: {'block': [56, 16], 'thread': [8, 16], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
8.362496376037598
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 128], 'thread': [2, 64], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 2, 'B_decode': 16}}}
11.30516529083252
{<Node, ladder_conv2d_reshape_bias>: {'block': [196, 128], 'thread': [4, 32], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
2.616115093231201
{<Node, ladder_conv2d_reshape_bias>: {'block': [98, 16], 'thread': [14, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16}}}
6.357503890991211
{<Node, ladder_conv2d_reshape_bias>: {'block': [256, 32], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
3.2588798999786377
{<Node, ladder_conv2d_reshape_bias>: {'block': [14, 64], 'thread': [2, 64], 'rstep': [256], 'block_order': <NoRasterization>, 'vectorize': {'data': 4, 'B_decode': 16}}}
11.702272415161133
code:  __global__ void __launch_bounds__(128) Fused(int8_t* __restrict__ input, int8_t* __restrict__ weight, int* __restrict__ T_conv) {
  
  int T_conv_local[7];
  __shared__ signed char data_shared[3584];
  __shared__ signed char B_decode_shared[16384];
  T_conv_local[0] = 0;
  T_conv_local[1] = 0;
  T_conv_local[2] = 0;
  T_conv_local[3] = 0;
  T_conv_local[4] = 0;
  T_conv_local[5] = 0;
  T_conv_local[6] = 0;
  for (int k_0 = 0; k_0 < 2; ++k_0) {
    __syncthreads();
    *(int*)(data_shared + (((int)threadIdx.x) * 4)) = *(int*)(input + (((((((int)blockIdx.x) >> 1) * 7168) + ((((int)threadIdx.x) >> 6) * 512)) + (k_0 * 256)) + ((((int)threadIdx.x) & 63) * 4)));
    *(int*)(data_shared + ((((int)threadIdx.x) * 4) + 512)) = *(int*)(input + ((((((((int)blockIdx.x) >> 1) * 7168) + ((((int)threadIdx.x) >> 6) * 512)) + (k_0 * 256)) + ((((int)threadIdx.x) & 63) * 4)) + 1024));
    *(int*)(data_shared + ((((int)threadIdx.x) * 4) + 1024)) = *(int*)(input + ((((((((int)blockIdx.x) >> 1) * 7168) + ((((int)threadIdx.x) >> 6) * 512)) + (k_0 * 256)) + ((((int)threadIdx.x) & 63) * 4)) + 2048));
    *(int*)(data_shared + ((((int)threadIdx.x) * 4) + 1536)) = *(int*)(input + ((((((((int)blockIdx.x) >> 1) * 7168) + ((((int)threadIdx.x) >> 6) * 512)) + (k_0 * 256)) + ((((int)threadIdx.x) & 63) * 4)) + 3072));
    *(int*)(data_shared + ((((int)threadIdx.x) * 4) + 2048)) = *(int*)(input + ((((((((int)blockIdx.x) >> 1) * 7168) + ((((int)threadIdx.x) >> 6) * 512)) + (k_0 * 256)) + ((((int)threadIdx.x) & 63) * 4)) + 4096));
    *(int*)(data_shared + ((((int)threadIdx.x) * 4) + 2560)) = *(int*)(input + ((((((((int)blockIdx.x) >> 1) * 7168) + ((((int)threadIdx.x) >> 6) * 512)) + (k_0 * 256)) + ((((int)threadIdx.x) & 63) * 4)) + 5120));
    *(int*)(data_shared + ((((int)threadIdx.x) * 4) + 3072)) = *(int*)(input + ((((((((int)blockIdx.x) >> 1) * 7168) + ((((int)threadIdx.x) >> 6) * 512)) + (k_0 * 256)) + ((((int)threadIdx.x) & 63) * 4)) + 6144));
    for (int ax0_ax1_fused_1 = 0; ax0_ax1_fused_1 < 16; ++ax0_ax1_fused_1) {
      B_decode_shared[((((int)threadIdx.x) * 16) + ax0_ax1_fused_1)] = ((weight[((((((((int)blockIdx.x) & 1) * 16384) + ((((int)threadIdx.x) >> 4) * 256)) + (k_0 * 128)) + ((((int)threadIdx.x) & 15) * 8)) + (ax0_ax1_fused_1 >> 1))] >> ((signed char)((ax0_ax1_fused_1 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_1 = 0; ax0_ax1_fused_1_1 < 16; ++ax0_ax1_fused_1_1) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_1) + 2048)] = ((weight[(((((((((int)blockIdx.x) & 1) * 16384) + ((((int)threadIdx.x) >> 4) * 256)) + (k_0 * 128)) + ((((int)threadIdx.x) & 15) * 8)) + (ax0_ax1_fused_1_1 >> 1)) + 2048)] >> ((signed char)((ax0_ax1_fused_1_1 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_2 = 0; ax0_ax1_fused_1_2 < 16; ++ax0_ax1_fused_1_2) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_2) + 4096)] = ((weight[(((((((((int)blockIdx.x) & 1) * 16384) + ((((int)threadIdx.x) >> 4) * 256)) + (k_0 * 128)) + ((((int)threadIdx.x) & 15) * 8)) + (ax0_ax1_fused_1_2 >> 1)) + 4096)] >> ((signed char)((ax0_ax1_fused_1_2 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_3 = 0; ax0_ax1_fused_1_3 < 16; ++ax0_ax1_fused_1_3) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_3) + 6144)] = ((weight[(((((((((int)blockIdx.x) & 1) * 16384) + ((((int)threadIdx.x) >> 4) * 256)) + (k_0 * 128)) + ((((int)threadIdx.x) & 15) * 8)) + (ax0_ax1_fused_1_3 >> 1)) + 6144)] >> ((signed char)((ax0_ax1_fused_1_3 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_4 = 0; ax0_ax1_fused_1_4 < 16; ++ax0_ax1_fused_1_4) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_4) + 8192)] = ((weight[(((((((((int)blockIdx.x) & 1) * 16384) + ((((int)threadIdx.x) >> 4) * 256)) + (k_0 * 128)) + ((((int)threadIdx.x) & 15) * 8)) + (ax0_ax1_fused_1_4 >> 1)) + 8192)] >> ((signed char)((ax0_ax1_fused_1_4 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_5 = 0; ax0_ax1_fused_1_5 < 16; ++ax0_ax1_fused_1_5) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_5) + 10240)] = ((weight[(((((((((int)blockIdx.x) & 1) * 16384) + ((((int)threadIdx.x) >> 4) * 256)) + (k_0 * 128)) + ((((int)threadIdx.x) & 15) * 8)) + (ax0_ax1_fused_1_5 >> 1)) + 10240)] >> ((signed char)((ax0_ax1_fused_1_5 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_6 = 0; ax0_ax1_fused_1_6 < 16; ++ax0_ax1_fused_1_6) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_6) + 12288)] = ((weight[(((((((((int)blockIdx.x) & 1) * 16384) + ((((int)threadIdx.x) >> 4) * 256)) + (k_0 * 128)) + ((((int)threadIdx.x) & 15) * 8)) + (ax0_ax1_fused_1_6 >> 1)) + 12288)] >> ((signed char)((ax0_ax1_fused_1_6 & 1) * 4))) & (signed char)15);
    }
    for (int ax0_ax1_fused_1_7 = 0; ax0_ax1_fused_1_7 < 16; ++ax0_ax1_fused_1_7) {
      B_decode_shared[(((((int)threadIdx.x) * 16) + ax0_ax1_fused_1_7) + 14336)] = ((weight[(((((((((int)blockIdx.x) & 1) * 16384) + ((((int)threadIdx.x) >> 4) * 256)) + (k_0 * 128)) + ((((int)threadIdx.x) & 15) * 8)) + (ax0_ax1_fused_1_7 >> 1)) + 14336)] >> ((signed char)((ax0_ax1_fused_1_7 & 1) * 4))) & (signed char)15);
    }
    __syncthreads();
    for (int k_1 = 0; k_1 < 256; ++k_1) {
      T_conv_local[0] = (T_conv_local[0] + (((int)data_shared[(((((int)threadIdx.x) >> 6) * 256) + k_1)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 63) * 256) + k_1)])));
      T_conv_local[1] = (T_conv_local[1] + (((int)data_shared[((((((int)threadIdx.x) >> 6) * 256) + k_1) + 512)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 63) * 256) + k_1)])));
      T_conv_local[2] = (T_conv_local[2] + (((int)data_shared[((((((int)threadIdx.x) >> 6) * 256) + k_1) + 1024)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 63) * 256) + k_1)])));
      T_conv_local[3] = (T_conv_local[3] + (((int)data_shared[((((((int)threadIdx.x) >> 6) * 256) + k_1) + 1536)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 63) * 256) + k_1)])));
      T_conv_local[4] = (T_conv_local[4] + (((int)data_shared[((((((int)threadIdx.x) >> 6) * 256) + k_1) + 2048)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 63) * 256) + k_1)])));
      T_conv_local[5] = (T_conv_local[5] + (((int)data_shared[((((((int)threadIdx.x) >> 6) * 256) + k_1) + 2560)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 63) * 256) + k_1)])));
      T_conv_local[6] = (T_conv_local[6] + (((int)data_shared[((((((int)threadIdx.x) >> 6) * 256) + k_1) + 3072)]) * ((int)B_decode_shared[(((((int)threadIdx.x) & 63) * 256) + k_1)])));
    }
  }
  T_conv[(((((((int)blockIdx.x) >> 1) * 1792) + ((((int)threadIdx.x) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 63))] = T_conv_local[0];
  T_conv[((((((((int)blockIdx.x) >> 1) * 1792) + ((((int)threadIdx.x) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 63)) + 256)] = T_conv_local[1];
  T_conv[((((((((int)blockIdx.x) >> 1) * 1792) + ((((int)threadIdx.x) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 63)) + 512)] = T_conv_local[2];
  T_conv[((((((((int)blockIdx.x) >> 1) * 1792) + ((((int)threadIdx.x) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 63)) + 768)] = T_conv_local[3];
  T_conv[((((((((int)blockIdx.x) >> 1) * 1792) + ((((int)threadIdx.x) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 63)) + 1024)] = T_conv_local[4];
  T_conv[((((((((int)blockIdx.x) >> 1) * 1792) + ((((int)threadIdx.x) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 63)) + 1280)] = T_conv_local[5];
  T_conv[((((((((int)blockIdx.x) >> 1) * 1792) + ((((int)threadIdx.x) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 63)) + 1536)] = T_conv_local[6];
}


top1: 3.300147294998169 	top10: 2.2523903846740723
--------------------------------------------------------------------------------
best config: {<Node, ladder_conv2d_reshape_bias>: {'block': [224, 64], 'thread': [16, 8], 'rstep': [128], 'block_order': <NoRasterization>, 'vectorize': {'data': 16, 'B_decode': 16}}}
best latency: 2.2523903846740723
5.311197697521278 tflops, 3.662894963807778 %
1_64_56_56_64_3_3_1_1_1	0.053043197840452194
1_64_56_56_64_1_1_1_1_0	0.011605333536863327
1_128_28_28_128_3_3_1_1_1	0.1497087925672531
1_512_28_28_128_1_1_1_1_0	0.0913407951593399
128_64_56_56_64_3_3_1_1_1	5.624422550201416
128_64_56_56_64_1_1_1_1_0	0.3350527882575989
128_128_28_28_128_3_3_1_1_1	4.844339370727539
128_512_28_28_128_1_1_1_1_0	2.2523903846740723
