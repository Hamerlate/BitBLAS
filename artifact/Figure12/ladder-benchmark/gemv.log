fp32xmxfp8_gemv.py
2023-12-02 11:19:01 [ladder:DEBUG]: Using template: <class 'welder.schedule.tir_reduce_interthread.TIRReduceInterThreadScheduler'> config: {'block': [1, 8], 'thread': [1, 8], 'rstep': [448], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 4}}
the computation is inconsistent, is_a_consistent: True, is_b_consistent: False
self.config.compute_capability 80
2023-12-02 11:19:01 [ladder:DEBUG]: Using template: <class 'welder.schedule.tir_reduce_interthread.TIRReduceInterThreadScheduler'> config: {'block': [1, 4], 'thread': [1, 4], 'rstep': [896], 'reduce_thread': [32], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 4}}
the computation is inconsistent, is_a_consistent: True, is_b_consistent: False
self.config.compute_capability 80
2023-12-02 11:19:01 [ladder:DEBUG]: Using template: <class 'welder.schedule.tir_reduce_interthread.TIRReduceInterThreadScheduler'> config: {'block': [1, 32], 'thread': [1, 32], 'rstep': [112], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 4}}
the computation is inconsistent, is_a_consistent: True, is_b_consistent: False
self.config.compute_capability 80
2023-12-02 11:19:01 [ladder:DEBUG]: Using template: <class 'welder.schedule.tir_reduce_interthread.TIRReduceInterThreadScheduler'> config: {'block': [1, 16], 'thread': [1, 16], 'rstep': [224], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 4}}
the computation is inconsistent, is_a_consistent: True, is_b_consistent: False
self.config.compute_capability 80
2023-12-02 11:19:01 [ladder:DEBUG]: Using template: <class 'welder.schedule.tir_reduce_interthread.TIRReduceInterThreadScheduler'> config: {'block': [1, 2], 'thread': [1, 2], 'rstep': [1792], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B_decode': 4}}
the computation is inconsistent, is_a_consistent: True, is_b_consistent: False
self.config.compute_capability 80
2023-12-02 11:19:02 [ladder:DEBUG]: Using template: <class 'welder.schedule.tir_reduce_interthread.TIRReduceInterThreadScheduler'> config: {'block': [1, 1], 'thread': [1, 1], 'rstep': [1792], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B_decode': 2}}
the computation is inconsistent, is_a_consistent: True, is_b_consistent: False
self.config.compute_capability 80
2023-12-02 11:19:02 [ladder:DEBUG]: Using template: <class 'welder.schedule.tir_reduce_interthread.TIRReduceInterThreadScheduler'> config: {'block': [1, 64], 'thread': [1, 64], 'rstep': [112], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 4}}
the computation is inconsistent, is_a_consistent: True, is_b_consistent: False
self.config.compute_capability 80
{<Node, ladder_matmul>: {'block': [1, 8], 'thread': [1, 8], 'rstep': [448], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 4}}}
0.2242559939622879
{<Node, ladder_matmul>: {'block': [1, 4], 'thread': [1, 4], 'rstep': [896], 'reduce_thread': [32], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 4}}}
0.24739840626716614
{<Node, ladder_matmul>: {'block': [1, 32], 'thread': [1, 32], 'rstep': [112], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 4}}}
0.5893120169639587
{<Node, ladder_matmul>: {'block': [1, 16], 'thread': [1, 16], 'rstep': [224], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 4}}}
0.3701759874820709
{<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [1792], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B_decode': 4}}}
0.2176000028848648
{<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [1792], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B_decode': 2}}}
0.2465279996395111
{<Node, ladder_matmul>: {'block': [1, 64], 'thread': [1, 64], 'rstep': [112], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B_decode': 4}}}
0.8939520120620728
__global__ void __launch_bounds__(128) Fused(float* __restrict__ A, int8_t* __restrict__ B, uint8_t* __restrict__ Scales, float* __restrict__ C) {
  
  float in_thread_C_local[1];
  float A_local[4];
  signed char B_local[4];
  float B_decode_local[4];
  __shared__ float red_buf0[128];
  in_thread_C_local[0] = 0.000000e+00f;
  for (int k_0 = 0; k_0 < 112; ++k_0) {
    *(float4*)(A_local + 0) = *(float4*)(A + ((k_0 * 256) + (((int)threadIdx.x) * 4)));
    *(int*)(B_local + 0) = *(int*)(B + ((((((int)blockIdx.x) * 57344) + (((int)threadIdx.y) * 28672)) + (k_0 * 256)) + (((int)threadIdx.x) * 4)));
    for (int ax1 = 0; ax1 < 4; ++ax1) {
        uint __1 = (((max((((((((uint)B_local[ax1]) >> (uint)0) & (uint)255) >> (uint)2) & (uint)31) + ((uint)Scales[((((k_0 * 65536) + ((((int)threadIdx.x) >> 3) * 8192)) + (((int)blockIdx.x) * 2)) + ((int)threadIdx.y))])), (uint)63) | ((((((uint)B_local[ax1]) >> (uint)0) & (uint)255) >> (uint)7) << (uint)8)) << (uint)2) | (((((((uint)B_local[ax1]) >> (uint)0) & (uint)255) >> (uint)2) & (uint)31) & (uint)2)) << (uint)25;
      B_decode_local[ax1] = (*(float *)(&(__1)));
    }
    for (int k_2 = 0; k_2 < 4; ++k_2) {
      in_thread_C_local[0] = (in_thread_C_local[0] + (A_local[k_2] * B_decode_local[k_2]));
    }
  }
  __syncthreads();
  ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = in_thread_C_local[0];
  __syncthreads();
  if (((int)threadIdx.x) < 32) {
    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 32)]);
  }
  __syncthreads();
  if (((int)threadIdx.x) < 16) {
    float w_16_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 16)]);
    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_16_0;
    float w_8_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 8)]);
    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_8_0;
    float w_4_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 4)]);
    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_4_0;
    float w_2_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 2)]);
    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_2_0;
    float w_1_0 = (((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] + ((volatile float*)red_buf0)[(((((int)threadIdx.y) * 64) + ((int)threadIdx.x)) + 1)]);
    ((volatile float*)red_buf0)[((((int)threadIdx.y) * 64) + ((int)threadIdx.x))] = w_1_0;
  }
  __syncthreads();
  C[((((int)blockIdx.x) * 2) + ((int)threadIdx.y))] = ((volatile float*)red_buf0)[(((int)threadIdx.y) * 64)];
}


top1: 0.2242559939622879 	top10: 0.2176000028848648
--------------------------------------------------------------------------------
best config: {<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [1792], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B_decode': 4}}}
best latency: 0.2176000028848648
1_8192_28672	0.2176000028848648
fp32xfp32_gemv.py
{<Node, ladder_matmul>: {'block': [1, 4], 'thread': [1, 4], 'rstep': [1024], 'reduce_thread': [32], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.025600001215934753
{<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [2048], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.018636800348758698
{<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.01945599913597107
{<Node, ladder_matmul>: {'block': [1, 8], 'thread': [1, 8], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.03686400130391121
{<Node, ladder_matmul>: {'block': [1, 16], 'thread': [1, 16], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B': 4}}}
0.06533120572566986
{<Node, ladder_matmul>: {'block': [1, 32], 'thread': [1, 32], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.12738560140132904
{<Node, ladder_matmul>: {'block': [1, 64], 'thread': [1, 64], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.2482176125049591
{<Node, ladder_matmul>: {'block': [1, 128], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.4940800070762634
{<Node, ladder_matmul>: {'block': [1, 256], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.7391232252120972
top1: 0.025600001215934753 	top10: 0.018636800348758698
--------------------------------------------------------------------------------
best config: {<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [2048], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
best latency: 0.018636800348758698
{<Node, ladder_matmul>: {'block': [1, 4], 'thread': [1, 4], 'rstep': [1024], 'reduce_thread': [32], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.02600960060954094
{<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [2048], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.01884160004556179
{<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.018636800348758698
{<Node, ladder_matmul>: {'block': [1, 8], 'thread': [1, 8], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.03645440191030502
{<Node, ladder_matmul>: {'block': [1, 16], 'thread': [1, 16], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B': 4}}}
0.0655359998345375
{<Node, ladder_matmul>: {'block': [1, 32], 'thread': [1, 32], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.1271807998418808
{<Node, ladder_matmul>: {'block': [1, 64], 'thread': [1, 64], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.2482176125049591
{<Node, ladder_matmul>: {'block': [1, 128], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.4930559992790222
{<Node, ladder_matmul>: {'block': [1, 256], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.7391232252120972
top1: 0.02600960060954094 	top10: 0.018636800348758698
--------------------------------------------------------------------------------
best config: {<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
best latency: 0.018636800348758698
{<Node, ladder_matmul>: {'block': [1, 4], 'thread': [1, 4], 'rstep': [1024], 'reduce_thread': [32], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.16711679100990295
{<Node, ladder_matmul>: {'block': [1, 8], 'thread': [1, 8], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.1630208045244217
{<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [2048], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.1583103984594345
{<Node, ladder_matmul>: {'block': [1, 32], 'thread': [1, 32], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.2056191861629486
{<Node, ladder_matmul>: {'block': [1, 16], 'thread': [1, 16], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B': 4}}}
0.16465920209884644
{<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.15488000214099884
{<Node, ladder_matmul>: {'block': [1, 64], 'thread': [1, 64], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.3231744170188904
{<Node, ladder_matmul>: {'block': [1, 128], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.4981760084629059
{<Node, ladder_matmul>: {'block': [1, 256], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.7563263773918152
top1: 0.16711679100990295 	top10: 0.15488000214099884
--------------------------------------------------------------------------------
best config: {<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
best latency: 0.15488000214099884
{<Node, ladder_matmul>: {'block': [1, 4], 'thread': [1, 4], 'rstep': [1024], 'reduce_thread': [32], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.16711679100990295
{<Node, ladder_matmul>: {'block': [1, 8], 'thread': [1, 8], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.16281600296497345
{<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [2048], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.15851520001888275
{<Node, ladder_matmul>: {'block': [1, 32], 'thread': [1, 32], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.20643839240074158
{<Node, ladder_matmul>: {'block': [1, 16], 'thread': [1, 16], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B': 4}}}
0.16527359187602997
{<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.15615999698638916
{<Node, ladder_matmul>: {'block': [1, 64], 'thread': [1, 64], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.3233792185783386
{<Node, ladder_matmul>: {'block': [1, 128], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.4981760084629059
{<Node, ladder_matmul>: {'block': [1, 256], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.7559167742729187
top1: 0.16711679100990295 	top10: 0.15615999698638916
--------------------------------------------------------------------------------
best config: {<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
best latency: 0.15615999698638916
{<Node, ladder_matmul>: {'block': [1, 14], 'thread': [1, 14], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.5877760052680969
{<Node, ladder_matmul>: {'block': [1, 7], 'thread': [1, 7], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.5453823804855347
{<Node, ladder_matmul>: {'block': [1, 8], 'thread': [1, 8], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.5609471797943115
{<Node, ladder_matmul>: {'block': [1, 16], 'thread': [1, 16], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B': 4}}}
0.6127616167068481
{<Node, ladder_matmul>: {'block': [1, 4], 'thread': [1, 4], 'rstep': [1024], 'reduce_thread': [32], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.5416959524154663
{<Node, ladder_matmul>: {'block': [1, 28], 'thread': [1, 28], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.5992447733879089
{<Node, ladder_matmul>: {'block': [1, 32], 'thread': [1, 32], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.5988351702690125
{<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [2048], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.5304319858551025
{<Node, ladder_matmul>: {'block': [1, 112], 'thread': [1, 112], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.7600640058517456
{<Node, ladder_matmul>: {'block': [1, 56], 'thread': [1, 56], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.8230912089347839
{<Node, ladder_matmul>: {'block': [1, 128], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.8821759819984436
{<Node, ladder_matmul>: {'block': [1, 64], 'thread': [1, 64], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.8251392245292664
{<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.5230079889297485
{<Node, ladder_matmul>: {'block': [1, 224], 'thread': [1, 112], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.0362880229949951
{<Node, ladder_matmul>: {'block': [1, 256], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.1761664152145386
top1: 0.5877760052680969 	top10: 0.5230079889297485
--------------------------------------------------------------------------------
best config: {<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
best latency: 0.5230079889297485
{<Node, ladder_matmul>: {'block': [1, 14], 'thread': [1, 14], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.5849088430404663
{<Node, ladder_matmul>: {'block': [1, 7], 'thread': [1, 7], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.5466111898422241
{<Node, ladder_matmul>: {'block': [1, 8], 'thread': [1, 8], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.5638144016265869
{<Node, ladder_matmul>: {'block': [1, 16], 'thread': [1, 16], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B': 4}}}
0.6098943948745728
{<Node, ladder_matmul>: {'block': [1, 4], 'thread': [1, 4], 'rstep': [1024], 'reduce_thread': [32], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.5394431948661804
{<Node, ladder_matmul>: {'block': [1, 28], 'thread': [1, 28], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.5982207655906677
{<Node, ladder_matmul>: {'block': [1, 32], 'thread': [1, 32], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.6000639796257019
{<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [2048], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.5328896045684814
{<Node, ladder_matmul>: {'block': [1, 112], 'thread': [1, 112], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.7575551867485046
{<Node, ladder_matmul>: {'block': [1, 56], 'thread': [1, 56], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.8194047808647156
{<Node, ladder_matmul>: {'block': [1, 128], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.8847360014915466
{<Node, ladder_matmul>: {'block': [1, 64], 'thread': [1, 64], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.8239104151725769
{<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.5207039713859558
{<Node, ladder_matmul>: {'block': [1, 224], 'thread': [1, 112], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.034444808959961
{<Node, ladder_matmul>: {'block': [1, 256], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.1743232011795044
top1: 0.5849088430404663 	top10: 0.5207039713859558
--------------------------------------------------------------------------------
best config: {<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
best latency: 0.5207039713859558
{<Node, ladder_matmul>: {'block': [1, 4], 'thread': [1, 4], 'rstep': [1024], 'reduce_thread': [32], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.5781503915786743
{<Node, ladder_matmul>: {'block': [1, 8], 'thread': [1, 8], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.5513216257095337
{<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [2048], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.5433343648910522
{<Node, ladder_matmul>: {'block': [1, 32], 'thread': [1, 32], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.7282688021659851
{<Node, ladder_matmul>: {'block': [1, 16], 'thread': [1, 16], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B': 4}}}
0.578764796257019
{<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.5392383933067322
{<Node, ladder_matmul>: {'block': [1, 64], 'thread': [1, 64], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.1708415746688843
{<Node, ladder_matmul>: {'block': [1, 128], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.7679359912872314
{<Node, ladder_matmul>: {'block': [1, 256], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.7518975734710693
top1: 0.5781503915786743 	top10: 0.5392383933067322
--------------------------------------------------------------------------------
best config: {<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
best latency: 0.5392383933067322
{<Node, ladder_matmul>: {'block': [1, 21], 'thread': [1, 21], 'rstep': [256], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.5607807636260986
{<Node, ladder_matmul>: {'block': [1, 112], 'thread': [1, 112], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.7825791835784912
{<Node, ladder_matmul>: {'block': [1, 56], 'thread': [1, 56], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.107801675796509
{<Node, ladder_matmul>: {'block': [1, 28], 'thread': [1, 28], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.5495167970657349
{<Node, ladder_matmul>: {'block': [1, 8], 'thread': [1, 8], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
1.4336000680923462
{<Node, ladder_matmul>: {'block': [1, 12], 'thread': [1, 12], 'rstep': [448], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.4319616556167603
{<Node, ladder_matmul>: {'block': [1, 16], 'thread': [1, 16], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B': 4}}}
1.4311424493789673
{<Node, ladder_matmul>: {'block': [1, 6], 'thread': [1, 6], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.4227455854415894
{<Node, ladder_matmul>: {'block': [1, 14], 'thread': [1, 14], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.4340096712112427
{<Node, ladder_matmul>: {'block': [1, 7], 'thread': [1, 7], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.411072015762329
{<Node, ladder_matmul>: {'block': [1, 24], 'thread': [1, 24], 'rstep': [224], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.5443967580795288
{<Node, ladder_matmul>: {'block': [1, 4], 'thread': [1, 4], 'rstep': [1024], 'reduce_thread': [32], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
1.404313564300537
{<Node, ladder_matmul>: {'block': [1, 42], 'thread': [1, 42], 'rstep': [128], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.0975615978240967
{<Node, ladder_matmul>: {'block': [1, 128], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.1125121116638184
{<Node, ladder_matmul>: {'block': [1, 64], 'thread': [1, 64], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.0983808040618896
{<Node, ladder_matmul>: {'block': [1, 32], 'thread': [1, 32], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.5511552095413208
{<Node, ladder_matmul>: {'block': [1, 3], 'thread': [1, 3], 'rstep': [1024], 'reduce_thread': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.3998080492019653
{<Node, ladder_matmul>: {'block': [1, 48], 'thread': [1, 48], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.0989952087402344
{<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [2048], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
1.3965312242507935
{<Node, ladder_matmul>: {'block': [1, 168], 'thread': [1, 84], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.135040044784546
top1: 1.5607807636260986 	top10: 1.3965312242507935
--------------------------------------------------------------------------------
best config: {<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [2048], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
best latency: 1.3965312242507935
{<Node, ladder_matmul>: {'block': [1, 7], 'thread': [1, 7], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.5036032199859619
{<Node, ladder_matmul>: {'block': [1, 8], 'thread': [1, 8], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.5265408158302307
{<Node, ladder_matmul>: {'block': [1, 14], 'thread': [1, 14], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.4933632016181946
{<Node, ladder_matmul>: {'block': [1, 4], 'thread': [1, 4], 'rstep': [1024], 'reduce_thread': [32], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.49090561270713806
{<Node, ladder_matmul>: {'block': [1, 16], 'thread': [1, 16], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B': 4}}}
0.49274879693984985
{<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [2048], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.47493118047714233
{<Node, ladder_matmul>: {'block': [1, 56], 'thread': [1, 56], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.8165375590324402
{<Node, ladder_matmul>: {'block': [1, 28], 'thread': [1, 28], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.5607423782348633
{<Node, ladder_matmul>: {'block': [1, 64], 'thread': [1, 64], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.820633590221405
{<Node, ladder_matmul>: {'block': [1, 32], 'thread': [1, 32], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
0.5580800175666809
{<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
0.4646912217140198
{<Node, ladder_matmul>: {'block': [1, 112], 'thread': [1, 112], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.0862079858779907
{<Node, ladder_matmul>: {'block': [1, 128], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.2797951698303223
{<Node, ladder_matmul>: {'block': [1, 224], 'thread': [1, 112], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.2861440181732178
{<Node, ladder_matmul>: {'block': [1, 256], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.447116732597351
top1: 0.5036032199859619 	top10: 0.4646912217140198
--------------------------------------------------------------------------------
best config: {<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
best latency: 0.4646912217140198
{<Node, ladder_matmul>: {'block': [1, 28], 'thread': [1, 28], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.1921792030334473
{<Node, ladder_matmul>: {'block': [1, 14], 'thread': [1, 14], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.9089409112930298
{<Node, ladder_matmul>: {'block': [1, 7], 'thread': [1, 7], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.8718719482421875
{<Node, ladder_matmul>: {'block': [1, 8], 'thread': [1, 8], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
1.886207938194275
{<Node, ladder_matmul>: {'block': [1, 16], 'thread': [1, 16], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B': 4}}}
2.0176894664764404
{<Node, ladder_matmul>: {'block': [1, 32], 'thread': [1, 32], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.3949313163757324
{<Node, ladder_matmul>: {'block': [1, 4], 'thread': [1, 4], 'rstep': [1024], 'reduce_thread': [32], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
1.862451195716858
{<Node, ladder_matmul>: {'block': [1, 56], 'thread': [1, 56], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.8014590740203857
{<Node, ladder_matmul>: {'block': [1, 64], 'thread': [1, 64], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.794700860977173
{<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [2048], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
1.8585599660873413
{<Node, ladder_matmul>: {'block': [1, 224], 'thread': [1, 112], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.841395139694214
{<Node, ladder_matmul>: {'block': [1, 112], 'thread': [1, 112], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.2702078819274902
{<Node, ladder_matmul>: {'block': [1, 128], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.6632192134857178
{<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
1.8327553272247314
{<Node, ladder_matmul>: {'block': [1, 256], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
3.1868929862976074
top1: 2.1921792030334473 	top10: 1.8327553272247314
--------------------------------------------------------------------------------
best config: {<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
best latency: 1.8327553272247314
{<Node, ladder_matmul>: {'block': [1, 7], 'thread': [1, 7], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.0387840270996094
{<Node, ladder_matmul>: {'block': [1, 8], 'thread': [1, 8], 'rstep': [512], 'reduce_thread': [16], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
2.1465086936950684
{<Node, ladder_matmul>: {'block': [1, 14], 'thread': [1, 14], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
1.9501056671142578
{<Node, ladder_matmul>: {'block': [1, 4], 'thread': [1, 4], 'rstep': [1024], 'reduce_thread': [32], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
1.9691520929336548
{<Node, ladder_matmul>: {'block': [1, 16], 'thread': [1, 16], 'rstep': [256], 'reduce_thread': [8], 'block_order': <NoRasterization>, 'vectorize': {'A': 2, 'B': 4}}}
1.9542014598846436
{<Node, ladder_matmul>: {'block': [1, 2], 'thread': [1, 2], 'rstep': [2048], 'reduce_thread': [64], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
1.8896896839141846
{<Node, ladder_matmul>: {'block': [1, 56], 'thread': [1, 56], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
3.2778239250183105
{<Node, ladder_matmul>: {'block': [1, 28], 'thread': [1, 28], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.245222568511963
{<Node, ladder_matmul>: {'block': [1, 64], 'thread': [1, 64], 'rstep': [64], 'reduce_thread': [2], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
3.3075199127197266
{<Node, ladder_matmul>: {'block': [1, 32], 'thread': [1, 32], 'rstep': [128], 'reduce_thread': [4], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
2.2517759799957275
{<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
1.8665472269058228
{<Node, ladder_matmul>: {'block': [1, 112], 'thread': [1, 112], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
4.5496320724487305
{<Node, ladder_matmul>: {'block': [1, 128], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
5.154406547546387
{<Node, ladder_matmul>: {'block': [1, 224], 'thread': [1, 112], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
5.1212286949157715
{<Node, ladder_matmul>: {'block': [1, 256], 'thread': [1, 128], 'rstep': [32], 'block_order': <NoRasterization>, 'vectorize': {'B': 4}}}
5.771468639373779
top1: 2.0387840270996094 	top10: 1.8665472269058228
--------------------------------------------------------------------------------
best config: {<Node, ladder_matmul>: {'block': [1, 1], 'thread': [1, 1], 'rstep': [2048], 'reduce_thread': [128], 'block_order': <NoRasterization>, 'vectorize': {'A': 4, 'B': 4}}}
best latency: 1.8665472269058228
1_1024_8192	0.018636800348758698
1_1024_8192	0.018636800348758698
1_8192_8192	0.15488000214099884
1_8192_8192	0.15615999698638916
1_28672_8192	0.5230079889297485
1_28672_8192	0.5207039713859558
1_8192_28672	0.5392383933067322
1_43008_14336	1.3965312242507935
1_14336_14336	0.4646912217140198
1_57344_14336	1.8327553272247314
1_14336_57344	1.8665472269058228
