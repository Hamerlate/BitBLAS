import time

import torch


def conv_nchw(n, f, h, w, c, kh, kw, s, d, p):
    inh = (h - 1) * s + (kh - 1) * d + 1 - 2 * p
    inw = (w - 1) * s + (kw - 1) * d + 1 - 2 * p
    a = torch.randn(n, c, inh, inw, device=0, dtype=torch.float16)
    b = torch.randn(f, c, kh, kw, device=0, dtype=torch.float16)
    nstep = 100
    torch.cuda.synchronize()
    tic = time.time()
    for _ in range(nstep):
        c = torch.conv2d(a, b, stride=s, padding=p, dilation=d)
    torch.cuda.synchronize()
    return (time.time() - tic) * 1000 / nstep

c_lists = [
    ('C0', conv_nchw, [128, 128, 28, 28, 128, 3, 3, 1, 1, 1]),
    ('C1', conv_nchw, [128, 128, 28, 28, 128, 3, 3, 2, 1, 0]),
    ('C2', conv_nchw, [128, 256, 14, 14, 256, 3, 3, 2, 1, 0]),
    ('C3', conv_nchw, [128, 168, 42, 42, 168, 1, 1, 1, 1, 0]),
    ('C4', conv_nchw, [128, 512, 7, 7, 512, 3, 3, 1, 1, 1]),
    ('C5', conv_nchw, [128, 1024, 14, 14, 256, 1, 1, 1, 1, 0]),
    ('C6', conv_nchw, [128, 256, 14, 14, 1024, 1, 1, 1, 1, 0]),
    ('C7', conv_nchw, [128, 512, 14, 14, 1024, 1, 1, 1, 1, 0]),
    ('C8', conv_nchw, [128, 168, 21, 21, 1008, 1, 1, 1, 1, 0]),
    ('C9', conv_nchw, [128, 42, 83, 83, 42, 1, 1, 1, 1, 0]),
    ('C10', conv_nchw, [128, 672, 11, 11, 4032, 1, 1, 1, 1, 0]),
    ('C11', conv_nchw, [128, 512, 7, 7, 512, 3, 3, 2, 1, 0]),
    ('C12', conv_nchw, [128, 42, 83, 83, 96, 1, 1, 1, 1, 0]),
    ('C13', conv_nchw, [128, 42, 165, 165, 96, 1, 1, 1, 1, 0]),
    ('C14', conv_nchw, [128, 84, 83, 83, 168, 1, 1, 1, 1, 0]),
    ('C15', conv_nchw, [128, 336, 21, 21, 336, 1, 1, 1, 1, 0]),
    ('C16', conv_nchw, [128, 1024, 14, 14, 512, 1, 1, 2, 1, 0]),
    ('C17', conv_nchw, [128, 256, 56, 56, 64, 1, 1, 1, 1, 0]),
    ('C18', conv_nchw, [128, 64, 56, 56, 256, 1, 1, 1, 1, 0]),
    ('C19', conv_nchw, [128, 512, 28, 28, 128, 1, 1, 1, 1, 0]),
    ('C20', conv_nchw, [128, 128, 28, 28, 512, 1, 1, 1, 1, 0]),
    ('C21', conv_nchw, [128, 84, 42, 42, 168, 1, 1, 1, 1, 0]),
    ('C22', conv_nchw, [128, 256, 28, 28, 512, 1, 1, 1, 1, 0]),
    ('C23', conv_nchw, [128, 64, 56, 56, 64, 3, 3, 1, 1, 1]),
    ('C24', conv_nchw, [128, 672, 21, 21, 2016, 1, 1, 1, 1, 0]),
    ('C25', conv_nchw, [128, 2048, 7, 7, 512, 1, 1, 1, 1, 0]),
    ('C26', conv_nchw, [128, 512, 7, 7, 2048, 1, 1, 1, 1, 0]),
    ('C27', conv_nchw, [128, 84, 42, 42, 84, 1, 1, 1, 1, 0]),
    ('C28', conv_nchw, [128, 168, 42, 42, 336, 1, 1, 1, 1, 0]),
    ('C29', conv_nchw, [128, 672, 11, 11, 672, 1, 1, 1, 1, 0]),
    ('C30', conv_nchw, [128, 2048, 7, 7, 1024, 1, 1, 2, 1, 0]),
    ('C31', conv_nchw, [128, 336, 11, 11, 2016, 1, 1, 1, 1, 0]),
    ('C32', conv_nchw, [128, 336, 21, 21, 2016, 1, 1, 1, 1, 0]),
    ('C33', conv_nchw, [128, 336, 42, 42, 1008, 1, 1, 1, 1, 0]),
    ('C34', conv_nchw, [128, 64, 56, 56, 64, 1, 1, 1, 1, 0]),
    ('C35', conv_nchw, [128, 64, 112, 112, 3, 7, 7, 2, 1, 0]),
    ('C36', conv_nchw, [128, 96, 165, 165, 3, 3, 3, 2, 1, 0]),
    ('C37', conv_nchw, [128, 128, 56, 56, 256, 1, 1, 1, 1, 0]),
    ('C38', conv_nchw, [128, 256, 14, 14, 256, 3, 3, 1, 1, 0]),
    ('C39', conv_nchw, [128, 672, 11, 11, 2688, 1, 1, 1, 1, 0]),
    ('C40', conv_nchw, [128, 168, 42, 42, 1008, 1, 1, 1, 1, 0]),
    ('C41', conv_nchw, [128, 42, 83, 83, 96, 1, 1, 1, 1, 0]),
    ('C42', conv_nchw, [128, 512, 28, 28, 256, 1, 1, 2, 1, 0]),
    ('C43', conv_nchw, [128, 336, 21, 21, 1344, 1, 1, 1, 1, 0]),
]

for name, func, args in c_lists:
    value = func(*args)
    print(name, value)
